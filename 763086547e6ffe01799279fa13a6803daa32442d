{
  "comments": [
    {
      "key": {
        "uuid": "9de0631a_99f3ed41",
        "filename": "src/add-ons/kernel/file_systems/reiserfs/Iterators.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1327,
      "author": {
        "id": 1000336
      },
      "writtenOn": "2021-10-17T19:27:41Z",
      "side": 1,
      "message": "It looks strange to me that off_t + size_t types are promoted to unsigned. Any ideas?",
      "revId": "763086547e6ffe01799279fa13a6803daa32442d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e21178d1_daf9c933",
        "filename": "src/add-ons/kernel/file_systems/reiserfs/Iterators.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1327,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2021-10-22T08:44:39Z",
      "side": 1,
      "message": "This is definitely wrong for 32bit systems, where off_t is 64bit but unsigned is 32bit.\n\nThe promotion rules in C promote towards unsigned, so if you have a size_t in the operation, the result is unsigned (but in this case I think it will be unsigned long).\n\nI think you should cast to uint64 instead of just unsigned here.",
      "parentUuid": "9de0631a_99f3ed41",
      "revId": "763086547e6ffe01799279fa13a6803daa32442d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d9914a00_4c3bc7b4",
        "filename": "src/add-ons/kernel/file_systems/reiserfs/Iterators.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1327,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2021-10-22T10:27:04Z",
      "side": 1,
      "message": "casting bufferSize to off_t would be correct.",
      "parentUuid": "e21178d1_daf9c933",
      "revId": "763086547e6ffe01799279fa13a6803daa32442d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e6f35ed7_b98f5022",
        "filename": "src/add-ons/kernel/file_systems/reiserfs/Settings.cpp",
        "patchSetId": 3
      },
      "lineNbr": 150,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2021-10-22T08:44:39Z",
      "side": 1,
      "message": "Probably better to use a while loop here:\n\n    int32 i \u003d 0;\n    const char* entry;\n    while ((entry \u003d HiddenEntryAt(i)) !\u003d NULL) {\n        PRINT(...);\n        i++;\n    }\n\nI\u0027m not sure if the double call to HiddenEntryAt function will be optimized, if not, it would make the code slower.",
      "revId": "763086547e6ffe01799279fa13a6803daa32442d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    }
  ]
}