{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c269bb87_dc1dc0a3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000172
      },
      "writtenOn": "2023-03-21T16:59:52Z",
      "side": 1,
      "message": "This changeset (relation chain) is a refactoring to allow handling of non-x86 hardware. For x86 it currently preserve current behavior with attaching PCI host controller node to device root node. Attaching PCI node to ACPI node may cause regressions on older hardware.",
      "revId": "d7be54073b734edda1678a07c79f85c7c2c31e25",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6b4c7fa7_0eace123",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2023-03-22T06:09:31Z",
      "side": 1,
      "message": "It should still work with or without ACPI anyway. Is there no non-x86 hardware, which depends on ACPI for PCI bus configuration?",
      "parentUuid": "c269bb87_dc1dc0a3",
      "revId": "d7be54073b734edda1678a07c79f85c7c2c31e25",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "836c21e8_e2719e61",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000172
      },
      "writtenOn": "2023-03-22T09:10:47Z",
      "side": 1,
      "message": "riscv64, arm[64] may use FDT or ACPI for PCI host controller detection.",
      "parentUuid": "6b4c7fa7_0eace123",
      "revId": "d7be54073b734edda1678a07c79f85c7c2c31e25",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f87605d9_12c31231",
        "filename": "src/add-ons/kernel/busses/pci/x86/PciControllerX86.cpp",
        "patchSetId": 3
      },
      "lineNbr": 39,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2023-03-21T13:50:41Z",
      "side": 1,
      "message": "The expectation in https://review.haiku-os.org/c/haiku/+/5182 was to make the PCI legacy bus under ACPI. Did I miss this change in the series? Or make this optional somehow.\nAnd what about PCI controllers PNP0A08/PNP0A03?",
      "revId": "d7be54073b734edda1678a07c79f85c7c2c31e25",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "37f62028_b973107b",
        "filename": "src/add-ons/kernel/busses/pci/x86/PciControllerX86.cpp",
        "patchSetId": 3
      },
      "lineNbr": 39,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2023-03-22T09:19:27Z",
      "side": 1,
      "message": "I think this series of changes moving the PCI implementations to proper modules will allow to more cleanly implement things on x86.\n\nFor the ACPI case I think we can use pci/ecam, which should not be architecture specific? And we can have a pci/x86_pnp or x86_legacy for the other methods of detection (PNP0A08, PNP0A03, possibly others) which are specific to legacy x86 hardware.\n\nWe just have to check that we don\u0027t enumerate the same PCI bus twice (discovered through both ACPI and PNP for example) on BIOS systems with ACPI.",
      "parentUuid": "f87605d9_12c31231",
      "revId": "d7be54073b734edda1678a07c79f85c7c2c31e25",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "27fc542b_9e0e145d",
        "filename": "src/add-ons/kernel/busses/pci/x86/PciControllerX86.cpp",
        "patchSetId": 3
      },
      "lineNbr": 39,
      "author": {
        "id": 1000172
      },
      "writtenOn": "2023-03-22T09:51:06Z",
      "side": 1,
      "message": "\u003e We just have to check that we don\u0027t enumerate the same PCI bus twice (discovered through both ACPI and PNP for example) on BIOS systems with ACPI.\n\nI wonder how to implement it gracefully. Currently device manager module probe order is undefined so legacy PCI module can be registered before ACPI one.",
      "parentUuid": "37f62028_b973107b",
      "revId": "d7be54073b734edda1678a07c79f85c7c2c31e25",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1a382ab0_64a96ad2",
        "filename": "src/add-ons/kernel/busses/pci/x86/PciControllerX86.cpp",
        "patchSetId": 3
      },
      "lineNbr": 39,
      "author": {
        "id": 1000172
      },
      "writtenOn": "2023-03-22T21:46:50Z",
      "side": 1,
      "message": "Added ACPI support to ecam add-on.",
      "parentUuid": "27fc542b_9e0e145d",
      "revId": "d7be54073b734edda1678a07c79f85c7c2c31e25",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}