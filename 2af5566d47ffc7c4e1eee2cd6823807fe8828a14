{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "36894c0b_6fbb21f0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-02-22T20:50:51Z",
      "side": 1,
      "message": "see https://dev.haiku-os.org/ticket/17612 for details.  This is 100% an xy issue (and I noted as much in the ICU bug at https://unicode-org.atlassian.net/browse/ICU-21920)\n\nI think matching FreeBSD is prudent since we don\u0027t want to have the absolute lowest max argument size.",
      "revId": "2af5566d47ffc7c4e1eee2cd6823807fe8828a14",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dce5ec85_b2aa54ce",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-02-22T20:54:34Z",
      "side": 1,
      "message": "Just use Linux\u0027s value. From what I\u0027ve observed, this constant isn\u0027t used for sizing a fixed buffer, but rather just for sanity checking. Ergo, just match Linux. It won\u0027t use any more memory than currently, and will future proof us for more insane binaries that\u0027ll work on Linux but not Haiku.",
      "revId": "2af5566d47ffc7c4e1eee2cd6823807fe8828a14",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c0142f89_b8aa4563",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-02-22T21:07:51Z",
      "side": 1,
      "message": "My only reservation to that was a comment made by a FreeBSD developer:\nhttps://bugs.freebsd.org/bugzilla/show_bug.cgi?id\u003d208154#c3\n\n\"Increasing ARG_MAX would consume (much) more KVA on KVA-starved architectures, basically all 32bits, esp. PAE-like configs.\"",
      "parentUuid": "dce5ec85_b2aa54ce",
      "revId": "2af5566d47ffc7c4e1eee2cd6823807fe8828a14",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6265d488_42aacb56",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-02-22T21:10:01Z",
      "side": 1,
      "message": "If we wanted to match linux we would effectively need to (2048 * 1024)\n\nDeadYak mentioned AIX, SunOS, HP-UX, and IRIX were all historically in the 1-2MiB range as well.  That seems like a big waste of memory though ðŸ˜Š",
      "parentUuid": "c0142f89_b8aa4563",
      "revId": "2af5566d47ffc7c4e1eee2cd6823807fe8828a14",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "896b7292_ad3cffff",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2022-02-22T21:19:46Z",
      "side": 1,
      "message": "The FreeBSD concern appears to be architecture-specific to how FreeBSD allocates address mappings for the args though (as in they always mmap an area large enough for the max, even if not needed) ; I\u0027m not sure if we necessary have the same problem without looking at our implementation in more detail.",
      "parentUuid": "6265d488_42aacb56",
      "revId": "2af5566d47ffc7c4e1eee2cd6823807fe8828a14",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d5dce69f_6b7638df",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2022-02-22T22:06:37Z",
      "side": 1,
      "message": "Since it is just a magic value, can we have a code comment on why it got picked?\n",
      "revId": "2af5566d47ffc7c4e1eee2cd6823807fe8828a14",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "24825579_db03a32e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-02-22T22:55:10Z",
      "side": 1,
      "message": "As noted, it\u0027s currently only used to do a sanity check before invoking malloc() [1], [2], [3]. So memory usage shouldn\u0027t change, hence my suggestion to match Linux here.\n\n[1]: https://github.com/haiku/haiku/blob/d03e5994ee9c1a80bb74ac34dba14f0b34c59106/src/system/libroot/os/image.cpp#L510\n\n[2]: https://github.com/haiku/haiku/blob/20b50a5cb429ea7cef2f80280a0e49a9003d039b/src/system/kernel/team.cpp#L1468\n\n[3] https://github.com/haiku/haiku/blob/20b50a5cb429ea7cef2f80280a0e49a9003d039b/src/system/kernel/team.cpp#L3764",
      "parentUuid": "896b7292_ad3cffff",
      "revId": "2af5566d47ffc7c4e1eee2cd6823807fe8828a14",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a566473_66a9ac21",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2022-02-22T23:16:38Z",
      "side": 1,
      "message": "The last of those winds up being a permanent allocation in kernel space. There\u0027s no reason to permit such large arg sizes if nothing is going to use them. FreeBSD\u0027s size is thus better.",
      "parentUuid": "24825579_db03a32e",
      "revId": "2af5566d47ffc7c4e1eee2cd6823807fe8828a14",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9e5949d0_c5659b16",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-02-22T23:50:48Z",
      "side": 1,
      "message": "It\u0027s a maximum, not an actually allocated value, and futureproofs us by being the same as Linux. I don\u0027t see a reason to restrict to FreeBSD\u0027s limit because FreeBSD, and then either needing FreeBSD-specific patches in the future, or bumping it once again.\n\nFTFY: \"if nothing is going to use them _today_.\"",
      "parentUuid": "8a566473_66a9ac21",
      "revId": "2af5566d47ffc7c4e1eee2cd6823807fe8828a14",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d675f988_16be14d8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-02-23T16:52:29Z",
      "side": 1,
      "message": "LOL. More data I just found this:\n\nhttps://www.in-ulm.de/~mascheck/various/argmax/\n\nLook half-way down in \"Actual values for ARG_MAX (or NCARGS)\"\n\nThere\u0027s a table with some historical values for a wide range of operating systems. Haiku\u0027s even included :-)\n",
      "revId": "2af5566d47ffc7c4e1eee2cd6823807fe8828a14",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b8180c5a_09fb93e4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-02-23T17:04:16Z",
      "side": 1,
      "message": "In https://www.in-ulm.de/~mascheck/various/argmax/#results, linux is \"1/4 of stack size\".  I got the linux value from my desktop with a large amount of ram... so the exact Linux number should be ignored.\n\nSo:\n\n* Our current ARG_MAX matches the pre-Linux 2.6.22 size 131,072\n* Mac OS X 10.6 is 262,144\n* NetBSD / OpenBSD is 262,144\n* AIX 7.2 is 1,048,576\n* Linux ~2,097,152 with 64 GiB of ram.\n\nHaiku is not a server operating system however.\n\nI think my opinion still falls to matching the BSD\u0027s.   They likely have spent a lot more time analyzing this than we have.",
      "revId": "2af5566d47ffc7c4e1eee2cd6823807fe8828a14",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}