{
  "comments": [
    {
      "key": {
        "uuid": "7bd452cf_c427953a",
        "filename": "headers/private/kernel/boot/platform/efi/arch_smp.h",
        "patchSetId": 12
      },
      "lineNbr": 17,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2021-11-10T21:15:30Z",
      "side": 1,
      "message": "comment seems unnecessary...",
      "revId": "8fe61730279d2f2440ef36e03c0978afb8c43435",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "920720be_1754318b",
        "filename": "headers/private/kernel/boot/platform/efi/arch_smp.h",
        "patchSetId": 12
      },
      "lineNbr": 17,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-11-10T21:51:02Z",
      "side": 1,
      "message": "Done.  Originally id was hartID on riscv64 and id on x86. I merged them since it was only a name difference making that comment indeed invalid,",
      "parentUuid": "7bd452cf_c427953a",
      "revId": "8fe61730279d2f2440ef36e03c0978afb8c43435",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "57299489_86dcc5d2",
        "filename": "headers/private/kernel/vm/VMCache.h",
        "patchSetId": 12
      },
      "lineNbr": 382,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2021-11-10T21:15:30Z",
      "side": 1,
      "message": "This should be changed into an ASSERT_PRINT, i.e. ASSERT(..., \"page: %\" B_PRIx64\" etc.",
      "revId": "8fe61730279d2f2440ef36e03c0978afb8c43435",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b70d8aa0_d64ae264",
        "filename": "headers/private/kernel/vm/VMCache.h",
        "patchSetId": 12
      },
      "lineNbr": 382,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-11-10T21:51:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "57299489_86dcc5d2",
      "revId": "8fe61730279d2f2440ef36e03c0978afb8c43435",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "96cbc00f_a0d3b842",
        "filename": "headers/private/kernel/vm/vm_types.h",
        "patchSetId": 12
      },
      "lineNbr": 233,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2021-11-10T21:15:30Z",
      "side": 1,
      "message": "%# looks wrong?\n\nThese and the other things in this file should probably print both %p and % BPRIx64",
      "revId": "8fe61730279d2f2440ef36e03c0978afb8c43435",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "54bbfc14_d46d9ae8",
        "filename": "headers/private/kernel/vm/vm_types.h",
        "patchSetId": 12
      },
      "lineNbr": 233,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-11-10T21:51:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "96cbc00f_a0d3b842",
      "revId": "8fe61730279d2f2440ef36e03c0978afb8c43435",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b5d6cda9_09c4bba2",
        "filename": "headers/private/kernel/vm/vm_types.h",
        "patchSetId": 12
      },
      "lineNbr": 233,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2021-11-11T12:04:45Z",
      "side": 1,
      "message": "%#x is the correct way to print an hex number with the 0x prefix (when it\u0027s not a pointer, for %p that is already the default), there is nothing wrong with that?",
      "parentUuid": "54bbfc14_d46d9ae8",
      "revId": "8fe61730279d2f2440ef36e03c0978afb8c43435",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5335ea5f_aa6f0b9a",
        "filename": "src/system/kernel/int.cpp",
        "patchSetId": 12
      },
      "lineNbr": 414,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2021-11-10T21:15:30Z",
      "side": 1,
      "message": "It probably isn\u0027t for other architectures either. Can\u0027t we be more generic here?",
      "revId": "8fe61730279d2f2440ef36e03c0978afb8c43435",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0e5c829b_f697829f",
        "filename": "src/system/kernel/int.cpp",
        "patchSetId": 12
      },
      "lineNbr": 414,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-11-10T21:51:02Z",
      "side": 1,
      "message": "I\u0027m tempted to just drop it.  That code doesn\u0027t directly get called via assign_cpu.  I\u0027m assuming arch_int_assign_to_cpu gets called later?",
      "parentUuid": "5335ea5f_aa6f0b9a",
      "revId": "8fe61730279d2f2440ef36e03c0978afb8c43435",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "10034178_43a9064d",
        "filename": "src/system/kernel/int.cpp",
        "patchSetId": 12
      },
      "lineNbr": 414,
      "author": {
        "id": 1000172
      },
      "writtenOn": "2021-11-10T22:57:47Z",
      "side": 1,
      "message": "If I remember correctly this function assume that arch function will assign interrupt to CPU and interrupts handling become broken if it processes, but arch function doesn\u0027t. There are also a problem with nested PCI MSI interrupt controller, that register interrupt numbers, but actually working over single CPU interrupt, so arbitrary assigning is not possible.",
      "parentUuid": "0e5c829b_f697829f",
      "revId": "8fe61730279d2f2440ef36e03c0978afb8c43435",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "583f3316_81603c63",
        "filename": "src/system/kernel/int.cpp",
        "patchSetId": 12
      },
      "lineNbr": 414,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-11-11T22:50:54Z",
      "side": 1,
      "message": "This seems perfectly reasonable to me.  @waddlesplash i\u0027d like to leave this in place for now since it\u0027s not really a clear cut \"empty arch_*\"",
      "parentUuid": "10034178_43a9064d",
      "revId": "8fe61730279d2f2440ef36e03c0978afb8c43435",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "967c6b2d_b4cbe119",
        "filename": "src/system/kernel/vm/vm.cpp",
        "patchSetId": 12
      },
      "lineNbr": 4429,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2021-11-10T21:15:30Z",
      "side": 1,
      "message": "IMHO the changes to this dprintf are not really needed, aside from maybe the execute indicator. I think we should leave this out.",
      "revId": "8fe61730279d2f2440ef36e03c0978afb8c43435",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "94af8ea6_b74aa186",
        "filename": "src/system/kernel/vm/vm.cpp",
        "patchSetId": 12
      },
      "lineNbr": 4429,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-11-10T21:51:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "967c6b2d_b4cbe119",
      "revId": "8fe61730279d2f2440ef36e03c0978afb8c43435",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": false
    }
  ]
}