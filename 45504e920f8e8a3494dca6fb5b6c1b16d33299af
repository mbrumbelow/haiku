{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "57f02705_08de559d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000311
      },
      "writtenOn": "2022-08-31T16:38:39Z",
      "side": 1,
      "message": "This version uses get_extended_team_info(), and in my tests it works OK even where the previous version failed (paths too long or with spaces).\n\nI dropped part of the verbose output (printing the \"full\" process name) because get_extended_team_info() doesn\u0027t provides it (I foolishly attempted to use the cwdDevice and cwdPath fields, but that lead nowhere), and regular team_info.args has the aleady mentioned limitations, so... not much is lost I guess.\n\nOutput for process with multiple PIDs now seems more in line with Linux\u0027s pidof.\n\nConsidered adding options for specifying the separator character, but decided against it. Other ongoing projects demand my attention :-D\n\nThanks for your work!",
      "revId": "45504e920f8e8a3494dca6fb5b6c1b16d33299af",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7e54f599_afe1526d",
        "filename": "src/bin/pidof.cpp",
        "patchSetId": 4
      },
      "lineNbr": 70,
      "author": {
        "id": 1000223
      },
      "writtenOn": "2022-08-31T18:27:17Z",
      "side": 1,
      "message": "This call may fail. Please check its return value.",
      "revId": "45504e920f8e8a3494dca6fb5b6c1b16d33299af",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4e2645f7_63d35711",
        "filename": "src/bin/pidof.cpp",
        "patchSetId": 4
      },
      "lineNbr": 70,
      "author": {
        "id": 1000223
      },
      "writtenOn": "2022-08-31T18:27:17Z",
      "side": 1,
      "message": "Why the -1?",
      "range": {
        "startLine": 70,
        "startChar": 25,
        "endLine": 70,
        "endChar": 35
      },
      "revId": "45504e920f8e8a3494dca6fb5b6c1b16d33299af",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "51f03802_08d7551c",
        "filename": "src/bin/pidof.cpp",
        "patchSetId": 4
      },
      "lineNbr": 70,
      "author": {
        "id": 1000311
      },
      "writtenOn": "2022-08-31T19:08:33Z",
      "side": 1,
      "message": "because teamId gets incremented by get_next_team_info(). I lost more than an hour until I realized that was the case after looking up its implementation :-(\n\nI\u0027ve attempted other ways, like dropping the usage of get_next_team_info() and just incrementing the teamId myself, checking the results of get_extended_team_info(), but I\u0027ve failed to make that work properly.\n\nSo I stuck with this one, but I\u0027m more than open to suggestions.",
      "parentUuid": "4e2645f7_63d35711",
      "range": {
        "startLine": 70,
        "startChar": 25,
        "endLine": 70,
        "endChar": 35
      },
      "revId": "45504e920f8e8a3494dca6fb5b6c1b16d33299af",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7a065166_a9920b4a",
        "filename": "src/bin/pidof.cpp",
        "patchSetId": 4
      },
      "lineNbr": 70,
      "author": {
        "id": 1000311
      },
      "writtenOn": "2022-08-31T19:08:33Z",
      "side": 1,
      "message": "I think I thought I was covered due to get_next_team_info() having already succeeded, and the following lines also covering cases of bad/wrong data.\n\nI saw that get_extended_team_info() could return B_BAD_ADDRESS, B_NO_MEMORY, B_BUFFER_OVERFLOW, which should be checked before accessing extendedInfo.\n\nGiven that those are the possible returns I felt weird checking for !\u003d B_OK and doing a continue.\n\nShould I just abort on that case, or just \"continue\", and let the while above simply fail next?\n\nI apologize in advance for these too-basic/silly questions.",
      "parentUuid": "7e54f599_afe1526d",
      "revId": "45504e920f8e8a3494dca6fb5b6c1b16d33299af",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "374f36bd_cdefa73f",
        "filename": "src/bin/pidof.cpp",
        "patchSetId": 4
      },
      "lineNbr": 70,
      "author": {
        "id": 1000223
      },
      "writtenOn": "2022-09-01T10:38:15Z",
      "side": 1,
      "message": "There are no silly questions if they are done in good faith. I didn\u0027t even know of get_extended_team_info until I had a look at your change, so we are both learning here.\n\nYou won\u0027t get B_BUFFER_OVERFLOW, but I would not have even checked what the possible errors are and just go with \"couldn\u0027t get info for this thread, discard it and try the next\". Now, answering other people\u0027s questions makes you think twice, and aborting with an error may be the right thing; there\u0027s been an error afterall. In that case, you\u0027ll still want to continue with the next team and not abort on B_BAD_TEAM_ID, as that would just be an unlucky team disappearing between the two calls.",
      "parentUuid": "7a065166_a9920b4a",
      "revId": "45504e920f8e8a3494dca6fb5b6c1b16d33299af",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8c4d4e17_685d0e5c",
        "filename": "src/bin/pidof.cpp",
        "patchSetId": 4
      },
      "lineNbr": 70,
      "author": {
        "id": 1000223
      },
      "writtenOn": "2022-09-01T10:38:15Z",
      "side": 1,
      "message": "Well, then you can\u0027t output teamId as the PID of the process ðŸ˜Š\nYou had this right in your first change: the first argument to get_next_team_info is an int32* cookie, that it almost happens to be the team id is an implementation detail, the real id is `teamInfo.team`.",
      "parentUuid": "51f03802_08d7551c",
      "range": {
        "startLine": 70,
        "startChar": 25,
        "endLine": 70,
        "endChar": 35
      },
      "revId": "45504e920f8e8a3494dca6fb5b6c1b16d33299af",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}