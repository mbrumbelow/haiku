{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "79893b4e_e5c68e52",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000016
      },
      "writtenOn": "2022-09-29T09:48:19Z",
      "side": 1,
      "message": "I\u0027m not sure about SCROLL_BAR_SPACING. It\u0027s not really a spacing, is it? It\u0027s about taking the width or height of the scroll bar into account such that you have pixel aligned layout.",
      "revId": "9047ecbcb1ab8b6f7ca9094b1b026354583c1880",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6eb5d03d_616bd713",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2022-09-29T13:53:08Z",
      "side": 1,
      "message": "Yes, but that\u0027s used as a spacing/insets value in lots of places, like Tracker and Terminal to get scrollbars to line up with the window knob, in app_server to define the window knob in the first place, in Debugger and Tracker to get the right side of buttons to line up with the end of the scroll bar in file panels and list windows (and also to align with the window knob...)\n\nSo thus this should then be how we determine how wide/tall a scrollbar should be in the first place, or at least that\u0027s my take on it.",
      "parentUuid": "79893b4e_e5c68e52",
      "revId": "9047ecbcb1ab8b6f7ca9094b1b026354583c1880",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "18e746e1_a36ae779",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2022-10-01T01:18:57Z",
      "side": 1,
      "message": "axeld: Any more thoughts on this?",
      "parentUuid": "6eb5d03d_616bd713",
      "revId": "9047ecbcb1ab8b6f7ca9094b1b026354583c1880",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "06bb92db_c27c0463",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2022-10-01T01:18:57Z",
      "side": 1,
      "message": "Any more thoughts on this ",
      "revId": "9047ecbcb1ab8b6f7ca9094b1b026354583c1880",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "adc07bab_0b249d5c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2022-10-28T16:59:20Z",
      "side": 1,
      "message": "Perhaps we can call this \"CORNER\" spacing instead of \"SCROLL_BAR\" spacing since it is also the width of the \"corner\" resize grip? Scroll bars are then exactly CORNER plus BORDER spacing wide.",
      "revId": "9047ecbcb1ab8b6f7ca9094b1b026354583c1880",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2975f71d_1be7086f",
        "filename": "headers/os/interface/InterfaceDefs.h",
        "patchSetId": 1
      },
      "lineNbr": 244,
      "author": {
        "id": 1000172
      },
      "writtenOn": "2022-10-28T20:51:47Z",
      "side": 1,
      "message": "B_USE_BIG_SPACING value changed so it breaks compatibility with existing binaries.",
      "revId": "9047ecbcb1ab8b6f7ca9094b1b026354583c1880",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d2fa987e_d4ddc239",
        "filename": "src/kits/interface/ControlLook.cpp",
        "patchSetId": 1
      },
      "lineNbr": 94,
      "author": {
        "id": 1000390
      },
      "writtenOn": "2022-09-29T05:49:57Z",
      "side": 1,
      "message": "It looks to me like this may give unexpected results when a controllook implements GetScrollBarWidth or DefaultItemSpacing but not the other, that is it may get different sizes depending on where it is called.\n\n(assuming clients call Composespacing)",
      "revId": "9047ecbcb1ab8b6f7ca9094b1b026354583c1880",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b69c93f5_6c3aa0dd",
        "filename": "src/kits/interface/ControlLook.cpp",
        "patchSetId": 1
      },
      "lineNbr": 94,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2022-09-29T13:53:08Z",
      "side": 1,
      "message": "The idea would be to delete GetScrollBarWidth eventually after we have made enough changes so that the ABI break is not a problem.",
      "parentUuid": "d2fa987e_d4ddc239",
      "revId": "9047ecbcb1ab8b6f7ca9094b1b026354583c1880",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "03d365d9_abbb03e9",
        "filename": "src/kits/interface/ControlLook.cpp",
        "patchSetId": 1
      },
      "lineNbr": 94,
      "author": {
        "id": 1000390
      },
      "writtenOn": "2022-09-29T14:57:04Z",
      "side": 1,
      "message": "the only user that isn\u0027t intree is haikuwebkit iirc.\n\nIf you want to remove it you should adjust the implementation in Haikucontrollook too.\n\nThough I am a bit confused why you want to remove it at all and what the functional difference in size would be with this change",
      "parentUuid": "b69c93f5_6c3aa0dd",
      "revId": "9047ecbcb1ab8b6f7ca9094b1b026354583c1880",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0e7da8d8_1273c37e",
        "filename": "src/kits/interface/ControlLook.cpp",
        "patchSetId": 1
      },
      "lineNbr": 94,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2022-09-29T15:20:43Z",
      "side": 1,
      "message": "There should not be a functional difference in size. The different mechanism is merely to standardize how this is computed.",
      "parentUuid": "03d365d9_abbb03e9",
      "revId": "9047ecbcb1ab8b6f7ca9094b1b026354583c1880",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dafc5081_d9179ea4",
        "filename": "src/kits/interface/ControlLook.cpp",
        "patchSetId": 1
      },
      "lineNbr": 94,
      "author": {
        "id": 1000390
      },
      "writtenOn": "2022-10-28T17:54:55Z",
      "side": 1,
      "message": "In that case it sounds fine to me, please still remove the haikucontrollook specific implementation if you want to phase it out.",
      "parentUuid": "0e7da8d8_1273c37e",
      "revId": "9047ecbcb1ab8b6f7ca9094b1b026354583c1880",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f999d74d_1df10f15",
        "filename": "src/kits/interface/ControlLook.cpp",
        "patchSetId": 1
      },
      "lineNbr": 94,
      "author": {
        "id": 1000390
      },
      "writtenOn": "2022-10-28T18:18:32Z",
      "side": 1,
      "message": "for reference, this is the part I mean: https://cgit.haiku-os.org/haiku/commit/src/kits/interface/HaikuControlLook.cpp?id\u003d409d65c0d64212efc6882e81140647201c03c59d",
      "parentUuid": "dafc5081_d9179ea4",
      "revId": "9047ecbcb1ab8b6f7ca9094b1b026354583c1880",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5214957e_eca603cc",
        "filename": "src/kits/interface/ControlLook.cpp",
        "patchSetId": 1
      },
      "lineNbr": 94,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2022-10-28T19:18:09Z",
      "side": 1,
      "message": "Yep, indeed that is the function I would like to remove in favor of this method instead.",
      "parentUuid": "f999d74d_1df10f15",
      "revId": "9047ecbcb1ab8b6f7ca9094b1b026354583c1880",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f4e18966_a523bbec",
        "filename": "src/kits/interface/ControlLook.cpp",
        "patchSetId": 1
      },
      "lineNbr": 94,
      "author": {
        "id": 1000390
      },
      "writtenOn": "2022-10-28T19:27:11Z",
      "side": 1,
      "message": "Yes, this is implementef twice, once here and in haikucontrollook, if you want the newly declared way here to be used it has to be removed in haikucontrollook, otherwise that implementation will overwrite the base classes definition.",
      "parentUuid": "5214957e_eca603cc",
      "revId": "9047ecbcb1ab8b6f7ca9094b1b026354583c1880",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}