{
  "comments": [
    {
      "key": {
        "uuid": "df47bdfe_8fde2b07",
        "filename": "src/add-ons/kernel/busses/mmc/sdhci_pci.cpp",
        "patchSetId": 2
      },
      "lineNbr": 333,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2020-12-12T17:48:22Z",
      "side": 1,
      "message": "Stray newline.",
      "revId": "5685f156ebed60cabf3a606e96a208167632d875",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "343c9825_31c72f24",
        "filename": "src/add-ons/kernel/busses/mmc/sdhci_pci.cpp",
        "patchSetId": 2
      },
      "lineNbr": 333,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2020-12-13T08:33:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "df47bdfe_8fde2b07",
      "revId": "5685f156ebed60cabf3a606e96a208167632d875",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e4d73dc8_09e077e0",
        "filename": "src/add-ons/kernel/busses/mmc/sdhci_pci.cpp",
        "patchSetId": 2
      },
      "lineNbr": 342,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2020-12-12T17:48:22Z",
      "side": 1,
      "message": "This could be rewritten as *_length / fRegisters-\u003eblock_size, assuming the latter can change in the future. Also, is it guaranteed that _length is always a multiple of block_size? If not, what happens to the remaining partial block?",
      "revId": "5685f156ebed60cabf3a606e96a208167632d875",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "73c40300_bf9f6bce",
        "filename": "src/add-ons/kernel/busses/mmc/sdhci_pci.cpp",
        "patchSetId": 2
      },
      "lineNbr": 342,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2020-12-12T18:02:58Z",
      "side": 1,
      "message": "It would do a read back from the hardware register, which works, but adds more verbosity to debug logs in qemu (which can trace all register access).\n\nThe 512 should be defined as a constant anyway, the sector size for SDHC cards is fixed in the spec and can\u0027t change.\n\nThe length is a multiple of the block size currently because of the dma_restrictions used to initialize the IOScheduler, but I\u0027m not sure anymore if that\u0027s by design of the IO Scheduler as I thought it would, or more a side effect of how it\u0027s implemented.\n\nThis will be made simpler by using ADMA, where we can have a scatter-gather list allowing to write the data to several separate blocks. In that case the IO scheduler provides us with a scratch \"bounce buffer\" to store the extra data, I think, but I can\u0027t use that here with SDMA because it\u0027s not contiguous with the data buffer.",
      "parentUuid": "e4d73dc8_09e077e0",
      "revId": "5685f156ebed60cabf3a606e96a208167632d875",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2bf6d435_035b3be3",
        "filename": "src/add-ons/kernel/busses/mmc/sdhci_pci.cpp",
        "patchSetId": 2
      },
      "lineNbr": 342,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2020-12-13T08:33:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "73c40300_bf9f6bce",
      "revId": "5685f156ebed60cabf3a606e96a208167632d875",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "573c7125_aff0d7e0",
        "filename": "src/add-ons/kernel/busses/mmc/sdhci_pci.cpp",
        "patchSetId": 2
      },
      "lineNbr": 559,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2020-12-12T17:48:22Z",
      "side": 1,
      "message": "Is the bitwise and actually needed here? Given that we\u0027ve passed the condition at this point, this appears equivalent to simply |\u003d SDHCI_INT_TRANSCMP unless I\u0027m missing something?",
      "revId": "5685f156ebed60cabf3a606e96a208167632d875",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e244d1b_3490b9d8",
        "filename": "src/add-ons/kernel/busses/mmc/sdhci_pci.cpp",
        "patchSetId": 2
      },
      "lineNbr": 559,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2020-12-13T08:33:45Z",
      "side": 1,
      "message": "No, I copied it from the above code (which checks for two interrupt bits, but only acknowledges the one which is already set). Here there is only one bit so it\u0027s not needed.",
      "parentUuid": "573c7125_aff0d7e0",
      "revId": "5685f156ebed60cabf3a606e96a208167632d875",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": false
    }
  ]
}