{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e5048c55_8a78e3fb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2022-03-14T20:40:47Z",
      "side": 1,
      "message": "Confirmed that once you get your UART loaded from the device tree properly, this results in just printing everything twice (through EFI services using printf + directly to the UART using serial_puts).\n\nSince you can already get the debug messages from device tree parsing in the bootloader log, this is useless and annoying.\n\nI think we should abandon this change, and I will push my fixes to device tree loading.",
      "revId": "bd19f3e5808d622a92f34ee36cd6ae7edd227a3c",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "14c23977_d9f4b726",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2022-03-14T20:53:25Z",
      "side": 1,
      "message": "Even worse: this calls efi printf function after exiting boot services, resulting in a crash. After removing this change, my boot went a little bit further.",
      "revId": "bd19f3e5808d622a92f34ee36cd6ae7edd227a3c",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0ca09a9b_49b7e58b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-03-14T21:22:20Z",
      "side": 1,
      "message": "a lot has changed in tree around efi over the last year.  It\u0027s possible the bug resulting in the need for this has been corrected.\n\nI haven\u0027t looked at arm for a while, and riscv64 is still suffering the crashing issues in early userspace.\n\ntldr; eh just abandon it if it is no longer relevant.",
      "revId": "bd19f3e5808d622a92f34ee36cd6ae7edd227a3c",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "86662d1a_c56a33a0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-01-04T00:52:32Z",
      "side": 1,
      "message": "just ran into the same bug in the latest nightly images on the RISC-V StarFive Vision 2.\n\nAdding this change fixed the log outputs for troubleshooting.",
      "revId": "bd19f3e5808d622a92f34ee36cd6ae7edd227a3c",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "727fa4ec_8c68ceb3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2023-01-04T06:55:20Z",
      "side": 1,
      "message": "I got accused of rejecting this on IRC. I didn\u0027t get any reply to my comments on it:\n\n- it results in logs being sent to the serial port twice (by printf and again by serial_puts)\n- it crashes if any logs are done after exit_boot_services\n\nIf you fix these two problems I\u0027m happy to see this merged. Until then, still seems like a bad idea to me?",
      "parentUuid": "86662d1a_c56a33a0",
      "revId": "bd19f3e5808d622a92f34ee36cd6ae7edd227a3c",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "78f00e1f_8f1130d8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2023-01-04T12:47:36Z",
      "side": 1,
      "message": "Have you tried enabling TRACE_DEBUG in src/system/boot/platform/efi/serial.cpp ? It should end up sending the text to the same place printf is, so if this patch works for you, this should also work.\n\nBut it will correctly stop when serial_switch_to_legacy is called, avoiding a crash if any logs are emitted after exiting boot services. And also, no duplicate logs on platforms where one of the other output methods are working.\n\nThe reason this code is disabled by default is because depending on EFI configuration, it could also end up on screen, corrupting the splash screen. But we could use the DEBUG define there instead of TRACE_DEBUG so it\u0027s easier to enable?",
      "revId": "bd19f3e5808d622a92f34ee36cd6ae7edd227a3c",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}