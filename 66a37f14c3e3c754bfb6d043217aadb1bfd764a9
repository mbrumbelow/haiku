{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "aff00db4_0069a004",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2022-06-19T14:23:52Z",
      "side": 1,
      "message": "I am not sure if this works correctly for people with a working system. If you have a machine with active multiplexing PS/2 mouse controller, please help test this and check it still works correctly!",
      "revId": "66a37f14c3e3c754bfb6d043217aadb1bfd764a9",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "42aceede_edb953e8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2022-06-28T06:47:11Z",
      "side": 1,
      "message": "Tests on the forum (https://discuss.haiku-os.org/t/testing-wanted-ps2-active-multiplexing-thinkpad-trackpoint-mainly/12282) show that this creates problems on other systems. I have to find another solution.",
      "revId": "66a37f14c3e3c754bfb6d043217aadb1bfd764a9",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5ebf447b_4cec157f",
        "filename": "src/add-ons/kernel/bus_managers/ps2/ps2_common.cpp",
        "patchSetId": 1
      },
      "lineNbr": 212,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2022-06-20T02:49:15Z",
      "side": 1,
      "message": "There are a number of multiplexing tickets, so this has applicability beyond just your device. I don\u0027t think we should mention it nor tickets in the log. We can use \n\"git blame\" if needed, let\u0027s not clutter the source.",
      "revId": "66a37f14c3e3c754bfb6d043217aadb1bfd764a9",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9a87a25c_c6f34707",
        "filename": "src/add-ons/kernel/bus_managers/ps2/ps2_common.cpp",
        "patchSetId": 1
      },
      "lineNbr": 212,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2022-06-20T06:50:48Z",
      "side": 1,
      "message": "I disagree, this code is full of quirks and unexpected things due to handling the behavior of a variety of devices. If I don\u0027t put a comment with the full context here, sopmeone will say \"what\u0027s this stupid line of code doing? it makes no sense!\" and will remove it. Then my hardware will be broken again.\n\nI would have done so for various other parts of the code during my cleanup, if it was not for the links to tickets explaining why we do each thing.\n\nGit blame should really be a last resort thing here. It takes a lot of effort to piece together the information, it took me a whole weekend to investigate this, re-reading the spec, comparing with the Linux and FreeBSD drivers, booting Linux on my machine to see how it behaves exactly, and then several rounds of experimenting with different solutions, until I ended up with this one. I do not want people to contact me and ask me about it and then having to re-remember all this. So the conclusion of all this research is summed up in this comment. Without the comment, it makes no sense why we would be sending this specific command at this time in the code. I also didn\u0027t want to put the full story in the comment, so I put a link to the ticket where there are extended explanations.",
      "parentUuid": "5ebf447b_4cec157f",
      "revId": "66a37f14c3e3c754bfb6d043217aadb1bfd764a9",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "736bd4a7_0933b49a",
        "filename": "src/add-ons/kernel/bus_managers/ps2/ps2_common.cpp",
        "patchSetId": 1
      },
      "lineNbr": 212,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2022-06-21T11:17:37Z",
      "side": 1,
      "message": "Any links to the FreeBSD source references would be useful (to easily compare quirks).",
      "parentUuid": "9a87a25c_c6f34707",
      "revId": "66a37f14c3e3c754bfb6d043217aadb1bfd764a9",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "32fbd49c_b5300a33",
        "filename": "src/add-ons/kernel/bus_managers/ps2/ps2_common.cpp",
        "patchSetId": 1
      },
      "lineNbr": 212,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2022-06-21T11:48:32Z",
      "side": 1,
      "message": "FreeBSD implementation is much more limited than ours:\n\nhttp://fxr.watson.org/fxr/source/dev/atkbdc/atkbdc.c#L1212\n\nIn fact I don\u0027t think it is very helpful, since it will not bufferize the data from multiplexed devices separately. This reintroduces the problem that multiplexing was supposed to solve.\n\nThe message I get in Linux:\n\nhttps://github.com/torvalds/linux/blob/master/drivers/input/serio/i8042-x86ia64io.h#L1250\n\nFujitsu Lifebook are known to have problems with active multiplexing too, however, my specific model isn\u0027t in this list:\n\nhttps://github.com/torvalds/linux/blob/master/drivers/input/serio/i8042-x86ia64io.h#L239\n\nI think earlier I had tried completely disabling the multiplexing, but in that case my keyboard also stopped working. I could try that again.",
      "parentUuid": "736bd4a7_0933b49a",
      "revId": "66a37f14c3e3c754bfb6d043217aadb1bfd764a9",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ea0a7d97_75491d37",
        "filename": "src/add-ons/kernel/bus_managers/ps2/ps2_common.cpp",
        "patchSetId": 1
      },
      "lineNbr": 212,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2022-06-21T12:54:32Z",
      "side": 1,
      "message": "It seems the Linux code also checks that multiplexing is working. have you checked i8042_check_mux already?",
      "parentUuid": "32fbd49c_b5300a33",
      "revId": "66a37f14c3e3c754bfb6d043217aadb1bfd764a9",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "083c496f_b607f211",
        "filename": "src/add-ons/kernel/bus_managers/ps2/ps2_common.cpp",
        "patchSetId": 1
      },
      "lineNbr": 212,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2022-06-21T19:05:12Z",
      "side": 1,
      "message": "Yes, that is identical to our code to enable/detect active multiplexing. My controller reports that it supports it, but then, attempts to send bytes to the multiplexed mouse devices does not work correctly, and confuses the keyboard, which should not receive these bytes at all.\n\nThe keyboard replies to the first few bytes with 0xfe (request to resend the last byte), but we don\u0027t handle that at that point, and eventually the keyboard decides that it has received too much invalid data, and resets.\n\nIn this change, I explicitly detect this situation: we send E6 to the first mouse, which should just get an ACK reply. If we get a 0xFE/re-send reply, I assume it comes from the keyboard. Ideally I should also check the AUX bit in the control register to confirm that, but that would require a customized version of ps2_command that can return information about the aux bit.\n\nI don\u0027t mind adding that, but first I wnated to check with other people who have a touchpad with active multiplexing if this approach does not break things for them.",
      "parentUuid": "ea0a7d97_75491d37",
      "revId": "66a37f14c3e3c754bfb6d043217aadb1bfd764a9",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d281c37e_26b1d01e",
        "filename": "src/add-ons/kernel/bus_managers/ps2/ps2_common.cpp",
        "patchSetId": 1
      },
      "lineNbr": 212,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2022-07-10T21:29:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "083c496f_b607f211",
      "revId": "66a37f14c3e3c754bfb6d043217aadb1bfd764a9",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}