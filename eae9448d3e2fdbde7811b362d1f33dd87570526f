{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "fae7e4d9_95822263",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000172
      },
      "writtenOn": "2023-12-23T13:59:31Z",
      "side": 1,
      "message": "Seems still do not boot in QEMU with EDK2 firmware.",
      "revId": "eae9448d3e2fdbde7811b362d1f33dd87570526f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a78ced03_60b42513",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2023-12-23T17:26:36Z",
      "side": 1,
      "message": "Should the Pte class get a constructor with arguments, so it\u0027s not possible anymore to forget to set one field?",
      "revId": "eae9448d3e2fdbde7811b362d1f33dd87570526f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c05479fa_ccf1d6dd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000172
      },
      "writtenOn": "2023-12-23T17:29:33Z",
      "side": 1,
      "message": "Adding constructor will make impossible to set values by name and have other C++ undesired effects such as it become non-POD type.",
      "parentUuid": "a78ced03_60b42513",
      "revId": "eae9448d3e2fdbde7811b362d1f33dd87570526f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "627da430_84165a20",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000172
      },
      "writtenOn": "2023-12-23T20:57:23Z",
      "side": 1,
      "message": "This patch can be applied right now because it fix obvious typo bug. Other boot problems can be fixed in separate patches.",
      "revId": "eae9448d3e2fdbde7811b362d1f33dd87570526f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "73f933a8_acbf4708",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2023-12-23T20:59:20Z",
      "side": 1,
      "message": "I don\u0027t think regular constructors cause something to become non-POD, but only copy/move constructors?",
      "parentUuid": "c05479fa_ccf1d6dd",
      "revId": "eae9448d3e2fdbde7811b362d1f33dd87570526f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a855e216_5ceb19bb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2023-12-23T23:26:58Z",
      "side": 1,
      "message": "POD does not exist anymore in current C++ standards and was replaced by 3 more finegrained concepts: trivial, standard layout, and scalar types.\n\nWithout a default constructor, this could still be standard-layout and trivially copyable.\n\nPreventing initializing the object by setting values by names would be good: as we see here, adding a field to the object does not result in a compilation error in code that needs to be updated. Using a constructor, and adding an argument to the constructor, would force that.",
      "parentUuid": "73f933a8_acbf4708",
      "revId": "eae9448d3e2fdbde7811b362d1f33dd87570526f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ],
  "submitRequirementResults": []
}