{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f46c2159_86f85eb7",
        "filename": "src/bin/package_repo/command_update.cpp",
        "patchSetId": 1
      },
      "lineNbr": 236,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-08-26T23:48:53Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\tstatic struct option sLongOptions[] \u003d {{\"help\", no_argument, 0, \u0027h\u0027},\n\t\t\t{\"quiet\", no_argument, 0, \u0027q\u0027}, {\"verbose\", no_argument, 0, \u0027v\u0027},\n\t\t\t{\"trust-filenames\", no_argument, 0, \u0027t\u0027}, {0, 0, 0, 0}};\n```",
      "range": {
        "startLine": 230,
        "startChar": 0,
        "endLine": 236,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "5ee5130f6963ced38579cb2e5e401c0f95158e1c",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c1fc86df_1cb64bba",
        "filename": "src/bin/package_repo/command_update.cpp",
        "patchSetId": 1
      },
      "lineNbr": 360,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-08-26T23:48:53Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\tif (sTrustFilenames) {\n```",
      "range": {
        "startLine": 360,
        "startChar": 0,
        "endLine": 360,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "5ee5130f6963ced38579cb2e5e401c0f95158e1c",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e37a8abf_9cf84d3d",
        "filename": "src/bin/package_repo/command_update.cpp",
        "patchSetId": 1
      },
      "lineNbr": 369,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-08-26T23:48:53Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t} else if ((result \u003d packageInfo.ReadFromPackageFile(packageNames.ItemAt(i)-\u003eString()))\n\t\t\t!\u003d B_OK) {\n\t\t\tlistener.PrintError(\"Error: Failed to read package-info from \\\"%s\\\": %s\\n\",\n\t\t\t\tpackageNames.ItemAt(i)-\u003eString(), strerror(result));\n\t\t\treturn 1;\n```",
      "range": {
        "startLine": 362,
        "startChar": 0,
        "endLine": 369,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "5ee5130f6963ced38579cb2e5e401c0f95158e1c",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aa55cf52_bb01e53e",
        "filename": "src/bin/package_repo/package_repo.cpp",
        "patchSetId": 1
      },
      "lineNbr": 55,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-08-26T23:48:53Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nstatic const char* kUsage\n\t\u003d \"Usage: %s \u003ccommand\u003e \u003ccommand args\u003e\\n\"\n\t  \"Creates or inspects a Haiku package repository file.\\n\"\n\t  \"\\n\"\n\t  \"Commands:\\n\"\n\t  \"  create [ \u003coptions\u003e ] \u003crepo-info\u003e \u003cpackage-file ...\u003e \\n\"\n\t  \"    Creates a package repository from the information found in \\n\"\n\t  \"    \u003crepo-info\u003e, adding the given package files.\\n\"\n\t  \"\\n\"\n\t  \"    -C \u003cdir\u003e   - Change to directory \u003cdir\u003e before starting.\\n\"\n\t  \"    -q         - be quiet (don\u0027t show any output except for errors).\\n\"\n\t  \"    -v         - be verbose (list package attributes as encountered).\\n\"\n\t  \"\\n\"\n\t  \"  list [ \u003coptions\u003e ] \u003cpackage-repo\u003e\\n\"\n\t  \"    Lists the contents of package repository file \u003cpackage-repo\u003e.\\n\"\n\t  \"\\n\"\n\t  \"    -v         - be verbose (list attributes of all packages found).\\n\"\n\t  \"\\n\"\n\t  \"  update [ \u003coptions\u003e ] \u003csource-repo\u003e \u003cnew-repo\u003e \u003cpackage-list-file\u003e \\n\"\n\t  \"    Creates package repository file \u003cnew-repo\u003e with all the packages\\n\"\n\t  \"    contained in \u003cpackage-list-file\u003e. If possible, package-infos are\\n\"\n\t  \"    taken from \u003csource-repo\u003e to avoid the need for recomputing the\\n\"\n\t  \"    checksum of all packages.\\n\"\n\t  \"    \u003cold-repo\u003e and \u003cnew-repo\u003e can be the same file.\\n\"\n\t  \"    When -t is specified, filenames in the package-list-file are assumed\\n\"\n\t  \"    to be equal to their canonical name that can be reconstructed from\\n\"\n\t  \"    the repository file. This removes the need for accessing the files\\n\"\n\t  \"    and they are allowed to be completely missing.\\n\"\n\t  \"\\n\"\n\t  \"    -C \u003cdir\u003e   - Change to directory \u003cdir\u003e before starting.\\n\"\n\t  \"    -q         - be quiet (don\u0027t show any output except for errors).\\n\"\n\t  \"    -v         - be verbose (list package attributes as encountered).\\n\"\n\t  \"    -t         - Trust filenames in package-list-file to be canonical.\\n\"\n\t  \"\\n\"\n\t  \"Common Options:\\n\"\n\t  \"  -h, --help   - Print this usage info.\\n\";\n```",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 55,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "5ee5130f6963ced38579cb2e5e401c0f95158e1c",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}