{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "a7729e08_c856dd12",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2023-03-14T21:50:12Z",
      "side": 1,
      "message": "I don\u0027t know how often Lookup() is actually done in practice (e.g. for get_area_info/get_next_area_info) but 2 minutes for 2 million areas seems pathologically slow, though, and any areas created before that time will take even longer to locate in the hash lists; otherwise I would have just altered the OpenHashTable to use a doubly-linked list and perform deletions in O(1) instead (which may be a good idea anyway.)",
      "revId": "f54539020559f0b67fa72dd46158e31d54bb1168",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "12e4dfb7_41cb4113",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2023-03-14T22:01:06Z",
      "side": 1,
      "message": "BTW, it appears the area hash was once the \"region hash\" and goes all the way back to NewOS!",
      "revId": "f54539020559f0b67fa72dd46158e31d54bb1168",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0d18d662_aa7d47ab",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-03-14T22:36:03Z",
      "side": 1,
      "message": "Looks good to me.    It\u0027s a great time for this just after a release since it has time to bake in master.",
      "revId": "f54539020559f0b67fa72dd46158e31d54bb1168",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f1f310e4_c658d9a1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2023-03-15T07:03:05Z",
      "side": 1,
      "message": "Nice!",
      "revId": "f54539020559f0b67fa72dd46158e31d54bb1168",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d24738cb_6223a06e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2023-03-18T07:32:01Z",
      "side": 1,
      "message": "Looks OK but RISC-V build needs to be adjusted (direct call to VMAreaHash::LookupLocked where I think it could use VMAreas::Lookup instead).",
      "revId": "f54539020559f0b67fa72dd46158e31d54bb1168",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9928e4f3_a2fe3f45",
        "filename": "headers/private/kernel/vm/VMArea.h",
        "patchSetId": 2
      },
      "lineNbr": 93,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2023-03-15T07:03:05Z",
      "side": 1,
      "message": "Do we need this indirection?",
      "revId": "f54539020559f0b67fa72dd46158e31d54bb1168",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "280daed1_58aa2616",
        "filename": "headers/private/kernel/vm/VMArea.h",
        "patchSetId": 2
      },
      "lineNbr": 93,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2023-03-24T14:59:12Z",
      "side": 1,
      "message": "Ah, sorry, I forgot to add a note to the commit message about this.\n\nYes, we do. Some subclasses of VMArea also derive from AVLTreeNode, keyed not on area_id but on the virtual address with in the AddressSpace. Thus in order that we can be part of multiple AVLTrees at once, we need this indirection.",
      "parentUuid": "9928e4f3_a2fe3f45",
      "revId": "f54539020559f0b67fa72dd46158e31d54bb1168",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}