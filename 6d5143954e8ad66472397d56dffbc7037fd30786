{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f357cd4c_7d9b135b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2025-02-28T17:08:34Z",
      "side": 1,
      "message": "This seems strange to me. Does NFSv4 provide no notifications at all when files are deleted? It looks like the NFSv4 driver doesn\u0027t implement the node monitoring interface (notify_entry_* and related methods), but there must be some way to do that, right? If it does, handling those messages and removing caches at the same time as sending node monitor messages sounds like a much better solution.\n\nFurthermore, there appears to be a \"cache time\" value. Does your server send that? It looks like the DirectoryCache does take it into account, so how does that come into play here?",
      "revId": "6d5143954e8ad66472397d56dffbc7037fd30786",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c15f4d77_f8abe40e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000366
      },
      "writtenOn": "2025-03-01T15:10:53Z",
      "side": 1,
      "message": "I can\u0027t find anything in the NFSv4 RFC to indicate that NFS notifies clients when a file is deleted.  This is consistent with this line about NFS in Wikipedia:  \"changes made by one client are not immediately broadcast to other clients\" (https://en.wikipedia.org/wiki/Inotify).\n\nThe DirectoryCache refreshes automatically (every 5 seconds by default).  One effect of this is that \u0027ls\u0027 will not list a deleted file.  Should a check for stale nodes could be done every time the DirectoryCache is refreshed?  This would get rid of stale nodes sooner and more consistently, although maybe even then doing a additional check in Inode::CreateState/CreateObject would still be desirable to cover operations that happen right after a file was deleted by someone else, and before the DirectoryCache update got rid of the stale node.",
      "parentUuid": "f357cd4c_7d9b135b",
      "revId": "6d5143954e8ad66472397d56dffbc7037fd30786",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "df003bd3_e15db0b1",
        "filename": "src/add-ons/kernel/file_systems/nfs4/FileSystem.cpp",
        "patchSetId": 1
      },
      "lineNbr": 147,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-02-28T16:20:47Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nFileSystem::Mount(FileSystem** _fs, RPC::Server* serv, const char* serverName, const char* fsPath,\n\tfs_volume* volume, const MountConfiguration\u0026 configuration)\n```",
      "range": {
        "startLine": 146,
        "startChar": 0,
        "endLine": 147,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "6d5143954e8ad66472397d56dffbc7037fd30786",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a5ab7f52_2f219bed",
        "filename": "src/add-ons/kernel/file_systems/nfs4/kernel_interface.cpp",
        "patchSetId": 1
      },
      "lineNbr": 197,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-02-28T16:20:47Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tresult \u003d FileSystem::Mount(\u0026fs, server, serverName, path, volume, config);\n```",
      "range": {
        "startLine": 196,
        "startChar": 0,
        "endLine": 197,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "6d5143954e8ad66472397d56dffbc7037fd30786",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}