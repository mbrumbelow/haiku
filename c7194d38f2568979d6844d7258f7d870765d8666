{
  "comments": [
    {
      "key": {
        "uuid": "7e21ed69_a2c4e2c6",
        "filename": "src/system/kernel/arch/x86/arch_system_info.cpp",
        "patchSetId": 1
      },
      "lineNbr": 147,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2020-09-14T14:45:10Z",
      "side": 1,
      "message": "if I read the specs correctly, mperf and aperf are both reset to 0 on overflow of either one. This creates a discontinuity.\n\nSo maybe we need to check ((mperf2 \u003c mperf) || (aperf2 \u003c aperf)) here to cover that case.\n\nMoreover the intel_pstate module resets them to 0: https://git.haiku-os.org/haiku/tree/src/add-ons/kernel/power/cpufreq/intel_pstates/intel_pstates.cpp#n64\n\nWouldn\u0027t that interfere with this code?",
      "revId": "c7194d38f2568979d6844d7258f7d870765d8666",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c14359e_b8daa078",
        "filename": "src/system/kernel/arch/x86/arch_system_info.cpp",
        "patchSetId": 1
      },
      "lineNbr": 147,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2020-09-14T18:42:15Z",
      "side": 1,
      "message": "\u003e if I read the specs correctly, mperf and aperf are both reset to 0 on overflow of either one. This creates a discontinuity.\n\u003e \n\u003e So maybe we need to check ((mperf2 \u003c mperf) || (aperf2 \u003c aperf)) here to cover that case.\n\u003e \n\nI understand but at least Linux doesn\u0027t seem to care:\nhttps://github.com/torvalds/linux/blob/223cea6a4f0552b86fb25e3b8bbd00469816cd7a/arch/x86/kernel/cpu/aperfmperf.c#L47",
      "parentUuid": "7e21ed69_a2c4e2c6",
      "revId": "c7194d38f2568979d6844d7258f7d870765d8666",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    }
  ]
}