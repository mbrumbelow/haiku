{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d9d5454e_0a0a7018",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2023-01-23T19:57:35Z",
      "side": 1,
      "message": "Can\u0027t you have just a single function, Register(reg), returning the needed pointer, that does the base + offset code needed for that particular driver?",
      "revId": "4432da999ce945f4274d439fdb5dec6d0cf76ad2",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e84f24f7_435e1b61",
        "filename": "headers/private/kernel/arch/arm/arch_uart_pl011.h",
        "patchSetId": 8
      },
      "lineNbr": 24,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2023-01-10T10:31:12Z",
      "side": 1,
      "message": "actually... do non-8250 UARTs need this at all?\n\nThe reason the regShift exist is because the original 8250 UART is designed for 8-bit I/O ports, but ARM and other platofrms prefer to use 4byte aligned addresses.\n\nBut in the case of PL011, the registers are already 32-bit as it is designed specifically for ARM. And so, no regShift should ever be needed.\n\nThe fact that the coed here use In32/Out32 makes me think it doesn\u0027t expect the register addresses to need a shift.",
      "revId": "4432da999ce945f4274d439fdb5dec6d0cf76ad2",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c595da74_ca2fa978",
        "filename": "headers/private/kernel/arch/arm/arch_uart_pl011.h",
        "patchSetId": 8
      },
      "lineNbr": 24,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-01-10T13:50:49Z",
      "side": 1,
      "message": "The shift seems to exist universally in dtb however.  It\u0027s a field for all potential devices, which means all of our drivers should expect it.\n\nHere are the knowns:\n\n* arm and arm64 universally to omit reg-shift, but assume you do reg-shift 2\n  * however, i\u0027m assuming if a dts provides reg-shift on arm, it should \"override\" the default of 2\n  * pl011 devices also specify a reg-shift of 2 in dts.\n* riscv64 specifies the reg-shift, and seem to assume 0\n* x86 wants a reg-shift of 0 in a lot of cases.\n* ppc - unknown\n* sparc - unknown (you might be able to fill us in here)\n\nThere are a lot of universal cases here, and the 8250\u0027s aren\u0027t the only devices with reg-shifts.\n\n\nHere\u0027s some data.  Anything mentioning reg-shift in u-boot\u0027s dts tree and the matching compat:\nhttps://gist.github.com/kallisti5/824c634a9a1f18fb7cee3432e1049972\n\n\nHere\u0027s the opposite.  Anything mentioning ns16550 and then grepping for any surrounding reg-shifts:\nhttps://gist.github.com/kallisti5/4124cd872a25ffcf44d20e33bf076cd3",
      "parentUuid": "e84f24f7_435e1b61",
      "revId": "4432da999ce945f4274d439fdb5dec6d0cf76ad2",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ba548fa3_a17d033c",
        "filename": "headers/private/kernel/arch/arm/arch_uart_pl011.h",
        "patchSetId": 8
      },
      "lineNbr": 24,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-01-10T14:02:05Z",
      "side": 1,
      "message": "Looking at the data for things that stand out:\n\n\"non-2\":\n\narm/dts/hpe-gxp.dtsi-\t\t\t\tcompatible \u003d \"ns16550a\";\narm/dts/hpe-gxp.dtsi:\t\t\t\treg-shift \u003d \u003c0\u003e;\n\nmips/dts/mrvl,cn73xx.dtsi-\t\t\tcompatible \u003d \"cavium,octeon-3860-uart\",\"ns16550\";\nmips/dts/mrvl,cn73xx.dtsi:\t\t\treg-shift \u003d \u003c3\u003e;\n\nx86/dts/serial.dtsi-\t\tcompatible \u003d \"ns16550\";\nx86/dts/serial.dtsi:\t\treg-shift \u003d \u003c0\u003e;\n\n\n\"assumed 2\"\n\narm/dts/fsl-ls1028a.dtsi:\t\t\tcompatible \u003d \"fsl,ns16550\", \"ns16550a\";\narm/dts/fsl-ls1028a.dtsi:\t\t\tcompatible \u003d \"fsl,ns16550\", \"ns16550a\";\narm/dts/fsl-ls1088a.dtsi:\t\tcompatible \u003d \"fsl,ns16550\", \"ns16550a\";\narm/dts/fsl-ls1088a.dtsi:\t\tcompatible \u003d \"fsl,ns16550\", \"ns16550a\";\narm/dts/fsl-ls2080a.dtsi:\t\tcompatible \u003d \"fsl,ns16550\", \"ns16550a\";\narm/dts/fsl-ls2080a.dtsi:\t\tcompatible \u003d \"fsl,ns16550\", \"ns16550a\";\n\narm/dts/fsl-ls1012a.dtsi:\t\t\tcompatible \u003d \"fsl,ns16550\", \"ns16550a\";\narm/dts/fsl-ls1012a.dtsi:\t\t\tcompatible \u003d \"fsl,ns16550\", \"ns16550a\";\narm/dts/fsl-ls1043a.dtsi:\t\t\tcompatible \u003d \"fsl,ns16550\", \"ns16550a\";\narm/dts/fsl-ls1043a.dtsi:\t\t\tcompatible \u003d \"fsl,ns16550\", \"ns16550a\";\narm/dts/fsl-ls1043a.dtsi:\t\t\tcompatible \u003d \"fsl,ns16550\", \"ns16550a\";\narm/dts/fsl-ls1043a.dtsi:\t\t\tcompatible \u003d \"fsl,ns16550\", \"ns16550a\";\narm/dts/fsl-ls1046a.dtsi:\t\t\tcompatible \u003d \"fsl,ns16550\", \"ns16550a\";\narm/dts/fsl-ls1046a.dtsi:\t\t\tcompatible \u003d \"fsl,ns16550\", \"ns16550a\";\narm/dts/fsl-ls1046a.dtsi:\t\t\tcompatible \u003d \"fsl,ns16550\", \"ns16550a\";\narm/dts/fsl-ls1046a.dtsi:\t\t\tcompatible \u003d \"fsl,ns16550\", \"ns16550a\";\n\n\"assumed 0?\"\npowerpc/dts/km8321.dtsi:\t\t\tcompatible \u003d \"fsl,ns16550\", \"ns16550\";\npowerpc/dts/km836x.dtsi:\t\t\tcompatible \u003d \"fsl,ns16550\", \"ns16550\";\npowerpc/dts/km836x.dtsi:\t\t\tcompatible \u003d \"fsl,ns16550\", \"ns16550\";\npowerpc/dts/qoriq-duart-0.dtsi:\tcompatible \u003d \"fsl,ns16550\", \"ns16550\";\npowerpc/dts/qoriq-duart-0.dtsi:\tcompatible \u003d \"fsl,ns16550\", \"ns16550\";\npowerpc/dts/qoriq-duart-1.dtsi:\tcompatible \u003d \"fsl,ns16550\", \"ns16550\";\npowerpc/dts/qoriq-duart-1.dtsi:\tcompatible \u003d \"fsl,ns16550\", \"ns16550\";",
      "parentUuid": "c595da74_ca2fa978",
      "revId": "4432da999ce945f4274d439fdb5dec6d0cf76ad2",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "33140728_33b0140f",
        "filename": "headers/private/kernel/arch/arm/arch_uart_pl011.h",
        "patchSetId": 8
      },
      "lineNbr": 24,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2023-01-12T10:01:54Z",
      "side": 1,
      "message": "sparc does not use flattened device trees, they use open firmware device tree which does not go through this code for now. I don\u0027t think they have a notion of \"reg-shift\", but sparc machines have their own UART type anyway.\n\nPowerPC is usually open firmware but there are some uboot based boards too. Not sure if FDT is used there or not, it\u0027s a very old uboot version and personally I wouldn\u0027t spend more time on it.\n\nFor the PL011, it is strange that reg-shift would be used since the offsets in the documentation are already 4 byte aligned: https://developer.arm.com/documentation/ddi0183/f/programmer-s-model/summary-of-registers?lang\u003den\n\nNote that several of the registers are wider (more than 8 bits) there.\n\nThe only case where you need reg-shift is when a device is compatible with another, but the registers are \"spread out\" in memory. I don\u0027t think this would happen with pl011, which is not compatible with anything else and has sufficiently aligned registers?",
      "parentUuid": "ba548fa3_a17d033c",
      "revId": "4432da999ce945f4274d439fdb5dec6d0cf76ad2",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9e21c98e_72588a68",
        "filename": "headers/private/kernel/arch/arm/arch_uart_pl011.h",
        "patchSetId": 8
      },
      "lineNbr": 24,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-01-23T18:32:20Z",
      "side": 1,
      "message": "Ugh. The only real way to solve all of this is to pass the full fdt node into each uart driver, then have each one individually decide if they want to pay attention to reg-shifts.\n\nThat kinda smells though since the representation of fdt\u0027s differ between the kernel and bootloader code.",
      "parentUuid": "33140728_33b0140f",
      "revId": "4432da999ce945f4274d439fdb5dec6d0cf76ad2",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}