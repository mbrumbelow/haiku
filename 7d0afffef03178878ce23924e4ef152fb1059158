{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c65c26c6_e523bd06",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2025-02-06T00:46:47Z",
      "side": 1,
      "message": "This is just an experiment to see if it works better (or worse) than ACPICA. At this point I have no intent on switching us away from ACPICA unless this proves to solve many problems.",
      "revId": "7d0afffef03178878ce23924e4ef152fb1059158",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb7cc199_4f80bd0b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2025-02-06T10:04:28Z",
      "side": 1,
      "message": "This looks nice and seems to match Haiku code better. I tried to check where global lock handling is done but didn\u0027t see it. Is that all done by UACPI?",
      "revId": "7d0afffef03178878ce23924e4ef152fb1059158",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a5890413_728e976e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000743
      },
      "writtenOn": "2025-02-06T10:05:25Z",
      "side": 1,
      "message": "If you mean field accesses from AML it is done by uACPI internally of course.",
      "parentUuid": "fb7cc199_4f80bd0b",
      "revId": "7d0afffef03178878ce23924e4ef152fb1059158",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e6692ea1_7500859e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000743
      },
      "writtenOn": "2025-02-06T10:08:27Z",
      "side": 1,
      "message": "See https://github.com/uACPI/uACPI/blob/master/source/mutex.c#L18",
      "parentUuid": "a5890413_728e976e",
      "revId": "7d0afffef03178878ce23924e4ef152fb1059158",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "990e2045_0f7a1c08",
        "filename": "src/add-ons/kernel/bus_managers/acpi/arch/x86/arch_init.cpp",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2025-02-06T00:39:47Z",
      "side": 1,
      "message": "If we\u0027re going to seriously consider switching to uACPI, maybe we can ask upstream if they\u0027d take this?",
      "revId": "7d0afffef03178878ce23924e4ef152fb1059158",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "703c0a14_b3229475",
        "filename": "src/add-ons/kernel/bus_managers/acpi/arch/x86/arch_init.cpp",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2025-02-06T00:46:47Z",
      "side": 1,
      "message": "I will ask them for help with the missing parts when I\u0027m done with the easy changes.",
      "parentUuid": "990e2045_0f7a1c08",
      "revId": "7d0afffef03178878ce23924e4ef152fb1059158",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e85a7320_5f93d064",
        "filename": "src/add-ons/kernel/bus_managers/acpi/arch/x86/arch_init.cpp",
        "patchSetId": 1
      },
      "lineNbr": 164,
      "author": {
        "id": 1000743
      },
      "writtenOn": "2025-02-06T09:42:45Z",
      "side": 1,
      "message": "If you\u0027re going to use object_create, don\u0027t forget to object_unref later",
      "revId": "7d0afffef03178878ce23924e4ef152fb1059158",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1a68b62a_da8e854a",
        "filename": "src/add-ons/kernel/bus_managers/acpi/arch/x86/arch_init.cpp",
        "patchSetId": 1
      },
      "lineNbr": 168,
      "author": {
        "id": 1000743
      },
      "writtenOn": "2025-02-06T09:42:45Z",
      "side": 1,
      "message": "`uacpi_set_interrupt_model(apic_available() ? UACPI_INTERRUPT_MODEL_IOAPIC : UACPI_INTERRUPT_MODEL_PIC);`",
      "revId": "7d0afffef03178878ce23924e4ef152fb1059158",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6763adb4_b95c9bae",
        "filename": "src/system/kernel/arch/generic/acpi_irq_routing_table.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1029,
      "author": {
        "id": 1000743
      },
      "writtenOn": "2025-02-06T09:47:24Z",
      "side": 1,
      "message": "Same idea as ACPICA, resources are variable length, you must use `UACPI_NEXT_RESOURCE`, or just add the length field manually. Basically same as the old code.",
      "revId": "7d0afffef03178878ce23924e4ef152fb1059158",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}