{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "def68b84_d0876483",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2022-05-12T05:09:51Z",
      "side": 1,
      "message": "Why are LocalClean rules redundant? I understand that with LocalClean Jam would only clean current dir and subdirs.",
      "revId": "48a250a83fde82ef1be7bee46f321c7eef00fb49",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bedbe241_5a43cae5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000385
      },
      "writtenOn": "2022-05-12T14:25:55Z",
      "side": 1,
      "message": "I believe that \u0027jam clean\u0027 would only be invoked at the top-level of the build directory right? We do builds out-of-tree and Jam can\u0027t be invoked in build sub-directories since we don\u0027t keep Jamfiles there.\n\nSince the entire objects directory is removed on cleaning after the previous change, there is no reason to also clean the files individually.\n\nAm I missing something about jam clean\u0027s usage? Thanks!",
      "parentUuid": "def68b84_d0876483",
      "revId": "48a250a83fde82ef1be7bee46f321c7eef00fb49",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0a98401f_f6ba9a61",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2022-05-12T14:40:54Z",
      "side": 1,
      "message": "out-of-tree builds are recommended but not required. It\u0027s possible to do an in-tree build and jam will create the \"generated\" directory then. In that case it\u0027s possible to run jam in subdirectories to build only parts of Haiku. This is not well documented anymore, but I think it should still work.\n\nAnyway, \"jam clean\" never really worked for us. I think it deletes some host tools and then later on runs some \"clean\" targets that require such tools. The recommended way to do it is simply to delete parts or all of the generated/objects/ directory.\n\nCan you elaborate on what these rules do exactly and how they are meant to be used?",
      "parentUuid": "bedbe241_5a43cae5",
      "revId": "48a250a83fde82ef1be7bee46f321c7eef00fb49",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "daab71e6_57911aa4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2022-05-12T16:33:42Z",
      "side": 1,
      "message": "\u003e In that case it\u0027s possible to run jam in subdirectories to build only parts of Haiku. This is not well documented anymore, but I think it should still work.\n\nIt doesn\u0027t, and I\u0027m not sure it ever did? Building in subdirectories just builds all of Haiku anyway. You have to specify specific targets to build specific things no matter what directory you are in.",
      "parentUuid": "0a98401f_f6ba9a61",
      "revId": "48a250a83fde82ef1be7bee46f321c7eef00fb49",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3e08e868_12bafbbf",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000385
      },
      "writtenOn": "2022-05-12T16:51:32Z",
      "side": 1,
      "message": "\u003e Anyway, \"jam clean\" never really worked for us. I think it deletes some host tools and then later on runs some \"clean\" targets that require such tools. The recommended way to do it is simply to delete parts or all of the generated/objects/ directory.\n\nYeah, that\u0027s the issue I ran into that prompted this patch; removing individual files requires some additional tooling on systems with emulated attributes, which is deleted mid-clean. There\u0027s a hacky way to \"exclude\" files from being cleaned, but I thought the best solution was, as you said, to delete the entire directory.\n\n\u003e Can you elaborate on what these rules do exactly and how they are meant to be used?\n\nThe first commit in this series introduces a \u0027CleanDir\u0027 rule so that, when \u0027clean\u0027 is built, the \u0027objects\u0027, \u0027tmp\u0027, and possibly the \u0027attributes\u0027 directory are deleted. Since the entire directory is removed, it renders the \u0027LocalClean\u0027 rules (which delete individual files) redundant.",
      "parentUuid": "daab71e6_57911aa4",
      "revId": "48a250a83fde82ef1be7bee46f321c7eef00fb49",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a82401d7_e2aeba05",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000385
      },
      "writtenOn": "2022-05-12T16:51:32Z",
      "side": 1,
      "message": "\u003e It doesn\u0027t, and I\u0027m not sure it ever did? Building in subdirectories just builds all of Haiku anyway. You have to specify specific targets to build specific things no matter what directory you are in.\n\nThis was my experience as well. Besides, regardless of what is built, I don\u0027t think it changes that \u0027LocalClean\u0027 is not necessary if the objects directory is deleted right?\n\nThe only individual files that should probably be deleted are top-level files like the efi/iso. I\u0027ll look into ensuring those are cleaned.",
      "parentUuid": "daab71e6_57911aa4",
      "revId": "48a250a83fde82ef1be7bee46f321c7eef00fb49",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d2c996f3_a75bbca1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2022-05-13T06:23:45Z",
      "side": 1,
      "message": "clean in subdirectories definitely works:\n\n~/githaiku/haiku/src/apps/haikudepot$ jam -sHAIKU_OUTPUT_DIR\u003d/home/korli/githaiku/haiku/generated_gcc11_64 clean\n\u003d\u003e only Haikudepot cleaned\n\n~/githaiku/haiku/src/apps/haikudepot$ jam -sHAIKU_OUTPUT_DIR\u003d/home/korli/githaiku/haiku/generated_gcc11_64\n\u003d\u003e only Haikudepot built",
      "parentUuid": "a82401d7_e2aeba05",
      "revId": "48a250a83fde82ef1be7bee46f321c7eef00fb49",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7d0e8eb3_a00b2b8d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000385
      },
      "writtenOn": "2022-05-13T12:58:24Z",
      "side": 1,
      "message": "Oh yeah, I see how that would be nice to have. To keep that we\u0027d have to keep deleting individual files instead of folders since the source/build directories don\u0027t match up right?\n\nIf we want to keep using \u0027jam clean\u0027 in subdirs like this, we can close this patch and I\u0027ll submit another one that fixes \u0027jam clean\u0027 when using emulated attributes and try to root out rules missing \u0027LocalClean\u0027 statements.\n\nI suppose we could also keep the first patch as a \u0027clean-all\u0027 target for when people just want to clear out all objects and temporaries right? Let me know your thoughts.",
      "parentUuid": "d2c996f3_a75bbca1",
      "revId": "48a250a83fde82ef1be7bee46f321c7eef00fb49",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}