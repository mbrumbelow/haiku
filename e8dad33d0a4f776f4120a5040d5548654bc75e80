{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e228da7a_8f17a0c9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2024-07-18T15:16:27Z",
      "side": 1,
      "message": "Hmm, interesting class design. But I wonder, why not go even further? Instead of just sharing the code for saving/loading settings between input_server and Input preferences, why not make input_server responsible for saving the files entirely?\n\n... Or is it already? I looked at the Keyboard settings and it appears the Save code is only on the server side. So why do we need to have that class from input_server imported into Input preferences at all? (I mean, do we even need a \"Keyboard settings\" class in Input preferences? Or rather, if we do, won\u0027t it have features entirely separate from the ones the server-side class does?)",
      "revId": "e8dad33d0a4f776f4120a5040d5548654bc75e80",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5bebb587_1618a429",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000223
      },
      "writtenOn": "2024-07-18T15:41:58Z",
      "side": 1,
      "message": "Frankly, I *think* we don\u0027t really need any coupling. From what I\u0027ve seen while working on this change, the preferences just need to get and set the device\u0027s properties and compare them with default and original values. When a value is changed, `set_whatever` is called, which goes to the input_server, which is supposed to save the configuration if it changes, so I don\u0027t really know why it would need much of what\u0027s there.\n\nOn the other hand, you want to keep track of the values, so maybe if you started anew you would still get something similar anyway. I will certainly not explore that possibility in the near future.",
      "parentUuid": "e228da7a_8f17a0c9",
      "revId": "e8dad33d0a4f776f4120a5040d5548654bc75e80",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "909966b8_b8e60047",
        "filename": "src/preferences/input/InputWindow.cpp",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-07-18T10:50:10Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\tB_NOT_RESIZABLE | B_NOT_ZOOMABLE | B_ASYNCHRONOUS_CONTROLS | B_AUTO_UPDATE_SIZE_LIMITS\n\t\t\t| B_QUIT_ON_WINDOW_CLOSE),\n```",
      "range": {
        "startLine": 41,
        "startChar": 0,
        "endLine": 42,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e8dad33d0a4f776f4120a5040d5548654bc75e80",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "78ed531a_6a8d7fd5",
        "filename": "src/preferences/input/MouseView.h",
        "patchSetId": 1
      },
      "lineNbr": 63,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-07-18T10:50:10Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#endif /* MOUSE_VIEW_H */\n```",
      "range": {
        "startLine": 63,
        "startChar": 0,
        "endLine": 63,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e8dad33d0a4f776f4120a5040d5548654bc75e80",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8a92d7e3_a1ab3c71",
        "filename": "src/preferences/input/TKeyboardSettings.h",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-07-18T10:50:10Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nclass TKeyboardSettings : public KeyboardSettings\n{\n```",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 20,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e8dad33d0a4f776f4120a5040d5548654bc75e80",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "75e41913_24413d69",
        "filename": "src/preferences/input/TMouseSettings.cpp",
        "patchSetId": 1
      },
      "lineNbr": 82,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-07-18T10:50:10Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tif (settings-\u003eclick_speed !\u003d kDefaultClickSpeed || settings-\u003eaccel.speed !\u003d kDefaultMouseSpeed\n```",
      "range": {
        "startLine": 81,
        "startChar": 0,
        "endLine": 82,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e8dad33d0a4f776f4120a5040d5548654bc75e80",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eff69e52_4fa5c1f7",
        "filename": "src/preferences/input/TMouseSettings.cpp",
        "patchSetId": 1
      },
      "lineNbr": 86,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-07-18T10:50:10Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t|| MouseMode() !\u003d B_NORMAL_MOUSE || FocusFollowsMouseMode() !\u003d B_NORMAL_FOCUS_FOLLOWS_MOUSE\n```",
      "range": {
        "startLine": 85,
        "startChar": 0,
        "endLine": 86,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e8dad33d0a4f776f4120a5040d5548654bc75e80",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8f9cdabb_59f6d1cb",
        "filename": "src/preferences/input/TMouseSettings.cpp",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-07-18T10:50:10Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\treturn true;\n```",
      "range": {
        "startLine": 88,
        "startChar": 0,
        "endLine": 88,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e8dad33d0a4f776f4120a5040d5548654bc75e80",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e2753967_418dbce6",
        "filename": "src/preferences/input/TMouseSettings.cpp",
        "patchSetId": 1
      },
      "lineNbr": 127,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-07-18T10:50:10Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t|| MouseMode() !\u003d fOriginalMode || FocusFollowsMouseMode() !\u003d fOriginalFocusFollowsMouseMode\n```",
      "range": {
        "startLine": 126,
        "startChar": 0,
        "endLine": 127,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e8dad33d0a4f776f4120a5040d5548654bc75e80",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4f7babb3_dfb38a35",
        "filename": "src/preferences/input/TMouseSettings.cpp",
        "patchSetId": 1
      },
      "lineNbr": 129,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-07-18T10:50:10Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\treturn true;\n```",
      "range": {
        "startLine": 129,
        "startChar": 0,
        "endLine": 129,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e8dad33d0a4f776f4120a5040d5548654bc75e80",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5dde5441_a611520a",
        "filename": "src/preferences/input/TMouseSettings.h",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-07-18T10:50:10Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nclass TMouseSettings : public MouseSettings\n{\n```",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 25,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e8dad33d0a4f776f4120a5040d5548654bc75e80",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "793abde5_49a83b9a",
        "filename": "src/preferences/input/TMouseSettings.h",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-07-18T10:50:10Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#endif // TMOUSE_SETTINGS_H\n```",
      "range": {
        "startLine": 62,
        "startChar": 0,
        "endLine": 62,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e8dad33d0a4f776f4120a5040d5548654bc75e80",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f965cceb_01a3e3ab",
        "filename": "src/servers/input/MouseSettings.h",
        "patchSetId": 1
      },
      "lineNbr": 33,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-07-18T10:50:10Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nstatic const int32 kDefaultMouseType \u003d 3; // 3 button mouse\n```",
      "range": {
        "startLine": 33,
        "startChar": 0,
        "endLine": 33,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e8dad33d0a4f776f4120a5040d5548654bc75e80",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0eef9796_8f3bf147",
        "filename": "src/servers/input/MouseSettings.h",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-07-18T10:50:10Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\ntypedef MouseSettings*(MouseSettingsFactory)(const BString\u0026 name, const mouse_settings* settings);\n```",
      "range": {
        "startLine": 88,
        "startChar": 0,
        "endLine": 88,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e8dad33d0a4f776f4120a5040d5548654bc75e80",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}