{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "a6c92741_a04baf80",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000016
      },
      "writtenOn": "2024-06-04T06:00:41Z",
      "side": 1,
      "message": "Unfortunately, I don\u0027t have the time to really look into the changes. However, it\u0027s been on my to-do list for a long time now :-)\n\nFrom glancing at it, it looks good to me, though; besides the NodeGetter inconsistency, I have no remarks.",
      "revId": "2acd433ea295f7d06e2cf952bb9875f24f4daa80",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f2c99333_dd5478e9",
        "filename": "src/add-ons/kernel/file_systems/bfs/Inode.h",
        "patchSetId": 2
      },
      "lineNbr": 360,
      "author": {
        "id": 1000016
      },
      "writtenOn": "2024-06-04T06:00:41Z",
      "side": 1,
      "message": "If you can create a NodeGetter without a volume, shouldn\u0027t SetToWritable() have the same logic as SetTo() here?",
      "revId": "2acd433ea295f7d06e2cf952bb9875f24f4daa80",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "43391467_13040cb1",
        "filename": "src/add-ons/kernel/file_systems/bfs/Query.cpp",
        "patchSetId": 2
      },
      "lineNbr": 16,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-05-31T04:05:44Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (insert after):\n```c++\n#include \u003cfile_systems/QueryParser.h\u003e\n```",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 16,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "2acd433ea295f7d06e2cf952bb9875f24f4daa80",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b79c5196_278812a1",
        "filename": "src/add-ons/kernel/file_systems/bfs/Query.cpp",
        "patchSetId": 2
      },
      "lineNbr": 18,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-05-31T04:05:44Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` is to remove this line/these lines.",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 18,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "2acd433ea295f7d06e2cf952bb9875f24f4daa80",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "62683dad_79c494f9",
        "filename": "src/add-ons/kernel/file_systems/bfs/Query.cpp",
        "patchSetId": 2
      },
      "lineNbr": 292,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-05-31T04:05:44Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nQuery::Create(Volume* volume, const char* queryString, uint32 flags, port_id port, uint32 token,\n\tQuery*\u0026 _query)\n```",
      "range": {
        "startLine": 291,
        "startChar": 0,
        "endLine": 292,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "2acd433ea295f7d06e2cf952bb9875f24f4daa80",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9c6a9b3f_8595825d",
        "filename": "src/add-ons/kernel/file_systems/bfs/Query.cpp",
        "patchSetId": 2
      },
      "lineNbr": 328,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-05-31T04:05:44Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nQuery::LiveUpdate(Inode* inode, const char* attribute, int32 type, const void* oldKey,\n\tsize_t oldLength, const void* newKey, size_t newLength)\n{\n\tfImpl-\u003eLiveUpdate(inode, inode, attribute, type, (const uint8*)oldKey, oldLength,\n```",
      "range": {
        "startLine": 324,
        "startChar": 0,
        "endLine": 328,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "2acd433ea295f7d06e2cf952bb9875f24f4daa80",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b396ccea_2d1f63c4",
        "filename": "src/add-ons/kernel/file_systems/bfs/Query.cpp",
        "patchSetId": 2
      },
      "lineNbr": 340,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-05-31T04:05:44Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nQuery::LiveUpdateRenameMove(Inode* inode, ino_t oldDirectoryID, const char* oldName,\n\tsize_t oldLength, ino_t newDirectoryID, const char* newName, size_t newLength)\n{\n\tfImpl-\u003eLiveUpdateRenameMove(inode, inode, oldDirectoryID, oldName, oldLength, newDirectoryID,\n\t\tnewName, newLength);\n```",
      "range": {
        "startLine": 334,
        "startChar": 0,
        "endLine": 340,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "2acd433ea295f7d06e2cf952bb9875f24f4daa80",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1d6bc219_5261bc02",
        "filename": "src/add-ons/kernel/file_systems/bfs/Query.cpp",
        "patchSetId": 2
      },
      "lineNbr": 348,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-05-31T04:05:44Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tstatus_t error \u003d QueryImpl::Create(this, queryString, flags, port, token, fImpl);\n```",
      "range": {
        "startLine": 347,
        "startChar": 0,
        "endLine": 348,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "2acd433ea295f7d06e2cf952bb9875f24f4daa80",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e6262063_616d54e2",
        "filename": "src/add-ons/kernel/file_systems/bfs/Query.h",
        "patchSetId": 2
      },
      "lineNbr": 15,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-05-31T04:05:44Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\ntemplate\u003ctypename QueryPolicy\u003e class Query;\n```",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 15,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "2acd433ea295f7d06e2cf952bb9875f24f4daa80",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "34321714_899fd1fa",
        "filename": "src/add-ons/kernel/file_systems/bfs/Query.h",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-05-31T04:05:44Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nclass Query : public DoublyLinkedListLinkImpl\u003cQuery\u003e\n{\n```",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 21,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "2acd433ea295f7d06e2cf952bb9875f24f4daa80",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}