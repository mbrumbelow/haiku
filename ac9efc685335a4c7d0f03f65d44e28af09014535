{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "92def9a8_11262f3a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2023-07-23T19:29:13Z",
      "side": 1,
      "message": "I actually think we should not have this particular convenience function.\n\nThe rationale would be that the Wait function cannot just unlock-wait-lock, it has to unlock-enable interrupts-wait-disable interrupts-lock. That is, a quick scan of code that used this Wait function could easily miss the fact that calling it implicitly re-enables interrupts.\n\nThat may not be a problem in some contexts, but it could pose one in others. For that reason I believe the interrupts switch and then wait should not be hidden inside a Wait().",
      "revId": "ac9efc685335a4c7d0f03f65d44e28af09014535",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "029228a7_2e2e9104",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000172
      },
      "writtenOn": "2023-07-23T19:52:49Z",
      "side": 1,
      "message": "spinlock is the only option of using traditional condition variable in interrupt handler.",
      "parentUuid": "92def9a8_11262f3a",
      "revId": "ac9efc685335a4c7d0f03f65d44e28af09014535",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7c135b31_6b962974",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000172
      },
      "writtenOn": "2023-07-23T20:01:54Z",
      "side": 1,
      "message": "\u003e That is, a quick scan of code that used this Wait function could easily miss the fact that calling it implicitly re-enables interrupts.\n\nIf it is the only problem, it can be renamed to something like WaitSpinlock.",
      "revId": "ac9efc685335a4c7d0f03f65d44e28af09014535",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3c9b47e0_3e362c5c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2023-07-23T20:07:45Z",
      "side": 1,
      "message": "Yes, but in an interrupt handler there will be no waiting, so this function isn\u0027t used there.",
      "parentUuid": "029228a7_2e2e9104",
      "revId": "ac9efc685335a4c7d0f03f65d44e28af09014535",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2670f055_abde39e8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2023-07-23T20:07:45Z",
      "side": 1,
      "message": "That would make things slightly clearer, but not very much.\n\nThis will only save 3-4 lines of code in a small handful of places. I just don\u0027t think it\u0027s worth it.",
      "parentUuid": "7c135b31_6b962974",
      "revId": "ac9efc685335a4c7d0f03f65d44e28af09014535",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e73dba8e_654684da",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000172
      },
      "writtenOn": "2023-07-23T20:33:07Z",
      "side": 1,
      "message": "\u003e This will only save 3-4 lines of code in a small handful of places. I just don\u0027t think it\u0027s worth it.\n\nExposing condition variable entry in client code is a breakage of classical condition variable abstraction and makes code much hard to understand, especially for developers not familiar with Haiku-specific condition variable, that is quite rare.",
      "parentUuid": "2670f055_abde39e8",
      "revId": "ac9efc685335a4c7d0f03f65d44e28af09014535",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "00300f24_f346e56e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2023-07-24T03:30:31Z",
      "side": 1,
      "message": "After some discussion I can partially see the logic for this, but I think at the very least it should have some other name (WaitInterrupts?) but let\u0027s see what others think.",
      "revId": "ac9efc685335a4c7d0f03f65d44e28af09014535",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "de441316_d12caec6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2023-12-13T11:41:16Z",
      "side": 1,
      "message": "I think the fact that this takes a spinlock as a parameter is a sufficient hint that this is related to interrupts handling and used only in low-level contexts.\n\nIt would be great to have any kind of documentation in the Haiku internals documentation about condition variables in general, but this change does not really makes that any worse.\n\nIf there are any problems with using this, it\u0027s better to have a method and maybe a comment next to it explainaing the limitations, rather than have no methods, have people try it anyway, and find out the hard way that it can\u0027t work the way they want? But I don\u0027t even see what the limiations would be (besides the ones that are already there for spinlocks anyways).",
      "parentUuid": "e73dba8e_654684da",
      "revId": "ac9efc685335a4c7d0f03f65d44e28af09014535",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9a5fab88_a1f728e8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2023-12-13T21:20:02Z",
      "side": 1,
      "message": "Can we at least rename the method to WaitInterrupts (or something like that. InterruptsWait?) as I suggested above?",
      "parentUuid": "de441316_d12caec6",
      "revId": "ac9efc685335a4c7d0f03f65d44e28af09014535",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "368a4077_b7ca5415",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2023-12-16T12:59:23Z",
      "side": 1,
      "message": "All other methods waiting on other types of locks are all called Wait. Why do you want to make this one a special case? We already know that spinlocks should be used mainly in places related to interrupts.",
      "parentUuid": "9a5fab88_a1f728e8",
      "revId": "ac9efc685335a4c7d0f03f65d44e28af09014535",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d7cc801d_ff041681",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2023-12-16T14:48:22Z",
      "side": 1,
      "message": "Because this function re-enables interrupts before waiting.",
      "parentUuid": "368a4077_b7ca5415",
      "revId": "ac9efc685335a4c7d0f03f65d44e28af09014535",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "323ef16d_81947d6e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000172
      },
      "writtenOn": "2023-12-16T15:05:06Z",
      "side": 1,
      "message": "And what is a problem with that? Of course condition variable wait operation unlock lock and let other threads to work by design. There is nothing special with spinlock here.",
      "parentUuid": "d7cc801d_ff041681",
      "revId": "ac9efc685335a4c7d0f03f65d44e28af09014535",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b325073b_16365daa",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2023-12-16T15:06:01Z",
      "side": 1,
      "message": "The point is that spinlock-release and reenable-interrupts are two operations and this method does both, not just one.",
      "parentUuid": "323ef16d_81947d6e",
      "revId": "ac9efc685335a4c7d0f03f65d44e28af09014535",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3f048829_831b924c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000172
      },
      "writtenOn": "2023-12-16T17:04:45Z",
      "side": 1,
      "message": "Still don\u0027t understand what is the problem. Wait assume interrupts to be enabled in every case.\n\nWith recursive lock case, condition variable also do full unlock, not just one lock counter decrement. Full spinlock release also mean enable interrupts.",
      "parentUuid": "b325073b_16365daa",
      "revId": "ac9efc685335a4c7d0f03f65d44e28af09014535",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "532621f0_882044fd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2023-12-17T02:01:49Z",
      "side": 1,
      "message": "\u003e Wait assume interrupts to be enabled in every case.\n\nIn all the other cases, Wait is called with interrupts enabled. In this case, Wait is called with interrupts disabled, and Wait enables them. That\u0027s a key difference.\n\n\"Full spinlock release\" does not mean enable interrupts. We can (and do) fully acquire and release spinlocks without enabling interrupts (as otherwise they\u0027d be useless in interrupt handlers.)",
      "parentUuid": "3f048829_831b924c",
      "revId": "ac9efc685335a4c7d0f03f65d44e28af09014535",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}