{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e91c6317_49ebaddf",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2025-03-19T17:27:00Z",
      "side": 1,
      "message": "This seems like a hack. It\u0027s probably not useful for many filesystems besides NFS4 anyway, as those may have hundreds or thousands of vnodes...\n\nDoes userlandfs store the whole vnode table in userspace? Maybe this makes more sense as a userlandfs debugging feature? Or something with a callback at least?",
      "revId": "4cfe1e4c986fb602631b978f42bbe42221aa3a3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bb3ff33d_10672b31",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1000366
      },
      "writtenOn": "2025-03-20T14:53:36Z",
      "side": 1,
      "message": "In userlandfs it looks like the vnode table is kept on the kernel side and the server has to send a request every time the FS calls a function like acquire_vnode, so it doesn\u0027t seem practical to make this a userlandfs debugging feature.\n\nMaybe a dump_vnodes() that took an optional pointer to a callback (for printing private data) as an argument could be added to the VFS public API, although this still might not make sense if most filesystems have no use for it.  I have removed the VFS change from the patch.",
      "parentUuid": "e91c6317_49ebaddf",
      "revId": "4cfe1e4c986fb602631b978f42bbe42221aa3a3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8f75d50c_1f09ac31",
        "filename": "src/add-ons/kernel/file_systems/nfs4/Debug.cpp",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-19T16:13:25Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\t\t\"  address:  address of a nfs4 private volume (FileSystem)\\n\"\n\t\t\t\t\"  Use \u0027mounts\u0027 to list mounted volume ids, and \u0027mount \u003cid\u003e\u0027 to display a private \"\n\t\t\t\t\"volume address.\\n\");\n```",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 19,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "4cfe1e4c986fb602631b978f42bbe42221aa3a3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7094f382_45640c53",
        "filename": "src/add-ons/kernel/file_systems/nfs4/Debug.cpp",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-19T16:13:25Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\t\t\"  address(es):  address of one or more nfs4 private nodes (VnodeToInode), \"\n\t\t\t\t\"separated by spaces\\n\"\n\t\t\t\t\"  Addresses can be found with the \u0027vnodes\u0027 command.\\n\");\n```",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 37,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "4cfe1e4c986fb602631b978f42bbe42221aa3a3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "13139df5_cc6f3a0f",
        "filename": "src/add-ons/kernel/file_systems/nfs4/Debug.h",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-19T16:13:25Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nextern \"C\" void dprintf(const char* format, ...);\n```",
      "range": {
        "startLine": 28,
        "startChar": 0,
        "endLine": 28,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "4cfe1e4c986fb602631b978f42bbe42221aa3a3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "65fdc452_df447cb6",
        "filename": "src/add-ons/kernel/file_systems/nfs4/Debug.h",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-19T16:13:25Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#endif // NFS4_DEBUG_H\n```",
      "range": {
        "startLine": 34,
        "startChar": 0,
        "endLine": 34,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "4cfe1e4c986fb602631b978f42bbe42221aa3a3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eb2cbf79_c20307c7",
        "filename": "src/add-ons/kernel/file_systems/nfs4/FileSystem.cpp",
        "patchSetId": 1
      },
      "lineNbr": 585,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-19T16:13:25Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` is to remove this line/these lines.",
      "range": {
        "startLine": 585,
        "startChar": 0,
        "endLine": 585,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "4cfe1e4c986fb602631b978f42bbe42221aa3a3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fd6190e2_2e736594",
        "filename": "src/add-ons/kernel/file_systems/nfs4/Inode.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1041,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-19T16:13:25Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` is to remove this line/these lines.",
      "range": {
        "startLine": 1041,
        "startChar": 0,
        "endLine": 1041,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "4cfe1e4c986fb602631b978f42bbe42221aa3a3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "84d4397c_7b26972d",
        "filename": "src/add-ons/kernel/file_systems/nfs4/InodeIdMap.cpp",
        "patchSetId": 1
      },
      "lineNbr": 112,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-19T16:13:25Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` is to remove this line/these lines.",
      "range": {
        "startLine": 112,
        "startChar": 0,
        "endLine": 112,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "4cfe1e4c986fb602631b978f42bbe42221aa3a3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2ff73cd9_e98403f8",
        "filename": "src/add-ons/kernel/file_systems/nfs4/VnodeToInode.cpp",
        "patchSetId": 1
      },
      "lineNbr": 71,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-19T16:13:25Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` is to remove this line/these lines.",
      "range": {
        "startLine": 71,
        "startChar": 0,
        "endLine": 71,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "4cfe1e4c986fb602631b978f42bbe42221aa3a3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bb283218_8b9c4a4b",
        "filename": "src/system/kernel/fs/vfs.cpp",
        "patchSetId": 1
      },
      "lineNbr": 3316,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-19T16:13:25Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\tkprintf(\"%-*s   dev     inode  ref %-*s   %-*s   %-*s   flags\\n\", B_PRINTF_POINTER_WIDTH,\n\t\t\t\"address\", B_PRINTF_POINTER_WIDTH, \"cache\", B_PRINTF_POINTER_WIDTH, \"fs-node\",\n\t\t\tB_PRINTF_POINTER_WIDTH, \"locking\");\n```",
      "range": {
        "startLine": 3314,
        "startChar": 0,
        "endLine": 3316,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "4cfe1e4c986fb602631b978f42bbe42221aa3a3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0f0bf00b_64321d30",
        "filename": "src/system/kernel/fs/vfs.cpp",
        "patchSetId": 1
      },
      "lineNbr": 3330,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-19T16:13:25Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\tkprintf(\"%p%4\" B_PRIdDEV \"%10\" B_PRIdINO \"%5\" B_PRId32 \" %p %p %p %s%s%s\\n\", vnode,\n\t\t\t\tvnode-\u003edevice, vnode-\u003eid, vnode-\u003eref_count, vnode-\u003ecache, vnode-\u003eprivate_node,\n\t\t\t\tvnode-\u003eadvisory_locking, vnode-\u003eIsRemoved() ? \"r\" : \"-\",\n\t\t\t\tvnode-\u003eIsBusy() ? \"b\" : \"-\", vnode-\u003eIsUnpublished() ? \"u\" : \"-\");\n```",
      "range": {
        "startLine": 3326,
        "startChar": 0,
        "endLine": 3330,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "4cfe1e4c986fb602631b978f42bbe42221aa3a3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c7eba11f_9d0cad47",
        "filename": "src/system/kernel/fs/vfs.cpp",
        "patchSetId": 1
      },
      "lineNbr": 5329,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-19T16:13:25Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tadd_debugger_command_etc(\"vnodes\", \u0026dump_vnodes, \"list all vnodes (from the specified device)\",\n```",
      "range": {
        "startLine": 5328,
        "startChar": 0,
        "endLine": 5329,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "4cfe1e4c986fb602631b978f42bbe42221aa3a3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}