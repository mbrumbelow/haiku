{
  "comments": [
    {
      "key": {
        "uuid": "5fd47249_911175e5",
        "filename": "src/add-ons/kernel/bus_managers/mmc/mmc_module.cpp",
        "patchSetId": 1
      },
      "lineNbr": 133,
      "author": {
        "id": 1000172
      },
      "writtenOn": "2021-01-15T01:17:45Z",
      "side": 1,
      "message": "What is wrong with that? It don\u0027t seems speed-critical code. One of potential use cases of https://review.haiku-os.org/c/haiku/+/3484.",
      "revId": "45b3c6b7e6e28bb73516a8101f654162d0ed0c8e",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a0262930_f639254f",
        "filename": "src/add-ons/kernel/bus_managers/mmc/mmc_module.cpp",
        "patchSetId": 1
      },
      "lineNbr": 133,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2021-01-15T07:22:31Z",
      "side": 1,
      "message": "This specific one isn\u0027t speed critical but I have the same FIXME in the function used for read and write operations.\n\nI don\u0027t know how expensive the device manager calls are, however. I wanted to run bonnie++ to do some performance tests to evaluate the changes, but currently it runs for several hours (vs a few seconds on sata ssd) which makes it difficult to benchmark things.",
      "parentUuid": "5fd47249_911175e5",
      "revId": "45b3c6b7e6e28bb73516a8101f654162d0ed0c8e",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef18efa4_8bee5566",
        "filename": "src/add-ons/kernel/busses/mmc/sdhci_pci.cpp",
        "patchSetId": 1
      },
      "lineNbr": 393,
      "author": {
        "id": 1000172
      },
      "writtenOn": "2021-01-15T01:20:00Z",
      "side": 1,
      "message": "Why stop using B_PRIuSIZE?",
      "revId": "45b3c6b7e6e28bb73516a8101f654162d0ed0c8e",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec8ea01c_782a73e7",
        "filename": "src/add-ons/kernel/busses/mmc/sdhci_pci.cpp",
        "patchSetId": 1
      },
      "lineNbr": 393,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2021-01-15T07:19:49Z",
      "side": 1,
      "message": "The length is a generic_size_t, not a size_t. On 32bit systems, generic_size_t is 64 bit (like physical addresses) but size_t is 32bit.\n\nI didn\u0027t find a constant for printing a generic_size_t.",
      "parentUuid": "ef18efa4_8bee5566",
      "revId": "45b3c6b7e6e28bb73516a8101f654162d0ed0c8e",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "73f14f33_c4a91c57",
        "filename": "src/add-ons/kernel/busses/mmc/sdhci_pci.cpp",
        "patchSetId": 1
      },
      "lineNbr": 393,
      "author": {
        "id": 1000172
      },
      "writtenOn": "2021-01-15T07:26:43Z",
      "side": 1,
      "message": "Then B_PRIu64 can be used. Also this patch change format from unsigned to signed.",
      "parentUuid": "ec8ea01c_782a73e7",
      "revId": "45b3c6b7e6e28bb73516a8101f654162d0ed0c8e",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4bef49be_862ceb7f",
        "filename": "src/add-ons/kernel/busses/mmc/sdhci_pci.h",
        "patchSetId": 1
      },
      "lineNbr": 237,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2021-01-14T21:48:44Z",
      "side": 1,
      "message": "Why not defining the mask with all values?",
      "revId": "45b3c6b7e6e28bb73516a8101f654162d0ed0c8e",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b2c8d395_e0770540",
        "filename": "src/add-ons/kernel/busses/mmc/sdhci_pci.h",
        "patchSetId": 1
      },
      "lineNbr": 237,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2021-01-14T22:35:44Z",
      "side": 1,
      "message": "I don\u0027t understand what you mean. The bus width is defined by just these two bits, the second one for 8bit mode has been introduced in a later version of the standard and put in a formerly reserved bit not contiguous with the one used to switch between 1 and 4bit mode.\n\nI agree that it is not great, but I cannot change the hardware to have these two bits next to each other.",
      "parentUuid": "4bef49be_862ceb7f",
      "revId": "45b3c6b7e6e28bb73516a8101f654162d0ed0c8e",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be84bfb6_52cbface",
        "filename": "src/add-ons/kernel/busses/mmc/sdhci_pci.h",
        "patchSetId": 1
      },
      "lineNbr": 237,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2021-01-15T07:38:58Z",
      "side": 1,
      "message": "I mean: kDataTransfer4Bit | kDataTransfer8Bit",
      "parentUuid": "b2c8d395_e0770540",
      "revId": "45b3c6b7e6e28bb73516a8101f654162d0ed0c8e",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8e380bee_1acdd1dd",
        "filename": "src/add-ons/kernel/busses/mmc/sdhci_pci.h",
        "patchSetId": 1
      },
      "lineNbr": 240,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2021-01-14T21:48:44Z",
      "side": 1,
      "message": "This isn\u0027t very consistent with Adma and Sdma values",
      "revId": "45b3c6b7e6e28bb73516a8101f654162d0ed0c8e",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    }
  ]
}