{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "05a6ca5d_216750de",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2024-04-27T06:54:54Z",
      "side": 1,
      "message": "I am a bit confused as to why we need this specifically during boot time.\n\nAt boot time, all interfaces start up with no addresses, and this will always be the initial state whenever an interface is added. There is no need to record anything specific to know that.",
      "revId": "2fe65cc114fef5ee93e404588dd7b61bee16cd5d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "22f931e8_7cad03fe",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1000610
      },
      "writtenOn": "2024-04-27T09:45:51Z",
      "side": 1,
      "message": "The situation changes if we manually change make any changes through network preferences GUI. An \"interfaces\" file is created in that case (under /boot/system/settings/network directory) that contains the manually made changes.\nIn the next reboot, this settings will be consulted first to decide if the interface is configured or not.\nIf we assign a static ipv6 address to an interface through network preferences, \"interfaces\" file will record that info . Next time after reboot, ipv6 will be configured based on \"interfaces\" file. and that is treated as the interface getting configured as a whole. So ipv4 auto-config does not start, as the interface is now treated as configured.\nSo, at boot time, we need the configuration status of (interface, address family) pair for the auto-config to start if no manually configured address is present.",
      "parentUuid": "05a6ca5d_216750de",
      "revId": "2fe65cc114fef5ee93e404588dd7b61bee16cd5d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cb791b80_51016619",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2024-05-02T18:20:43Z",
      "side": 1,
      "message": "\u003e So ipv4 auto-config does not start, as the interface is now treated as configured.\n\nThis sounds like a bug in net_server. It should just assume defaults for any address family not specified in the interfaces file.",
      "parentUuid": "22f931e8_7cad03fe",
      "revId": "2fe65cc114fef5ee93e404588dd7b61bee16cd5d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d2119d2_d8c5eae2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2024-04-26T19:46:48Z",
      "side": 1,
      "message": "What reason is there to store this data in the kernel? I don\u0027t see one, really. net_server can store it internally and on disk, and on first startup should be able to see that there is no configured address, and thus no configuration.",
      "revId": "2fe65cc114fef5ee93e404588dd7b61bee16cd5d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "24f8c9c4_60a0a233",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000610
      },
      "writtenOn": "2024-04-27T02:57:17Z",
      "side": 1,
      "message": "An (interface, address family) pair can be either configured (the interface has at least one address in that family), unconfigured (the interface does not use this address family), or configuring (the interface is trying to acquire an address for this family). The configuring state is a runtime state and for that to be set, I could not find any alternative to storing the data inside the kernel .",
      "parentUuid": "4d2119d2_d8c5eae2",
      "revId": "2fe65cc114fef5ee93e404588dd7b61bee16cd5d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "05871f41_5898df69",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2024-04-27T06:54:54Z",
      "side": 1,
      "message": "What would be the way to make this info available in BNetworkInterface? As far as I know, the BNetworkInterface class (and by extension, ifconfig and network preferences) does not communicate with net_server, and has to get that info from the kernel.\n\nIf this information is made available only in net_server, how would we propagate it to the user interface? It seems no different than the existing (but too general) IFF_CONFIGURING flag.",
      "parentUuid": "24f8c9c4_60a0a233",
      "revId": "2fe65cc114fef5ee93e404588dd7b61bee16cd5d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2da9bea4_281cd784",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000610
      },
      "writtenOn": "2024-04-27T09:45:51Z",
      "side": 1,
      "message": "I have provided two methods in the BNetworkInterface class GetAddressFamilyState and SetAddressFamilyState that will interact with the kernel to get/set the configuration status . \nThe InterfaceAddressView class, which represents the network preferences, has a member fInterface of BNetworkInterface class . This member can be used to query this info and propagate the same to the user interface.",
      "parentUuid": "05871f41_5898df69",
      "revId": "2fe65cc114fef5ee93e404588dd7b61bee16cd5d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e880b9c8_cdbc4d31",
        "filename": "headers/os/net/NetworkInterface.h",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-26T13:43:51Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#include \u003cmemory\u003e\n```",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 9,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "2fe65cc114fef5ee93e404588dd7b61bee16cd5d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "60e8d5bd_5b78f613",
        "filename": "headers/os/net/NetworkInterface.h",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-26T13:43:51Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (insert after):\n```c++\n#include \u003cunordered_map\u003e\n```",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 11,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "2fe65cc114fef5ee93e404588dd7b61bee16cd5d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d7cdc1d8_5c08583c",
        "filename": "headers/os/net/NetworkInterface.h",
        "patchSetId": 2
      },
      "lineNbr": 58,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-26T13:43:51Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nclass BNetworkInterfaceAddressFamilyState\n{\n```",
      "range": {
        "startLine": 58,
        "startChar": 0,
        "endLine": 58,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "2fe65cc114fef5ee93e404588dd7b61bee16cd5d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "64f25807_3599e8a3",
        "filename": "headers/os/net/NetworkInterface.h",
        "patchSetId": 2
      },
      "lineNbr": 137,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-26T13:43:51Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` is to remove this line/these lines.",
      "range": {
        "startLine": 137,
        "startChar": 0,
        "endLine": 137,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "2fe65cc114fef5ee93e404588dd7b61bee16cd5d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2cb08f77_ad6dca84",
        "filename": "headers/posix/net/if.h",
        "patchSetId": 2
      },
      "lineNbr": 88,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-26T13:43:51Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define IFAF_CONFIGURED 0x0001 /* has been automatically configured */\n```",
      "range": {
        "startLine": 88,
        "startChar": 0,
        "endLine": 88,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "2fe65cc114fef5ee93e404588dd7b61bee16cd5d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "33279b3e_3914a667",
        "filename": "headers/posix/sys/sockio.h",
        "patchSetId": 2
      },
      "lineNbr": 78,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-26T13:43:51Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define B_SOCKET_SET_AF_STATE 8950\n#define B_SOCKET_GET_AF_STATE 8951\n```",
      "range": {
        "startLine": 77,
        "startChar": 0,
        "endLine": 78,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "2fe65cc114fef5ee93e404588dd7b61bee16cd5d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f986e22e_24e965f4",
        "filename": "src/add-ons/kernel/network/stack/datalink.cpp",
        "patchSetId": 2
      },
      "lineNbr": 352,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-26T13:43:51Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\tstatus_t status \u003d interface-\u003eControl(domain, option, request, value, *_length);\n```",
      "range": {
        "startLine": 351,
        "startChar": 0,
        "endLine": 352,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "2fe65cc114fef5ee93e404588dd7b61bee16cd5d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "70a416d3_ae1cc6c1",
        "filename": "src/add-ons/kernel/network/stack/datalink.cpp",
        "patchSetId": 2
      },
      "lineNbr": 827,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-26T13:43:51Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t{\n```",
      "range": {
        "startLine": 827,
        "startChar": 0,
        "endLine": 827,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "2fe65cc114fef5ee93e404588dd7b61bee16cd5d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "66a48699_d1b7de76",
        "filename": "src/add-ons/kernel/network/stack/datalink.cpp",
        "patchSetId": 2
      },
      "lineNbr": 830,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-26T13:43:51Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\tstruct ifafreq request;\n\t\t\tif (!interface-\u003eIsSupportedAddressFamily(protocol-\u003edomain-\u003efamily))\n```",
      "range": {
        "startLine": 829,
        "startChar": 0,
        "endLine": 830,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "2fe65cc114fef5ee93e404588dd7b61bee16cd5d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9c37048e_1fc8aab7",
        "filename": "src/add-ons/kernel/network/stack/datalink.cpp",
        "patchSetId": 2
      },
      "lineNbr": 834,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-26T13:43:51Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\tuser_memcpy(argument, \u0026request, length);\n\t\t\treturn B_OK;\n```",
      "range": {
        "startLine": 833,
        "startChar": 0,
        "endLine": 834,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "2fe65cc114fef5ee93e404588dd7b61bee16cd5d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4eb5ba45_aedfe622",
        "filename": "src/add-ons/kernel/network/stack/interfaces.cpp",
        "patchSetId": 2
      },
      "lineNbr": 460,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-26T13:43:51Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tAddAddressFamilySupport(AF_INET);\n```",
      "range": {
        "startLine": 460,
        "startChar": 0,
        "endLine": 460,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "2fe65cc114fef5ee93e404588dd7b61bee16cd5d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "500577f9_83732a1c",
        "filename": "src/add-ons/kernel/network/stack/interfaces.cpp",
        "patchSetId": 2
      },
      "lineNbr": 460,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2024-04-27T06:54:54Z",
      "side": 1,
      "message": "here we again end up with a solution where we hardcode something to IPv4 and IPv6. We have already discussed this and it should not be neded, a solution for this should be genericx and work with any number of protocols, and, in fact, any number of addresses, which may each be either manually configured or automatically comfigured.\n\nThis information is already present in net_server, since that\u0027s where we know when we have to renew a DHCP address for example. Bt moving it to the kernel you are only making things more complicated and less flexible.",
      "revId": "2fe65cc114fef5ee93e404588dd7b61bee16cd5d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "46456f10_94e2e3dd",
        "filename": "src/add-ons/kernel/network/stack/interfaces.cpp",
        "patchSetId": 2
      },
      "lineNbr": 460,
      "author": {
        "id": 1000610
      },
      "writtenOn": "2024-04-27T09:45:51Z",
      "side": 1,
      "message": "I agree with you that this hardcoding is wrong . Instead, we would need a mechanism to query which address families are supported by a particular interface and accordingly add entries for that address family into the hash table of that interface object .\nSince, I do not have an idea , how to make the initial entry for the address family in the hash table for the interface, I hardcoded it . I am now thinking , if I should add a method in the Bnetworkinterface class that will add the entry for a particular address family into the hash table. That way, the code will be generic. \n\nThis info is not related to DHCP/auto-config mechanism . This will only be used to determine if the address family for that interface is configured (static or auto), configuring or unconfigured.",
      "parentUuid": "500577f9_83732a1c",
      "revId": "2fe65cc114fef5ee93e404588dd7b61bee16cd5d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "57cad018_d1fd78a6",
        "filename": "src/add-ons/kernel/network/stack/interfaces.cpp",
        "patchSetId": 2
      },
      "lineNbr": 739,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-26T13:43:51Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\nvoid\n```",
      "range": {
        "startLine": 739,
        "startChar": 0,
        "endLine": 739,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "2fe65cc114fef5ee93e404588dd7b61bee16cd5d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b1b58d86_b40a794d",
        "filename": "src/add-ons/kernel/network/stack/interfaces.cpp",
        "patchSetId": 2
      },
      "lineNbr": 743,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-26T13:43:51Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (insert after):\n```c++\n\n```",
      "range": {
        "startLine": 743,
        "startChar": 0,
        "endLine": 743,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "2fe65cc114fef5ee93e404588dd7b61bee16cd5d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "17fc7a04_7f2bac3b",
        "filename": "src/add-ons/kernel/network/stack/interfaces.cpp",
        "patchSetId": 2
      },
      "lineNbr": 750,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-26T13:43:51Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\n\nint\n```",
      "range": {
        "startLine": 750,
        "startChar": 0,
        "endLine": 750,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "2fe65cc114fef5ee93e404588dd7b61bee16cd5d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5cdcd3db_e3afd283",
        "filename": "src/add-ons/kernel/network/stack/interfaces.cpp",
        "patchSetId": 2
      },
      "lineNbr": 765,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-26T13:43:51Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nInterface::Control(net_domain* domain, int32 option, ifreq\u0026 request, void* userRequest,\n\tsize_t length)\n```",
      "range": {
        "startLine": 764,
        "startChar": 0,
        "endLine": 765,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "2fe65cc114fef5ee93e404588dd7b61bee16cd5d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1e45dcdb_6d6c7293",
        "filename": "src/add-ons/kernel/network/stack/interfaces.cpp",
        "patchSetId": 2
      },
      "lineNbr": 804,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-26T13:43:51Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t{\n\t\t\tstruct ifafreq af;\n\t\t\tif (!(fAddressFamilies.ContainsKey(domain-\u003efamily)))\n```",
      "range": {
        "startLine": 802,
        "startChar": 0,
        "endLine": 804,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "2fe65cc114fef5ee93e404588dd7b61bee16cd5d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "42d456d1_63593f87",
        "filename": "src/add-ons/kernel/network/stack/interfaces.cpp",
        "patchSetId": 2
      },
      "lineNbr": 808,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-26T13:43:51Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\tTRACE(\"setting state \u003d %d, family \u003d %d\", af.state, domain-\u003efamily);\n\t\t\t// TRACE(\"setting state \u003d %d, family \u003d %d\",(struct ifafreq*)userRequest-\u003estate,\n\t\t\t// domain-\u003efamily);\n```",
      "range": {
        "startLine": 807,
        "startChar": 0,
        "endLine": 808,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "2fe65cc114fef5ee93e404588dd7b61bee16cd5d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fa4cb4c6_6a3d8518",
        "filename": "src/add-ons/kernel/network/stack/interfaces.cpp",
        "patchSetId": 2
      },
      "lineNbr": 886,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-26T13:43:51Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\n```",
      "range": {
        "startLine": 886,
        "startChar": 0,
        "endLine": 886,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "2fe65cc114fef5ee93e404588dd7b61bee16cd5d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a90dbe75_20072b87",
        "filename": "src/add-ons/kernel/network/stack/interfaces.h",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-26T13:43:51Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (insert after):\n```c++\n#include \"HashMap.h\"\n```",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 17,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "2fe65cc114fef5ee93e404588dd7b61bee16cd5d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4aa4af4b_3e684367",
        "filename": "src/add-ons/kernel/network/stack/interfaces.h",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-26T13:43:51Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` is to remove this line/these lines.",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 19,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "2fe65cc114fef5ee93e404588dd7b61bee16cd5d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "892d0141_e5938624",
        "filename": "src/add-ons/kernel/network/stack/interfaces.h",
        "patchSetId": 2
      },
      "lineNbr": 115,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-26T13:43:51Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\ntypedef HashMap\u003cHashKey32\u003cint\u003e, int\u003e AddressFamilyStateMap;\n```",
      "range": {
        "startLine": 115,
        "startChar": 0,
        "endLine": 115,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "2fe65cc114fef5ee93e404588dd7b61bee16cd5d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3bcf79ef_9bacefe8",
        "filename": "src/bin/debug/strace/ioctl.cpp",
        "patchSetId": 2
      },
      "lineNbr": 59,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-26T13:43:51Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tIOCTL_INFO_ENTRY_TYPE(B_GET_DEVICE_SIZE, size_t*),\n\tIOCTL_INFO_ENTRY_TYPE(B_SET_DEVICE_SIZE, size_t*), IOCTL_INFO_ENTRY(B_SET_NONBLOCKING_IO),\n\tIOCTL_INFO_ENTRY(B_SET_BLOCKING_IO), IOCTL_INFO_ENTRY(B_GET_READ_STATUS),\n\tIOCTL_INFO_ENTRY(B_GET_WRITE_STATUS), IOCTL_INFO_ENTRY(B_GET_GEOMETRY),\n\tIOCTL_INFO_ENTRY(B_GET_DRIVER_FOR_DEVICE), IOCTL_INFO_ENTRY(B_GET_PARTITION_INFO),\n\tIOCTL_INFO_ENTRY(B_SET_PARTITION), IOCTL_INFO_ENTRY(B_FORMAT_DEVICE),\n\tIOCTL_INFO_ENTRY(B_EJECT_DEVICE), IOCTL_INFO_ENTRY(B_GET_ICON),\n\tIOCTL_INFO_ENTRY(B_GET_BIOS_GEOMETRY), IOCTL_INFO_ENTRY(B_GET_MEDIA_STATUS),\n\tIOCTL_INFO_ENTRY(B_LOAD_MEDIA), IOCTL_INFO_ENTRY(B_GET_BIOS_DRIVE_ID),\n\tIOCTL_INFO_ENTRY(B_SET_UNINTERRUPTABLE_IO), IOCTL_INFO_ENTRY(B_SET_INTERRUPTABLE_IO),\n\tIOCTL_INFO_ENTRY(B_FLUSH_DRIVE_CACHE), IOCTL_INFO_ENTRY(B_GET_PATH_FOR_DEVICE),\n\tIOCTL_INFO_ENTRY(B_GET_NEXT_OPEN_DEVICE), IOCTL_INFO_ENTRY(B_ADD_FIXED_DRIVER),\n```",
      "range": {
        "startLine": 37,
        "startChar": 0,
        "endLine": 59,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "2fe65cc114fef5ee93e404588dd7b61bee16cd5d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2c1e7a81_fa465f57",
        "filename": "src/bin/debug/strace/ioctl.cpp",
        "patchSetId": 2
      },
      "lineNbr": 107,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-26T13:43:51Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tIOCTL_INFO_ENTRY(SIOCADDRT), IOCTL_INFO_ENTRY(SIOCDELRT),\n\tIOCTL_INFO_ENTRY_TYPE(SIOCSIFADDR, struct ifreq*),\n\tIOCTL_INFO_ENTRY_TYPE(SIOCGIFADDR, struct ifreq*),\n\tIOCTL_INFO_ENTRY_TYPE(SIOCSIFDSTADDR, struct ifreq*),\n\tIOCTL_INFO_ENTRY_TYPE(SIOCGIFDSTADDR, struct ifreq*),\n\tIOCTL_INFO_ENTRY_TYPE(SIOCSIFFLAGS, struct ifreq*),\n\tIOCTL_INFO_ENTRY_TYPE(SIOCGIFFLAGS, struct ifreq*),\n\tIOCTL_INFO_ENTRY_TYPE(SIOCGIFBRDADDR, struct ifreq*),\n\tIOCTL_INFO_ENTRY_TYPE(SIOCSIFBRDADDR, struct ifreq*),\n\tIOCTL_INFO_ENTRY_TYPE(SIOCGIFCOUNT, struct ifconf*),\n\tIOCTL_INFO_ENTRY_TYPE(SIOCGIFCONF, struct ifconf*),\n\tIOCTL_INFO_ENTRY_TYPE(SIOCGIFINDEX, struct ifreq*), IOCTL_INFO_ENTRY(SIOCGIFNAME),\n\tIOCTL_INFO_ENTRY_TYPE(SIOCGIFNETMASK, struct ifreq*),\n\tIOCTL_INFO_ENTRY_TYPE(SIOCSIFNETMASK, struct ifreq*),\n\tIOCTL_INFO_ENTRY_TYPE(SIOCGIFMETRIC, struct ifreq*),\n\tIOCTL_INFO_ENTRY_TYPE(SIOCSIFMETRIC, struct ifreq*),\n\tIOCTL_INFO_ENTRY_TYPE(SIOCDIFADDR, struct ifreq*),\n\tIOCTL_INFO_ENTRY_TYPE(SIOCAIFADDR, struct ifaliasreq*), IOCTL_INFO_ENTRY(SIOCADDMULTI),\n\tIOCTL_INFO_ENTRY(SIOCDELMULTI), IOCTL_INFO_ENTRY_TYPE(SIOCGIFMTU, struct ifreq*),\n\tIOCTL_INFO_ENTRY_TYPE(SIOCSIFMTU, struct ifreq*), IOCTL_INFO_ENTRY(SIOCSIFMEDIA),\n\tIOCTL_INFO_ENTRY(SIOCGIFMEDIA), IOCTL_INFO_ENTRY(SIOCGRTSIZE), IOCTL_INFO_ENTRY(SIOCGRTTABLE),\n\tIOCTL_INFO_ENTRY_TYPE(SIOCGIFSTATS, struct ifreq*),\n\tIOCTL_INFO_ENTRY_TYPE(SIOCGIFTYPE, struct ifreq*), IOCTL_INFO_ENTRY(SIOCSPACKETCAP),\n\tIOCTL_INFO_ENTRY(SIOCCPACKETCAP), IOCTL_INFO_ENTRY(SIOCSHIWAT), IOCTL_INFO_ENTRY(SIOCGHIWAT),\n\tIOCTL_INFO_ENTRY(SIOCSLOWAT), IOCTL_INFO_ENTRY(SIOCGLOWAT), IOCTL_INFO_ENTRY(SIOCATMARK),\n```",
      "range": {
        "startLine": 71,
        "startChar": 0,
        "endLine": 107,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "2fe65cc114fef5ee93e404588dd7b61bee16cd5d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f7c3527f_6f99f6e3",
        "filename": "src/bin/debug/strace/ioctl.cpp",
        "patchSetId": 2
      },
      "lineNbr": 114,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-26T13:43:51Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tIOCTL_INFO_ENTRY_TYPE(B_SOCKET_SET_ALIAS, struct ifaliasreq*),\n\tIOCTL_INFO_ENTRY_TYPE(B_SOCKET_GET_ALIAS, struct ifaliasreq*),\n\tIOCTL_INFO_ENTRY_TYPE(B_SOCKET_COUNT_ALIASES, struct ifreq*),\n\tIOCTL_INFO_ENTRY_TYPE(B_SOCKET_GET_AF_STATE, struct ifreq*),\n\tIOCTL_INFO_ENTRY_TYPE(B_SOCKET_SET_AF_STATE, struct ifreq*),\n```",
      "range": {
        "startLine": 110,
        "startChar": 0,
        "endLine": 114,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "2fe65cc114fef5ee93e404588dd7b61bee16cd5d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c983767e_61598390",
        "filename": "src/bin/debug/strace/ioctl.cpp",
        "patchSetId": 2
      },
      "lineNbr": 116,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-26T13:43:51Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n// termios ioctls\n```",
      "range": {
        "startLine": 116,
        "startChar": 0,
        "endLine": 116,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "2fe65cc114fef5ee93e404588dd7b61bee16cd5d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4112bf4d_fe67e6d0",
        "filename": "src/bin/debug/strace/ioctl.cpp",
        "patchSetId": 2
      },
      "lineNbr": 146,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-26T13:43:51Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tIOCTL_INFO_ENTRY(TCGETA), IOCTL_INFO_ENTRY(TCSETA), IOCTL_INFO_ENTRY(TCSETAF),\n\tIOCTL_INFO_ENTRY(TCSETAW), IOCTL_INFO_ENTRY(TCWAITEVENT), IOCTL_INFO_ENTRY(TCSBRK),\n\tIOCTL_INFO_ENTRY(TCFLSH), IOCTL_INFO_ENTRY(TCXONC), IOCTL_INFO_ENTRY(TCQUERYCONNECTED),\n\tIOCTL_INFO_ENTRY(TCGETBITS), IOCTL_INFO_ENTRY(TCSETDTR), IOCTL_INFO_ENTRY(TCSETRTS),\n\tIOCTL_INFO_ENTRY(TIOCGWINSZ), IOCTL_INFO_ENTRY(TIOCSWINSZ), IOCTL_INFO_ENTRY(TCVTIME),\n\tIOCTL_INFO_ENTRY(TIOCGPGRP), IOCTL_INFO_ENTRY(TIOCSPGRP), IOCTL_INFO_ENTRY(TIOCSCTTY),\n\tIOCTL_INFO_ENTRY(TIOCMGET), IOCTL_INFO_ENTRY(TIOCMSET), IOCTL_INFO_ENTRY(TIOCSBRK),\n\tIOCTL_INFO_ENTRY(TIOCCBRK), IOCTL_INFO_ENTRY(TIOCMBIS), IOCTL_INFO_ENTRY(TIOCMBIC),\n\tIOCTL_INFO_ENTRY(TIOCOUTQ), IOCTL_INFO_ENTRY(TIOCEXCL), IOCTL_INFO_ENTRY(TIOCNXCL),\n```",
      "range": {
        "startLine": 120,
        "startChar": 0,
        "endLine": 146,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "2fe65cc114fef5ee93e404588dd7b61bee16cd5d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d177ea4e_9143998c",
        "filename": "src/bin/debug/strace/ioctl.cpp",
        "patchSetId": 2
      },
      "lineNbr": 150,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-26T13:43:51Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tIOCTL_INFO_ENTRY(B_IOCTL_GET_TTY_INDEX), IOCTL_INFO_ENTRY(B_IOCTL_GRANT_TTY),\n```",
      "range": {
        "startLine": 149,
        "startChar": 0,
        "endLine": 150,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "2fe65cc114fef5ee93e404588dd7b61bee16cd5d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "28c22784_fafefea9",
        "filename": "src/bin/debug/strace/ioctl.cpp",
        "patchSetId": 2
      },
      "lineNbr": 170,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-26T13:43:51Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tIOCTL_INFO_ENTRY(B_SCSI_SCAN_FOR_DEVICES), IOCTL_INFO_ENTRY(B_SCSI_ENABLE_PROFILING),\n\tIOCTL_INFO_ENTRY(B_SCSI_INQUIRY), IOCTL_INFO_ENTRY(B_SCSI_EJECT),\n\tIOCTL_INFO_ENTRY(B_SCSI_PREVENT_ALLOW), IOCTL_INFO_ENTRY(B_RAW_DEVICE_COMMAND),\n\tIOCTL_INFO_ENTRY(B_SCSI_GET_TOC), IOCTL_INFO_ENTRY(B_SCSI_PLAY_TRACK),\n\tIOCTL_INFO_ENTRY(B_SCSI_PLAY_POSITION), IOCTL_INFO_ENTRY(B_SCSI_STOP_AUDIO),\n\tIOCTL_INFO_ENTRY(B_SCSI_PAUSE_AUDIO), IOCTL_INFO_ENTRY(B_SCSI_RESUME_AUDIO),\n\tIOCTL_INFO_ENTRY(B_SCSI_GET_POSITION), IOCTL_INFO_ENTRY(B_SCSI_SET_VOLUME),\n\tIOCTL_INFO_ENTRY(B_SCSI_GET_VOLUME), IOCTL_INFO_ENTRY(B_SCSI_READ_CD),\n\tIOCTL_INFO_ENTRY(B_SCSI_SCAN), IOCTL_INFO_ENTRY(B_SCSI_DATA_MODE),\n```",
      "range": {
        "startLine": 153,
        "startChar": 0,
        "endLine": 170,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "2fe65cc114fef5ee93e404588dd7b61bee16cd5d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e2815ae8_85dae95d",
        "filename": "src/bin/debug/strace/ioctl.cpp",
        "patchSetId": 2
      },
      "lineNbr": 176,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-26T13:43:51Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tIOCTL_INFO_ENTRY_TYPE(FIONBIO, int*), IOCTL_INFO_ENTRY_TYPE(FIONREAD, int*),\n\tIOCTL_INFO_ENTRY_TYPE(FIOSEEKDATA, off_t*), IOCTL_INFO_ENTRY_TYPE(FIOSEEKHOLE, off_t*),\n```",
      "range": {
        "startLine": 173,
        "startChar": 0,
        "endLine": 176,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "2fe65cc114fef5ee93e404588dd7b61bee16cd5d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4853dbdd_8a969a0a",
        "filename": "src/bin/debug/strace/ioctl.cpp",
        "patchSetId": 2
      },
      "lineNbr": 179,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-26T13:43:51Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t{0, NULL, NULL}};\n```",
      "range": {
        "startLine": 178,
        "startChar": 0,
        "endLine": 179,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "2fe65cc114fef5ee93e404588dd7b61bee16cd5d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "170cb025_ea39b06a",
        "filename": "src/kits/network/libnetapi/NetworkInterface.cpp",
        "patchSetId": 2
      },
      "lineNbr": 241,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-26T13:43:51Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t// do_request(AF_INET,request,Name(),B_SOCKET_GET_AF_STATE);\n```",
      "range": {
        "startLine": 241,
        "startChar": 0,
        "endLine": 241,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "2fe65cc114fef5ee93e404588dd7b61bee16cd5d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6cecb6b6_9eef62f8",
        "filename": "src/kits/network/libnetapi/NetworkInterface.cpp",
        "patchSetId": 2
      },
      "lineNbr": 244,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-26T13:43:51Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\n```",
      "range": {
        "startLine": 244,
        "startChar": 0,
        "endLine": 244,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "2fe65cc114fef5ee93e404588dd7b61bee16cd5d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "849c64fa_085d1b4d",
        "filename": "src/kits/network/libnetapi/NetworkInterface.cpp",
        "patchSetId": 2
      },
      "lineNbr": 574,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-26T13:43:51Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\n\nstatus_t\nBNetworkInterface::GetAddressFamilyState(int family, int\u0026 state)\n```",
      "range": {
        "startLine": 573,
        "startChar": 0,
        "endLine": 574,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "2fe65cc114fef5ee93e404588dd7b61bee16cd5d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "645e721f_4eaace9b",
        "filename": "src/kits/network/libnetapi/NetworkInterface.cpp",
        "patchSetId": 2
      },
      "lineNbr": 580,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-26T13:43:51Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tif (!socket.IsSet())\n\t\treturn -1;\n\n```",
      "range": {
        "startLine": 577,
        "startChar": 0,
        "endLine": 580,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "2fe65cc114fef5ee93e404588dd7b61bee16cd5d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "524c94e2_d437f8a5",
        "filename": "src/kits/network/libnetapi/NetworkInterface.cpp",
        "patchSetId": 2
      },
      "lineNbr": 590,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-26T13:43:51Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t// request.ifr_index \u003d -1;\n\t// request.ifra_addr.ss_family \u003d AF_UNSPEC;\n\n\tif (ioctl(socket.Get(), B_SOCKET_GET_AF_STATE, \u0026request, sizeof(struct ifafreq)) \u003c 0)\n\t\treturn -1;\n```",
      "range": {
        "startLine": 584,
        "startChar": 0,
        "endLine": 590,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "2fe65cc114fef5ee93e404588dd7b61bee16cd5d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "be6a6219_4ba00a6c",
        "filename": "src/kits/network/libnetapi/NetworkInterface.cpp",
        "patchSetId": 2
      },
      "lineNbr": 594,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-26T13:43:51Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (insert after):\n```c++\n\n```",
      "range": {
        "startLine": 594,
        "startChar": 0,
        "endLine": 594,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "2fe65cc114fef5ee93e404588dd7b61bee16cd5d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "74ba5221_70dfae0c",
        "filename": "src/kits/network/libnetapi/NetworkInterface.cpp",
        "patchSetId": 2
      },
      "lineNbr": 612,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-26T13:43:51Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t// request.ifr_index \u003d -1;\n\t// request.ifra_addr.ss_family \u003d AF_UNSPEC;\n\n\tif (ioctl(socket.Get(), B_SOCKET_SET_AF_STATE, \u0026request, sizeof(struct ifafreq)) \u003c 0)\n\t\treturn -1;\n```",
      "range": {
        "startLine": 606,
        "startChar": 0,
        "endLine": 612,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "2fe65cc114fef5ee93e404588dd7b61bee16cd5d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "afd7aca6_904c8d5e",
        "filename": "src/kits/network/libnetapi/NetworkInterface.cpp",
        "patchSetId": 2
      },
      "lineNbr": 614,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-26T13:43:51Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (insert after):\n```c++\n\n```",
      "range": {
        "startLine": 614,
        "startChar": 0,
        "endLine": 614,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "2fe65cc114fef5ee93e404588dd7b61bee16cd5d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "296e10a2_b0c8f6d2",
        "filename": "src/servers/net/AutoconfigLooper.cpp",
        "patchSetId": 2
      },
      "lineNbr": 88,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-26T13:43:51Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tstatus_t state \u003d interface.GetAddressFamilyState(AF_INET, state);\n```",
      "range": {
        "startLine": 88,
        "startChar": 0,
        "endLine": 88,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "2fe65cc114fef5ee93e404588dd7b61bee16cd5d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ef81083e_92c3d184",
        "filename": "src/servers/net/DHCPClient.cpp",
        "patchSetId": 2
      },
      "lineNbr": 499,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-26T13:43:51Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\n```",
      "range": {
        "startLine": 499,
        "startChar": 0,
        "endLine": 499,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "2fe65cc114fef5ee93e404588dd7b61bee16cd5d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7139c079_9b92004e",
        "filename": "src/servers/net/DHCPClient.cpp",
        "patchSetId": 2
      },
      "lineNbr": 504,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-26T13:43:51Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tif (index \u003e\u003d 0 \u0026\u0026 interface.GetAddressAt(index, interfaceAddress) \u003d\u003d B_OK) {\n\t\tif (interfaceAddress.Flags() \u0026 IFF_AUTO_CONFIGURED) {\n```",
      "range": {
        "startLine": 503,
        "startChar": 0,
        "endLine": 504,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "2fe65cc114fef5ee93e404588dd7b61bee16cd5d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e5aa98c2_668b2766",
        "filename": "src/servers/net/DHCPClient.cpp",
        "patchSetId": 2
      },
      "lineNbr": 515,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-26T13:43:51Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` is to remove this line/these lines.",
      "range": {
        "startLine": 515,
        "startChar": 0,
        "endLine": 515,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "2fe65cc114fef5ee93e404588dd7b61bee16cd5d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3b39dcbc_7957ab95",
        "filename": "src/servers/net/NetServer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 90,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-26T13:43:51Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nstatic const address_family kFamilies[]\n\t\u003d {{AF_INET, \"inet\", {\"AF_INET\", \"inet\", \"ipv4\", NULL}, PREFER_OUTPUT_MASK},\n\t\t{AF_INET6, \"inet6\", {\"AF_INET6\", \"inet6\", \"ipv6\", NULL}, PREFER_OUTPUT_PREFIX_LENGTH},\n\t\t{-1, NULL, {NULL}, PREFER_OUTPUT_MASK}};\n```",
      "range": {
        "startLine": 76,
        "startChar": 0,
        "endLine": 90,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "2fe65cc114fef5ee93e404588dd7b61bee16cd5d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4f2084a7_61c49b8c",
        "filename": "src/servers/net/NetServer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 524,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-26T13:43:51Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\tstatus \u003d interface.SetAddressFamilyState(addressSettings.Family(), IFAF_CONFIGURED);\n\n\t\t\tif (status !\u003d B_OK) {\n```",
      "range": {
        "startLine": 522,
        "startChar": 0,
        "endLine": 524,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "2fe65cc114fef5ee93e404588dd7b61bee16cd5d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "639cd00c_cc89b18c",
        "filename": "src/servers/net/NetServer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 529,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-26T13:43:51Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` is to remove this line/these lines.",
      "range": {
        "startLine": 529,
        "startChar": 0,
        "endLine": 529,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "2fe65cc114fef5ee93e404588dd7b61bee16cd5d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8bc004a9_a53467ca",
        "filename": "src/servers/net/NetServer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 730,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-26T13:43:51Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\n\n```",
      "range": {
        "startLine": 729,
        "startChar": 0,
        "endLine": 730,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "2fe65cc114fef5ee93e404588dd7b61bee16cd5d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e4d7dec1_65a46663",
        "filename": "src/servers/net/NetServer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 736,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-26T13:43:51Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tif (!interface.Exists())\n```",
      "range": {
        "startLine": 735,
        "startChar": 0,
        "endLine": 736,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "2fe65cc114fef5ee93e404588dd7b61bee16cd5d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ab782350_f17bb2a2",
        "filename": "src/servers/net/NetServer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 741,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-26T13:43:51Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tif (status \u003d\u003d B_OK) {\n\t\tfor (int32 i \u003d 0; kFamilies[i].family \u003e 0; i++) {\n```",
      "range": {
        "startLine": 738,
        "startChar": 0,
        "endLine": 741,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "2fe65cc114fef5ee93e404588dd7b61bee16cd5d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e9bb000a_d4cae899",
        "filename": "src/servers/net/NetServer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 747,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-26T13:43:51Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\tif (status \u003d\u003d B_OK) {\n\t\t\t\tif (!(configureStatus \u0026 (IFAF_CONFIGURED | IFF_CONFIGURING))) {\n```",
      "range": {
        "startLine": 744,
        "startChar": 0,
        "endLine": 747,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "2fe65cc114fef5ee93e404588dd7b61bee16cd5d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "04e05122_8363e9f5",
        "filename": "src/servers/net/NetServer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 752,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-26T13:43:51Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` is to remove this line/these lines.",
      "range": {
        "startLine": 752,
        "startChar": 0,
        "endLine": 752,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "2fe65cc114fef5ee93e404588dd7b61bee16cd5d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ef90bddf_43cae0a9",
        "filename": "src/servers/net/NetServer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 756,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-26T13:43:51Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\t} else {\n\t\t\t\tsyslog(LOG_DEBUG, \"Family not supported, family \u003d %d\");\n```",
      "range": {
        "startLine": 754,
        "startChar": 0,
        "endLine": 756,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "2fe65cc114fef5ee93e404588dd7b61bee16cd5d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "10147640_a4753f02",
        "filename": "src/servers/net/NetServer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 763,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-26T13:43:51Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` is to remove this line/these lines.",
      "range": {
        "startLine": 763,
        "startChar": 0,
        "endLine": 763,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "2fe65cc114fef5ee93e404588dd7b61bee16cd5d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2441b786_f44da020",
        "filename": "src/servers/net/NetServer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 787,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-26T13:43:51Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\tif (entry.GetName(name) !\u003d B_OK || entry.GetPath(\u0026path) !\u003d B_OK\n\t\t\t|| entry.GetStat(\u0026stat) !\u003d B_OK) {\n```",
      "range": {
        "startLine": 785,
        "startChar": 0,
        "endLine": 787,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "2fe65cc114fef5ee93e404588dd7b61bee16cd5d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e7c9f84e_3311fb20",
        "filename": "src/servers/net/NetServer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 788,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-26T13:43:51Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (insert after):\n```c++\n\t\t}\n```",
      "range": {
        "startLine": 788,
        "startChar": 0,
        "endLine": 788,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "2fe65cc114fef5ee93e404588dd7b61bee16cd5d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}