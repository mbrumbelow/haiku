{
  "comments": [
    {
      "key": {
        "uuid": "00905cbd_c6bb85f9",
        "filename": "src/apps/haikudepot/ui/MainWindow.cpp",
        "patchSetId": 2
      },
      "lineNbr": 605,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2018-08-06T07:59:19Z",
      "side": 1,
      "message": "When the user toggles between list and featured view, is the selection correctly synchronized? I am almost sure it was intentional to update both views here.",
      "revId": "4f89bdfc473693f4515b359178bc50cc8f693923",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5615c155_4185bd40",
        "filename": "src/apps/haikudepot/ui/MainWindow.cpp",
        "patchSetId": 2
      },
      "lineNbr": 605,
      "author": {
        "id": 1000059
      },
      "writtenOn": "2018-08-09T02:17:03Z",
      "side": 1,
      "message": "The original design here for sure was to try and keep both views up to date so that toggling between them they would always show the same package (if it existed in both views). As a practical matter though, selecting both doesn\u0027t accomplish the goal. The behavior is exactly the same whether you call both selectpackage or you only call one. This is because the actual package selection ends up being handled by one of the worker threads. If you test out my patch you\u0027ll see that despite the fact that we only call select package for the (now) active view, the package auto-selection still occurs when you toggle back and forth.\n\nThe benefit to calling the explicitly correct \"selectpackage\" is that you remove any side effects - such as focus being set when you don\u0027t expect it. By ensuring we control the focus of the window we can ensure that keyboard navigation works correctly",
      "parentUuid": "00905cbd_c6bb85f9",
      "revId": "4f89bdfc473693f4515b359178bc50cc8f693923",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "41c43265_aa7bcf44",
        "filename": "src/apps/haikudepot/ui/MainWindow.cpp",
        "patchSetId": 2
      },
      "lineNbr": 874,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2018-08-06T07:59:19Z",
      "side": 1,
      "message": "This seems strange to me. What does selection have to do with keyboard focus? More precisely: Why does selecting in an inactive view influence keyboard navigation in the active view?",
      "revId": "4f89bdfc473693f4515b359178bc50cc8f693923",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e4f23d60_010b0559",
        "filename": "src/apps/haikudepot/ui/MainWindow.cpp",
        "patchSetId": 2
      },
      "lineNbr": 874,
      "author": {
        "id": 1000059
      },
      "writtenOn": "2018-08-09T02:17:03Z",
      "side": 1,
      "message": "See my above comment. Calling selectpackage has side effects that cause the focus on the featuredpackagesview to be lost.",
      "parentUuid": "41c43265_aa7bcf44",
      "revId": "4f89bdfc473693f4515b359178bc50cc8f693923",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "991079ce_1f20f6fc",
        "filename": "src/apps/haikudepot/ui/PackageListView.cpp",
        "patchSetId": 2
      },
      "lineNbr": 948,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2018-08-06T07:59:19Z",
      "side": 1,
      "message": "This change seems wrong to me. I am pretty sure that the search field shall have the initial keyboard navigation. I understand that up and down arrow keys should scroll the list, but I would rather have that implemented by forwarding up/down to the list from /any/ view that does not handle it itself. However, up/down *is* handled in text views to position the cursor at the beginning/end of the input. To me, it makes more sense to make the search field have initial focus when opening the app, than to be able to scroll the list using the arrow keys. It is more likely the user finds what he came for by searching, than by scrolling throw the list.",
      "revId": "4f89bdfc473693f4515b359178bc50cc8f693923",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2de58a12_5ce1149d",
        "filename": "src/apps/haikudepot/ui/PackageListView.cpp",
        "patchSetId": 2
      },
      "lineNbr": 948,
      "author": {
        "id": 1000059
      },
      "writtenOn": "2018-08-09T02:17:03Z",
      "side": 1,
      "message": "I don\u0027t follow your comment here.  This MakeFocus has no effect on whether or not the \"search\" field is the focus when the application opens. If you test out my patch you\u0027ll see that the search is still the default focus when you launch HaikuDepot.  This change is necessary so that when a package is selected in the package list view that the view will be the recipient of future KeyDown events. If we don\u0027t do this, whatever the previously focused view will get the events and keyboard navigation breaks",
      "parentUuid": "991079ce_1f20f6fc",
      "revId": "4f89bdfc473693f4515b359178bc50cc8f693923",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "989a69c4_d81e89ed",
        "filename": "src/apps/haikudepot/ui/PackageListView.cpp",
        "patchSetId": 2
      },
      "lineNbr": 948,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2018-08-13T10:59:30Z",
      "side": 1,
      "message": "This still looks wrong to me. This method is supposed to highlight the package in the list and scroll it into view. It should not automatically also grab keyboard focus. If there is a situation from where this is called which should also make the list receive focus, then MakeFocus() should be called there instead. I guess my question is: Why is it correct to /always/ give focus to the list view when SelectPackage() is called?",
      "parentUuid": "2de58a12_5ce1149d",
      "revId": "4f89bdfc473693f4515b359178bc50cc8f693923",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    }
  ]
}