{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "cc6f1ab2_81b9b393",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2022-01-24T13:16:13Z",
      "side": 1,
      "message": "I think this version is better. It will however need everyone to update their bootloader if this is used, otherwise the result is incorrectly dereferencing a pointer.",
      "revId": "e1ca93dce95b16fe0dadc1c31745d67387237e38",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2784c2ff_5424caab",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000341
      },
      "writtenOn": "2022-01-24T15:26:09Z",
      "side": 1,
      "message": "Maybe we don\u0027t even need to change the booloader - as I haven\u0027t changed anything in kernel_args, only in the get/set_boot_item which is a kernel internal data structure.",
      "parentUuid": "cc6f1ab2_81b9b393",
      "revId": "e1ca93dce95b16fe0dadc1c31745d67387237e38",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f744334a_856d52eb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2022-01-24T16:25:16Z",
      "side": 1,
      "message": "Yes, right, the bootloader is not affected. So there is no problem in merging this, nice ðŸ˜Š",
      "parentUuid": "2784c2ff_5424caab",
      "revId": "e1ca93dce95b16fe0dadc1c31745d67387237e38",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "94ee725f_cf3d716c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2022-01-30T13:50:39Z",
      "side": 1,
      "message": "I think this is ok.\n\nNit: I think we only use ACPICA in kernel mode so the #ifdef in existing code is not useful. Perhaps we should remove it?\n\n(You can build ACPICA as a userland lib, but nothing in this code is prepared for it, and would be better to be done in its own package.)\n\n",
      "revId": "e1ca93dce95b16fe0dadc1c31745d67387237e38",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "229aaad7_27164bea",
        "filename": "src/add-ons/kernel/bus_managers/acpi/ACPICAHaiku.cpp",
        "patchSetId": 1
      },
      "lineNbr": 244,
      "author": {
        "id": 1000341
      },
      "writtenOn": "2022-01-23T13:47:36Z",
      "side": 1,
      "message": "I moved the declaration of address and status inside this block as they are not used anywhere else.",
      "range": {
        "startLine": 243,
        "startChar": 3,
        "endLine": 244,
        "endChar": 21
      },
      "revId": "e1ca93dce95b16fe0dadc1c31745d67387237e38",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5e1033a3_08c4677a",
        "filename": "src/system/kernel/arch/x86/arch_platform.cpp",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2022-01-24T17:00:09Z",
      "side": 1,
      "message": "Why do we need a static variable here?",
      "revId": "e1ca93dce95b16fe0dadc1c31745d67387237e38",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e33d804c_59e213e1",
        "filename": "src/system/kernel/arch/x86/arch_platform.cpp",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2022-01-24T17:10:00Z",
      "side": 1,
      "message": "the boot item is now a pointer to this variable. Obviously for this to work, the variable itself must remain allocated. add_boot_item does not make a copy of the data pointed data.",
      "parentUuid": "5e1033a3_08c4677a",
      "revId": "e1ca93dce95b16fe0dadc1c31745d67387237e38",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}