{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b2295821_c4b9d81b",
        "filename": "src/system/kernel/vm/vm.cpp",
        "patchSetId": 4
      },
      "lineNbr": 4357,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-10-15T03:46:14Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tconst addr_range\u0026 lastMemoryRange\n\t\t\u003d args-\u003ephysical_memory_range[args-\u003enum_physical_memory_ranges - 1];\n```",
      "range": {
        "startLine": 4356,
        "startChar": 0,
        "endLine": 4357,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "79b82d3fec3e8d9d6f1187dec4d96b2b038bf368",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cb35fb26_3c97ff42",
        "filename": "src/system/kernel/vm/vm.cpp",
        "patchSetId": 4
      },
      "lineNbr": 4360,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-10-15T03:46:14Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\u0026\u0026 args-\u003enum_physical_allocated_ranges \u003c MAX_PHYSICAL_ALLOCATED_RANGE) {\n```",
      "range": {
        "startLine": 4360,
        "startChar": 0,
        "endLine": 4360,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "79b82d3fec3e8d9d6f1187dec4d96b2b038bf368",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2c34bff7_bb340f96",
        "filename": "src/system/kernel/vm/vm.cpp",
        "patchSetId": 4
      },
      "lineNbr": 4364,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-10-15T03:46:14Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\tconst addr_range\u0026 lastAllocatedRange\n\t\t\t\u003d args-\u003ephysical_allocated_range[args-\u003enum_physical_allocated_ranges - 1];\n```",
      "range": {
        "startLine": 4363,
        "startChar": 0,
        "endLine": 4364,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "79b82d3fec3e8d9d6f1187dec4d96b2b038bf368",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "13c76d95_68de51a9",
        "filename": "src/system/kernel/vm/vm.cpp",
        "patchSetId": 4
      },
      "lineNbr": 4365,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2024-10-15T06:20:07Z",
      "side": 1,
      "message": "without braces would be better.",
      "revId": "79b82d3fec3e8d9d6f1187dec4d96b2b038bf368",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e5357af7_a6bac9f5",
        "filename": "src/system/kernel/vm/vm.cpp",
        "patchSetId": 4
      },
      "lineNbr": 4373,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2024-10-15T06:20:07Z",
      "side": 1,
      "message": "rangeStart could default to memoryRange.start, this makes the cornercases a bit more clear.",
      "revId": "79b82d3fec3e8d9d6f1187dec4d96b2b038bf368",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "19cb4df8_5cf65373",
        "filename": "src/system/kernel/vm/vm.cpp",
        "patchSetId": 4
      },
      "lineNbr": 4375,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2024-10-15T06:20:07Z",
      "side": 1,
      "message": "to be consistent with the other part, this should also check for:\nmemoryRange.size \u003c (B_PAGE_SIZE * 128)",
      "revId": "79b82d3fec3e8d9d6f1187dec4d96b2b038bf368",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "27fb4ec6_b7de5db3",
        "filename": "src/system/kernel/vm/vm.cpp",
        "patchSetId": 4
      },
      "lineNbr": 4385,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-10-15T03:46:14Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\t\t\trangeStart\n\t\t\t\t\t\t\u003d (memoryRange.start \u003e post32bitAddr) ? memoryRange.start : post32bitAddr;\n```",
      "range": {
        "startLine": 4384,
        "startChar": 0,
        "endLine": 4385,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "79b82d3fec3e8d9d6f1187dec4d96b2b038bf368",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "756326d0_e1e8b60b",
        "filename": "src/system/kernel/vm/vm.cpp",
        "patchSetId": 4
      },
      "lineNbr": 4389,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-10-15T03:46:14Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\t\taddr_range\u0026 allocatedRange\n\t\t\t\t\t\u003d args-\u003ephysical_allocated_range[args-\u003enum_physical_allocated_ranges];\n```",
      "range": {
        "startLine": 4388,
        "startChar": 0,
        "endLine": 4389,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "79b82d3fec3e8d9d6f1187dec4d96b2b038bf368",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b34c009_a6e0d6d8",
        "filename": "src/system/kernel/vm/vm.cpp",
        "patchSetId": 4
      },
      "lineNbr": 4390,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2024-10-15T06:20:07Z",
      "side": 1,
      "message": "I would keep the ++ on the previous line, makes obvious what it does.",
      "revId": "79b82d3fec3e8d9d6f1187dec4d96b2b038bf368",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5112417a_8a1ab49b",
        "filename": "src/system/kernel/vm/vm.cpp",
        "patchSetId": 4
      },
      "lineNbr": 4452,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2024-10-15T06:20:07Z",
      "side": 1,
      "message": "lastAllocatedRange",
      "revId": "79b82d3fec3e8d9d6f1187dec4d96b2b038bf368",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a4022ba2_81a0e23d",
        "filename": "src/system/kernel/vm/vm.cpp",
        "patchSetId": 4
      },
      "lineNbr": 4469,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2024-10-15T06:20:07Z",
      "side": 1,
      "message": "This whole block could be placed at line 4465, this would make the loop more similar to the one in __HAIKU_ARCH_PHYSICAL_64_BIT",
      "revId": "79b82d3fec3e8d9d6f1187dec4d96b2b038bf368",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "36b2da6f_ecfcff3f",
        "filename": "src/system/kernel/vm/vm.cpp",
        "patchSetId": 4
      },
      "lineNbr": 4473,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2024-10-15T06:20:07Z",
      "side": 1,
      "message": "I would keep the ++ on the previous line, makes obvious what it does.",
      "revId": "79b82d3fec3e8d9d6f1187dec4d96b2b038bf368",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}