{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "02b4dd07_3eaf5f3b",
        "filename": "src/system/kernel/fs/vfs.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2165,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2023-04-11T15:33:00Z",
      "side": 1,
      "message": "Wouldn\u0027t it make sense to set _vnode \u003d NULL at the top of the function, unconditionally?",
      "revId": "b5ac6010be26c0e19c3a5470c192d8554a05bc00",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "57bb012e_6dc3ff29",
        "filename": "src/system/kernel/fs/vfs.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2165,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2023-04-11T15:39:43Z",
      "side": 1,
      "message": "you mean, for all return status?",
      "parentUuid": "02b4dd07_3eaf5f3b",
      "revId": "b5ac6010be26c0e19c3a5470c192d8554a05bc00",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "248fa329_7710cc57",
        "filename": "src/system/kernel/fs/vfs.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2165,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2023-04-11T15:43:21Z",
      "side": 1,
      "message": "Yes. Then _vnode is always clobbered by the function, even if leafName \u003d\u003d NULL.",
      "parentUuid": "57bb012e_6dc3ff29",
      "revId": "b5ac6010be26c0e19c3a5470c192d8554a05bc00",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "edd1b8bb_268e4453",
        "filename": "src/system/kernel/fs/vfs.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2165,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2023-04-12T07:14:51Z",
      "side": 1,
      "message": "Not sure. Need to check all calling users.",
      "parentUuid": "248fa329_7710cc57",
      "revId": "b5ac6010be26c0e19c3a5470c192d8554a05bc00",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "634c092d_d10f2ec8",
        "filename": "src/system/kernel/fs/vfs.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2165,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2023-04-15T09:57:08Z",
      "side": 1,
      "message": "at least vfs_entry_ref_to_vnode() is passing its _vnode parameter to entry_ref_to_vnode, thus to vnode_path_to_vnode().",
      "parentUuid": "edd1b8bb_268e4453",
      "revId": "b5ac6010be26c0e19c3a5470c192d8554a05bc00",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "36c81673_9439932f",
        "filename": "src/system/kernel/fs/vfs.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2165,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2023-04-15T14:25:31Z",
      "side": 1,
      "message": "This seems like an API footgun that could easily lead to resource leaks, IMO. Perhaps we should change that behavior?",
      "parentUuid": "634c092d_d10f2ec8",
      "revId": "b5ac6010be26c0e19c3a5470c192d8554a05bc00",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "55b46546_371e1a8a",
        "filename": "src/system/kernel/fs/vfs.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2165,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2023-10-31T07:41:40Z",
      "side": 1,
      "message": "What is the plan here? separate the two behaviors with a parameter?",
      "parentUuid": "36c81673_9439932f",
      "revId": "b5ac6010be26c0e19c3a5470c192d8554a05bc00",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}