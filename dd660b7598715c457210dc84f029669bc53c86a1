{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "25667fae_551e08e4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2022-12-18T14:57:48Z",
      "side": 1,
      "message": "I didn\u0027t have many css files to test with, but one where this sniffer rule didn\u0027t work is where the \"{\" of a \"body\" block was on the next line. ",
      "revId": "dd660b7598715c457210dc84f029669bc53c86a1",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "005393be_500a0111",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000223
      },
      "writtenOn": "2022-12-18T21:51:13Z",
      "side": 1,
      "message": "Also \"compressed\" files where whitespace is removed, so we have \"body{\".\n\nAs the commit message hints, I\u0027m not sure we can get something good with simple rules.\n\nwebkit source includes quite a few test files. Going just by extension (some of those are not css on purpose), this rule catches some 330 new css files, with still 800 to go.\n\nMaybe worse is that it also assigns text/css to about 400 files that are not css. More than half are text files describing the expected results of tests, and may be unavoidable. The other big chunk comes from html files, seemingly snippets without html, head, body and the other tags we have in its rule (adding div there helps but the false htmls also increase). And then a very few with javascript, python, php, subtitles...",
      "parentUuid": "25667fae_551e08e4",
      "revId": "dd660b7598715c457210dc84f029669bc53c86a1",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "34b1b1c7_64873777",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2022-12-19T13:50:14Z",
      "side": 1,
      "message": "The rule based sniffing is quite limited, especially for text based files. There isn\u0027t a lot I can do about that unless we switch to a different approach for sniffing.\n\nIf false positives are a concern we can simply lower the prioriy of this rule from 0.35 to 0.31 or so. Then, if HTML also matches, it will be the one used.\n\nFor the others (scripting languages) we can always add more specific rules as needed. So, I would prefer we merge this and improve on it later as we notice problems, unless someone is planning to offer an improved version soon?",
      "parentUuid": "005393be_500a0111",
      "revId": "dd660b7598715c457210dc84f029669bc53c86a1",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c1e64950_2b69d717",
        "filename": "src/data/mime_db/text/css",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000390
      },
      "writtenOn": "2022-12-18T16:49:21Z",
      "side": 1,
      "message": "--CanvasBackground is an (arbitrary) css variable name I\u0027ve defined.\nmaybe we cane use the structure of \"--[A-z]\" instead?",
      "revId": "dd660b7598715c457210dc84f029669bc53c86a1",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}