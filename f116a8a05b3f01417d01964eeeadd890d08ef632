{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "3d816e16_21d638f2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000341
      },
      "writtenOn": "2022-07-29T14:03:36Z",
      "side": 1,
      "message": "patchset v2: remove wip tag and debug code.\n\nI\u0027m still a bit worried about the reserve_io_interrupt_vectors vs riscv64.\narm32: we can get away without any call to reserve_io_interrupt_vectors\narm64: we need to use reserve_io_interrupt_vectors\nriscv64: there\u0027s a hard coded call to reserve_io_interrupt_vectors in arch_int which reserves 128 vectors. If I remove the hard coded call, it still boots up on qemu but that may be only a matter of luck.\n\nadding x512 in cc",
      "revId": "f116a8a05b3f01417d01964eeeadd890d08ef632",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "45268b4b_fc939a82",
        "filename": "src/add-ons/kernel/busses/virtio/virtio_mmio/Jamfile",
        "patchSetId": 2
      },
      "lineNbr": 8,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2022-08-04T09:44:28Z",
      "side": 1,
      "message": "We can\u0027t depend on ACPICA directly, only the ACPI module. So anything we need should be from our headers, not ACPICA. Otherwise we cannot update the ACPI module with newer ACPICA versions.",
      "revId": "f116a8a05b3f01417d01964eeeadd890d08ef632",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc758432_2e7402b4",
        "filename": "src/add-ons/kernel/busses/virtio/virtio_mmio/Jamfile",
        "patchSetId": 2
      },
      "lineNbr": 8,
      "author": {
        "id": 1000341
      },
      "writtenOn": "2022-08-04T11:19:35Z",
      "side": 1,
      "message": "ok i\u0027ll take a look... I think I had to use this because of walk_resources() which calls a callback with an acpi_resource* / ACPI_RESOURCE* argument. I couldn\u0027t find a way to unpack acpi_resource using the ACPI module defined in os/drivers/ACPI.h.",
      "parentUuid": "45268b4b_fc939a82",
      "revId": "f116a8a05b3f01417d01964eeeadd890d08ef632",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d0a8a27e_80a2e76a",
        "filename": "src/add-ons/kernel/busses/virtio/virtio_mmio/Jamfile",
        "patchSetId": 2
      },
      "lineNbr": 8,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2022-08-04T11:42:42Z",
      "side": 1,
      "message": "Yes iterating is annoying. If you look at Module.cpp in acpi busmanager, it creates ACPI nodes for all devices, You can see this in Devices app in Haiku as well. Perhaps you can use the nodes directly? It is good if we can avoid as many walks as possible. Also display_adapter does some small ACPI work as an example.",
      "parentUuid": "fc758432_2e7402b4",
      "revId": "f116a8a05b3f01417d01964eeeadd890d08ef632",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}