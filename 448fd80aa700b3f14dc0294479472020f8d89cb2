{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "68cc9367_ecd97ce8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000311
      },
      "writtenOn": "2024-11-16T00:00:20Z",
      "side": 1,
      "message": "Sorry for the lame/lazy \"fix\", but doing it this way seemed like an easy way of using \"bitmask like\" values, without introducing many new lines.\n\nFeel free to take over, edit, or abandon the change, if you get something nicer.",
      "revId": "448fd80aa700b3f14dc0294479472020f8d89cb2",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ba458fbb_b7cb353e",
        "filename": "src/servers/mount/AutoMounter.cpp",
        "patchSetId": 1
      },
      "lineNbr": 284,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2024-11-16T00:56:26Z",
      "side": 1,
      "message": "Why score Capacity so highly?",
      "revId": "448fd80aa700b3f14dc0294479472020f8d89cb2",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d2a987c1_dcac5fc1",
        "filename": "src/servers/mount/AutoMounter.cpp",
        "patchSetId": 1
      },
      "lineNbr": 284,
      "author": {
        "id": 1000311
      },
      "writtenOn": "2024-11-16T01:45:24Z",
      "side": 1,
      "message": "The value doesn\u0027t matters. It is just a shortcut to \"this bit set on\".\n\nAs in... I require capacity, file system type, and block size to be \"ON\", to even consider the given partition to be a valid candidate.\n\nThat\u0027s what I meant with my \"bitmask-like\" comment.",
      "parentUuid": "ba458fbb_b7cb353e",
      "revId": "448fd80aa700b3f14dc0294479472020f8d89cb2",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "945c18dc_2f11ef9f",
        "filename": "src/servers/mount/AutoMounter.cpp",
        "patchSetId": 1
      },
      "lineNbr": 284,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2024-11-16T01:52:12Z",
      "side": 1,
      "message": "In that case we might as well make this a real bitmask?",
      "parentUuid": "d2a987c1_dcac5fc1",
      "revId": "448fd80aa700b3f14dc0294479472020f8d89cb2",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "231c62df_99de62cd",
        "filename": "src/servers/mount/AutoMounter.cpp",
        "patchSetId": 1
      },
      "lineNbr": 284,
      "author": {
        "id": 1000311
      },
      "writtenOn": "2024-11-16T01:56:26Z",
      "side": 1,
      "message": "Not sure if I can make my intention clear enough:\n\n16 / 8 / 4 values are just shortcuts to: (1 \u003c\u003c 4), (1 \u003c\u003c 3), (1 \u003c\u003c 2), and the \"threshold\" being \"16 + 8 + 4\" should equal a bit mask of those bits set, no?\n\nMy intention was to have those three bits \"set\" as a bare minimum, plus one of the other values matching too, before deciding to auto-mount a given partition.",
      "parentUuid": "d2a987c1_dcac5fc1",
      "revId": "448fd80aa700b3f14dc0294479472020f8d89cb2",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c9592dc8_101843e2",
        "filename": "src/servers/mount/AutoMounter.cpp",
        "patchSetId": 1
      },
      "lineNbr": 284,
      "author": {
        "id": 1000311
      },
      "writtenOn": "2024-11-16T02:00:11Z",
      "side": 1,
      "message": "As mentioned on my first comment... this is just my lazy/lame attempt, while trying to keep new introduced lines to a minimum.\n\nDoing \"proper\" bitmask (what I attempted first) seemed to be overkill, considering that the whole approach is still bogus. (proper fix should require unique partition ids instead).",
      "parentUuid": "231c62df_99de62cd",
      "revId": "448fd80aa700b3f14dc0294479472020f8d89cb2",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a932ba74_5a8c7b11",
        "filename": "src/servers/mount/AutoMounter.cpp",
        "patchSetId": 1
      },
      "lineNbr": 284,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2024-11-16T02:04:11Z",
      "side": 1,
      "message": "We won\u0027t have unique partition IDs for filesystems like FAT, so we should just go with a more sophisticated bitfield.",
      "parentUuid": "c9592dc8_101843e2",
      "revId": "448fd80aa700b3f14dc0294479472020f8d89cb2",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "927c6ed1_f5b99e35",
        "filename": "src/servers/mount/AutoMounter.cpp",
        "patchSetId": 1
      },
      "lineNbr": 284,
      "author": {
        "id": 1000311
      },
      "writtenOn": "2024-11-16T02:09:01Z",
      "side": 1,
      "message": "Understood. And that\u0027s why I preemptively said sorry for my lame attempt. Was intended more like a conversation starter than a \"please merge this\", thus my \"do with this change as you please\" plead.\n\n(I, usually, know my limits in regards of what I can or cannot fix myself)",
      "parentUuid": "a932ba74_5a8c7b11",
      "revId": "448fd80aa700b3f14dc0294479472020f8d89cb2",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "951c20c5_22d62026",
        "filename": "src/servers/mount/AutoMounter.cpp",
        "patchSetId": 1
      },
      "lineNbr": 284,
      "author": {
        "id": 1000311
      },
      "writtenOn": "2024-11-16T02:18:26Z",
      "side": 1,
      "message": "In any case, for me at least, this change is an improvement on the current state of things.\n\nNot ideal, I know. But it is an improvement over current behaviour. \"Incremental improvements\" beats \"perfect results always in the future\".",
      "parentUuid": "927c6ed1_f5b99e35",
      "revId": "448fd80aa700b3f14dc0294479472020f8d89cb2",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "437b0223_23a54330",
        "filename": "src/servers/mount/AutoMounter.cpp",
        "patchSetId": 1
      },
      "lineNbr": 284,
      "author": {
        "id": 1000311
      },
      "writtenOn": "2024-11-16T03:09:02Z",
      "side": 1,
      "message": "\u003e We won\u0027t have unique partition IDs for filesystems like FAT\n\nFWIW... With the \"Partition Wizard 10\" app on Win10, I can clearly see a \"unique\" serial numbers for each FAT32 partition I have.\n\nSeems to me like the issue is that we don\u0027t have something similar for BFS partitions?",
      "parentUuid": "951c20c5_22d62026",
      "revId": "448fd80aa700b3f14dc0294479472020f8d89cb2",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7a0b1ea6_af2d2d23",
        "filename": "src/servers/mount/AutoMounter.cpp",
        "patchSetId": 1
      },
      "lineNbr": 284,
      "author": {
        "id": 1000693
      },
      "writtenOn": "2024-11-16T03:46:58Z",
      "side": 1,
      "message": "For FAT partitions, the serial number is (sometimes) just the date and time the partition was formatted or copied.",
      "parentUuid": "437b0223_23a54330",
      "revId": "448fd80aa700b3f14dc0294479472020f8d89cb2",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0e65b309_20a2b0bc",
        "filename": "src/servers/mount/AutoMounter.cpp",
        "patchSetId": 1
      },
      "lineNbr": 284,
      "author": {
        "id": 1000311
      },
      "writtenOn": "2024-11-26T07:41:59Z",
      "side": 1,
      "message": "I\u0027m marking this as \"Done\", because this change is an improvement over current behavior, at least for my use case.\n\nwaddlesplash, as you\u0027re apparently the only dev doing reviews of these things... I\u0027d really like this merged onto master + beta5. If you disagree... can you push a better fix before beta6?",
      "parentUuid": "7a0b1ea6_af2d2d23",
      "revId": "448fd80aa700b3f14dc0294479472020f8d89cb2",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "484ee356_b856583f",
        "filename": "src/servers/mount/AutoMounter.cpp",
        "patchSetId": 1
      },
      "lineNbr": 284,
      "author": {
        "id": 1000311
      },
      "writtenOn": "2024-11-26T07:45:08Z",
      "side": 1,
      "message": "Alternatively... please explain how can use a custom mount_server without borking my installs (blacklisting + placing custom binary under `non-packaged` didn\u0027t worked for me).",
      "parentUuid": "0e65b309_20a2b0bc",
      "revId": "448fd80aa700b3f14dc0294479472020f8d89cb2",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ab47cab9_74a30fca",
        "filename": "src/servers/mount/AutoMounter.cpp",
        "patchSetId": 1
      },
      "lineNbr": 284,
      "author": {
        "id": 1000390
      },
      "writtenOn": "2024-11-26T08:18:59Z",
      "side": 1,
      "message": "I\u0027m watching this change, in any case I was a bit confused why you said before this would be a conversation starter and now ask it be merged as is quickly.\n\nIs sonething wrong with the bitmask aproach waddlesplash asked about?\n\nFor a custom mount_server without non-packaged \"just\" compule haiku.hpkg and install it. But non-packaged not working in that case is likely also a bug.",
      "parentUuid": "484ee356_b856583f",
      "revId": "448fd80aa700b3f14dc0294479472020f8d89cb2",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e1268b0_7e67c0f8",
        "filename": "src/servers/mount/AutoMounter.cpp",
        "patchSetId": 1
      },
      "lineNbr": 284,
      "author": {
        "id": 1000693
      },
      "writtenOn": "2024-11-26T14:37:20Z",
      "side": 1,
      "message": "You can\u0027t give same priority score for two tests when it\u0027s a bit mask... Basically when using just numbers, sum of two scores can\u0027t be more than next priority level. Otherwise, all the numbers can be pseudo-random.",
      "parentUuid": "ab47cab9_74a30fca",
      "revId": "448fd80aa700b3f14dc0294479472020f8d89cb2",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dba2106c_9a7eda26",
        "filename": "src/servers/mount/AutoMounter.cpp",
        "patchSetId": 1
      },
      "lineNbr": 284,
      "author": {
        "id": 1000390
      },
      "writtenOn": "2024-11-26T14:47:27Z",
      "side": 1,
      "message": "Yes, that\u0027s the point, no?\nYou should not be able to ever get a match if the fs size, blocksize, name doesnt match. With a bitmask you can ensure this is the case and not get a score from other data that beings it over some threshold.",
      "parentUuid": "8e1268b0_7e67c0f8",
      "revId": "448fd80aa700b3f14dc0294479472020f8d89cb2",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae09b1e7_7066be87",
        "filename": "src/servers/mount/AutoMounter.cpp",
        "patchSetId": 1
      },
      "lineNbr": 284,
      "author": {
        "id": 1000693
      },
      "writtenOn": "2024-11-26T14:54:52Z",
      "side": 1,
      "message": "As far as I understood the commit message, either deviceName or volumeName or both should match... That wouldn\u0027t be possible to implement with a bitmask... The threshold wouldn\u0027t be a constant with bitmask.",
      "parentUuid": "dba2106c_9a7eda26",
      "revId": "448fd80aa700b3f14dc0294479472020f8d89cb2",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5628b2ab_e6599a23",
        "filename": "src/servers/mount/AutoMounter.cpp",
        "patchSetId": 1
      },
      "lineNbr": 284,
      "author": {
        "id": 1000390
      },
      "writtenOn": "2024-11-26T15:01:32Z",
      "side": 1,
      "message": "Yes, it would not be a threshold at all. You would instead use boolean logic to determine if you want to match.\ni.e if (match \u0026 kMatchName || match \u0026 kMatchDevice)\n\n(pseudocode written from a phone, so tale with a grain of salt)",
      "parentUuid": "ae09b1e7_7066be87",
      "revId": "448fd80aa700b3f14dc0294479472020f8d89cb2",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da4ecc76_cfb05e66",
        "filename": "src/servers/mount/AutoMounter.cpp",
        "patchSetId": 1
      },
      "lineNbr": 284,
      "author": {
        "id": 1000693
      },
      "writtenOn": "2024-11-26T15:05:51Z",
      "side": 1,
      "message": "With bit mask you would need to do two tests... First test that higher bits are all set, and another test with lower bits to see that all bits are not unset. Testing something being zero is inexpensive, but testing that something is non-zero is expensive.",
      "parentUuid": "5628b2ab_e6599a23",
      "revId": "448fd80aa700b3f14dc0294479472020f8d89cb2",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c00b9567_3076ea03",
        "filename": "src/servers/mount/AutoMounter.cpp",
        "patchSetId": 1
      },
      "lineNbr": 284,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2024-11-26T20:35:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "da4ecc76_cfb05e66",
      "revId": "448fd80aa700b3f14dc0294479472020f8d89cb2",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a1622c2f_669e0f35",
        "filename": "src/servers/mount/AutoMounter.cpp",
        "patchSetId": 1
      },
      "lineNbr": 284,
      "author": {
        "id": 1000311
      },
      "writtenOn": "2024-11-27T03:26:29Z",
      "side": 1,
      "message": "Replying just for the sake of not leaving nephele\u0027s comment unaddressed.\n\n\u003e I\u0027m watching this change, in any case I was a bit confused why you said before this would be a conversation starter and now ask it be merged as is quickly.\n\n1- Watching and reviewing are different things.\n\n2- Don\u0027t put words in my mouth I did not used. I didn\u0027t asked for it to \"be merged as is quickly\". Conversation had started. I already provided a follow up changeset, asked if was any better, got no answer.\n\nI considered my second attempt good enough, and if others disaggre, asked them to come up with something better.\n\nYes, I sounded too impatient, sorry about that, but sometimes the accumulation of small bugs (or having to keep track of custom patches) gets on my nerves.\n\n\u003e Is sonething wrong with the bitmask aproach waddlesplash asked about?\n\nI\u0027ll ask you to re-read my previous comments, as I believe I have already made my possition clear.\n\nIn any case... by either lack of skills, or because my brain just tends to malfunction, I was not able to come up with a cleaner solution using bitwise ops.\n\nMy attempts resulted in what I still consider an overkill solution, as the whole scoring approach is still prone to errors, and patchset 1 gives the same results in less lines.\n\nIn any case, I\u0027m really grateful waddlesplash took the time to shape my lame fix into something more acceptable. Thanks waddlesplash.\n\n\u003e For a custom mount_server without non-packaged \"just\" compule haiku.hpkg and install it. But non-packaged not working in that case is likely also a bug.\n\nOpened https://dev.haiku-os.org/ticket/19269 related to that. I was trying to avoid having to use a full custom haiku.hpkg. Between 32/64 and beta5/nightlies installs... building custom haiku.hpkg for each is not something I look forward too (I guess I\u0027ll just unpack/repack the official ones instead in the meantime).",
      "parentUuid": "c00b9567_3076ea03",
      "revId": "448fd80aa700b3f14dc0294479472020f8d89cb2",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}