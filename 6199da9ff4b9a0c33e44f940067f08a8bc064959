{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "71936cfb_16dff58e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2023-05-05T20:03:44Z",
      "side": 1,
      "message": "Adding stippi as a reviewer in the hopes he might have some insight.",
      "revId": "6199da9ff4b9a0c33e44f940067f08a8bc064959",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb989ea4_4bf1bbfc",
        "filename": "src/servers/app/drawing/Painter/Painter.cpp",
        "patchSetId": 1
      },
      "lineNbr": 181,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2023-05-05T20:09:13Z",
      "side": 1,
      "message": "This idiom is called Scope Guard so the name should reflect that. (SolidPatternGuard)",
      "revId": "6199da9ff4b9a0c33e44f940067f08a8bc064959",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1f8d9f89_c7b0d850",
        "filename": "src/servers/app/drawing/Painter/Painter.cpp",
        "patchSetId": 1
      },
      "lineNbr": 181,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2023-05-06T15:55:45Z",
      "side": 1,
      "message": "Or one of the other paradigms we use: e.g. PatternSetter or something.",
      "parentUuid": "fb989ea4_4bf1bbfc",
      "revId": "6199da9ff4b9a0c33e44f940067f08a8bc064959",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f103850c_90673385",
        "filename": "src/servers/app/drawing/Painter/Painter.cpp",
        "patchSetId": 1
      },
      "lineNbr": 181,
      "author": {
        "id": 1000223
      },
      "writtenOn": "2023-05-06T18:21:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1f8d9f89_c7b0d850",
      "revId": "6199da9ff4b9a0c33e44f940067f08a8bc064959",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9297e067_09f48b1e",
        "filename": "src/servers/app/drawing/Painter/Painter.cpp",
        "patchSetId": 1
      },
      "lineNbr": 185,
      "author": {
        "id": 1000223
      },
      "writtenOn": "2023-05-05T18:25:27Z",
      "side": 1,
      "message": "I\u0027m probably meddling with powers I cannot possibly comprehend here. Should I instead de-const all the gradient methods?",
      "revId": "6199da9ff4b9a0c33e44f940067f08a8bc064959",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "026a4613_47cc6a2c",
        "filename": "src/servers/app/drawing/Painter/Painter.cpp",
        "patchSetId": 1
      },
      "lineNbr": 185,
      "author": {
        "id": 1000013
      },
      "writtenOn": "2023-05-05T19:13:05Z",
      "side": 1,
      "message": "You could use const_cast\u003cPainter*\u003e(painter) to remove the const from fPainter, or you could remove the const.",
      "parentUuid": "9297e067_09f48b1e",
      "revId": "6199da9ff4b9a0c33e44f940067f08a8bc064959",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "13c21a1b_8eb2da39",
        "filename": "src/servers/app/drawing/Painter/Painter.cpp",
        "patchSetId": 1
      },
      "lineNbr": 185,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2023-05-05T20:09:13Z",
      "side": 1,
      "message": "Since the intention is to restore to previous state, casting away const is not a big deal. That being said, IMO you should deconst gradient methods, if that\u0027s not too much work.",
      "parentUuid": "026a4613_47cc6a2c",
      "revId": "6199da9ff4b9a0c33e44f940067f08a8bc064959",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c9f2d34e_b132b43a",
        "filename": "src/servers/app/drawing/Painter/Painter.cpp",
        "patchSetId": 1
      },
      "lineNbr": 185,
      "author": {
        "id": 1000223
      },
      "writtenOn": "2023-05-06T18:21:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "13c21a1b_8eb2da39",
      "revId": "6199da9ff4b9a0c33e44f940067f08a8bc064959",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f5113068_163fab3e",
        "filename": "src/servers/app/drawing/Painter/Painter.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1365,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2023-05-05T20:09:13Z",
      "side": 1,
      "message": "You are changing behavior here: pattern will be restored *after* return statement. Is that intended?",
      "revId": "6199da9ff4b9a0c33e44f940067f08a8bc064959",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "13b1a90d_a31199a8",
        "filename": "src/servers/app/drawing/Painter/Painter.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1365,
      "author": {
        "id": 1000223
      },
      "writtenOn": "2023-05-06T15:37:14Z",
      "side": 1,
      "message": "Not the objective, but I don\u0027t see any ill effect given that _Clipped doesn\u0027t care about the pattern and if it somehow did it should go with the one used.\n\nI went with the scope guard because it guarantees the pattern is restored and I first thought I would have to copy the same code over the many gradient methods. The second point is not important anymore as the dance is only needed in _RasterizePath, so I can do without it and, keep the original three lines here and also stick them in _RasterizePath. Whatever is cleaner.",
      "parentUuid": "f5113068_163fab3e",
      "revId": "6199da9ff4b9a0c33e44f940067f08a8bc064959",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}