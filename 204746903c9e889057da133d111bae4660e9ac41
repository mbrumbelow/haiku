{
  "comments": [
    {
      "key": {
        "uuid": "0e71abe9_90e09c67",
        "filename": "build/jam/images/MMCImage",
        "patchSetId": 1
      },
      "lineNbr": 112,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2020-06-22T11:37:56Z",
      "side": 1,
      "message": "is it not possible to use mcopy with a path?",
      "revId": "204746903c9e889057da133d111bae4660e9ac41",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2c0f2b30_4313544d",
        "filename": "build/jam/images/MMCImage",
        "patchSetId": 1
      },
      "lineNbr": 112,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-06-22T13:41:15Z",
      "side": 1,
      "message": "mtools\u0027s syntax is pretty horrific and undefined. I\u0027ve tried to give a destination filename in the past, and it\u0027s never worked properly.  \n\nhaiku_floppyboot below works the same way... *HOWEVER* i just tried using the corrected unix path separators and it appears to work now.  Adjusting.",
      "parentUuid": "0e71abe9_90e09c67",
      "revId": "204746903c9e889057da133d111bae4660e9ac41",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "55d3926e_8e6d4aa9",
        "filename": "build/jam/images/MMCImage",
        "patchSetId": 1
      },
      "lineNbr": 140,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-06-21T02:21:33Z",
      "side": 1,
      "message": "my brain is squishy here.. I don\u0027t think EFI on arm actually needs the haiku-floppyboot since we can depend on EFI runtime services to \"locate Haiku on media\"",
      "revId": "204746903c9e889057da133d111bae4660e9ac41",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "09337290_22ada751",
        "filename": "src/bin/makebootable/platform/efi/makebootable.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-06-21T02:28:32Z",
      "side": 1,
      "message": "But Alex senpai, why would you need to add this?  x86_64 is efi and we don\u0027t need such hacks!1!!\n\n\nx86_64\u0027s TARGET_KERNEL_PLATFORM is actually bios_ia32. This is our first \"native EFI\" kernel platform.\n\nSee? x86_64 below.\n\n            HAIKU_KERNEL_PLATFORM ?\u003d bios_ia32 ;\n            HAIKU_BOOT_TARGETS +\u003d bios_ia32 efi pxe_ia32 ;",
      "revId": "204746903c9e889057da133d111bae4660e9ac41",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d71cce88_2d8fe0a0",
        "filename": "src/bin/makebootable/platform/efi/makebootable.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2020-06-22T11:37:56Z",
      "side": 1,
      "message": "Sure, but making makebootable optional would be better :)",
      "parentUuid": "09337290_22ada751",
      "revId": "204746903c9e889057da133d111bae4660e9ac41",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "63704ac2_8dbd8082",
        "filename": "src/system/boot/Jamfile",
        "patchSetId": 1
      },
      "lineNbr": 320,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-06-21T02:21:33Z",
      "side": 1,
      "message": "Others could apply here (riscv?) but, figured the intent was clearer with this vs !\u003d x86_64",
      "revId": "204746903c9e889057da133d111bae4660e9ac41",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    }
  ]
}