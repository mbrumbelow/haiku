{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b2253d73_a6094749",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2024-07-18T05:06:12Z",
      "side": 1,
      "message": "Actually I think we shouldn\u0027t merge this change. It seriously impacts loading performance (#18947 gets much slower), and clearly it wasn\u0027t needed to solve the original problem since it was broken from the start.",
      "revId": "5b50342a6e3590bd91f47c168eb7894fdc889813",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a6339f66_dfe4deb9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2024-07-18T05:06:28Z",
      "side": 1,
      "message": "(In other words, we should drop the \"true\" entirely.)",
      "parentUuid": "b2253d73_a6094749",
      "revId": "5b50342a6e3590bd91f47c168eb7894fdc889813",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a2ee2de3_8afb449c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2024-07-18T05:11:59Z",
      "side": 1,
      "message": "(On second analysis, I might\u0027ve done the comparison wrong and the impact to loading performance isn\u0027t so bad. Still, is this change even needed?)",
      "parentUuid": "a6339f66_dfe4deb9",
      "revId": "5b50342a6e3590bd91f47c168eb7894fdc889813",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ef806dcf_124e3bb0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2024-07-23T19:46:45Z",
      "side": 1,
      "message": "PulkoMandy: You were the one who added this change, but it was done incorrectly so it never worked. Is it really needed? If it isn\u0027t, can we just remove it entirely (which will also simplify find_symbol?)",
      "revId": "5b50342a6e3590bd91f47c168eb7894fdc889813",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "36d58993_8e28e7cc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2024-07-23T20:09:05Z",
      "side": 1,
      "message": "Well, that means api_version is essentially never set correctly, and all images are assumed to be \"ancient\". But, I can\u0027t see what we use this API version for at the moment. It is exported in image_info and as a global variable that the application itself can access, but that\u0027s all.\n\nSo, we can remove the workaround, and maybe even the whole API version thing, I guess we went another way in the end by using symbol versioning and other tricks? The lookup into all visible and invisible symbols is surely sub-optimal, and I didn\u0027t think about that when I made this change.\n\nIt would still be nice to check if the problem on building libraries have been fixed (does zlib have a visible API version now?) in case we need this later. The idea was to detect executables built for older versions of Haiku (or even for BeOS) and enable any needed compatibility workarounds automatically, for example, or load different libraries. We may need it for R2, maybe, so we should make sure all libraries are built with the proper versioning info when we get there?",
      "parentUuid": "ef806dcf_124e3bb0",
      "revId": "5b50342a6e3590bd91f47c168eb7894fdc889813",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d2f23380_a667e1fd",
        "filename": "src/system/runtime_loader/elf_haiku_version.cpp",
        "patchSetId": 2
      },
      "lineNbr": 219,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-07-18T04:54:17Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\tSymbolLookupInfo(B_SHARED_OBJECT_HAIKU_VERSION_VARIABLE_NAME, B_SYMBOL_TYPE_DATA), true);\n```",
      "range": {
        "startLine": 218,
        "startChar": 0,
        "endLine": 219,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "5b50342a6e3590bd91f47c168eb7894fdc889813",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}