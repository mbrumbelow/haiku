{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "839a0419_814f4d81",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2024-02-28T16:31:25Z",
      "side": 1,
      "message": "Unused functions should be put inside #if 0, not deleted.",
      "revId": "58897e5f611a37dc2612760d66250f85cf9c8bb6",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "77469f54_b03c29e2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000637
      },
      "writtenOn": "2024-03-04T20:30:00Z",
      "side": 1,
      "message": "Build failed in 32 bit due to this error:\n../src/add-ons/kernel/drivers/audio/ac97/auvia/auvia.c:171:30: error: cast from pointer to integer of different size [-Werror\u003dpointer-to-int-cast]\n171 | page[2*i] \u003d ((phys_addr_t)stream-\u003ebuffer-\u003ephy_base) +\n\ndo I leave it as it is, or revert it back to uintptr_t??",
      "revId": "58897e5f611a37dc2612760d66250f85cf9c8bb6",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e84aeda6_270e1112",
        "filename": "src/add-ons/kernel/drivers/audio/ac97/auich/multi.c",
        "patchSetId": 1
      },
      "lineNbr": 187,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2024-02-28T18:24:34Z",
      "side": 1,
      "message": "This int32 should be changed accordingly.",
      "revId": "58897e5f611a37dc2612760d66250f85cf9c8bb6",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4b6113c3_8a62e0b4",
        "filename": "src/add-ons/kernel/drivers/audio/ac97/auich/multi.c",
        "patchSetId": 1
      },
      "lineNbr": 204,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2024-02-28T18:24:34Z",
      "side": 1,
      "message": "why this change?",
      "revId": "58897e5f611a37dc2612760d66250f85cf9c8bb6",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ba0e270_78f4a2c4",
        "filename": "src/add-ons/kernel/drivers/audio/ac97/auich/multi.c",
        "patchSetId": 1
      },
      "lineNbr": 512,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2024-02-28T18:24:34Z",
      "side": 1,
      "message": "could the type of i be changed instead?",
      "revId": "58897e5f611a37dc2612760d66250f85cf9c8bb6",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "54651342_6f4d4e1e",
        "filename": "src/add-ons/kernel/drivers/audio/ac97/auvia/auvia.c",
        "patchSetId": 1
      },
      "lineNbr": 171,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2024-02-28T18:24:34Z",
      "side": 1,
      "message": "phy_base type should be changed to phys_addr_t",
      "revId": "58897e5f611a37dc2612760d66250f85cf9c8bb6",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d5195f2f_a231cfae",
        "filename": "src/add-ons/kernel/drivers/audio/ac97/auvia/auvia.c",
        "patchSetId": 1
      },
      "lineNbr": 171,
      "author": {
        "id": 1000637
      },
      "writtenOn": "2024-03-04T20:30:00Z",
      "side": 1,
      "message": "Build failed in 32 bit due to this error:\n../src/add-ons/kernel/drivers/audio/ac97/auvia/auvia.c:171:30: error: cast from pointer to integer of different size [-Werror\u003dpointer-to-int-cast]\n  171 |                 page[2*i] \u003d ((phys_addr_t)stream-\u003ebuffer-\u003ephy_base) +",
      "parentUuid": "54651342_6f4d4e1e",
      "revId": "58897e5f611a37dc2612760d66250f85cf9c8bb6",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aec610b5_d41d730d",
        "filename": "src/add-ons/kernel/drivers/audio/ac97/auvia/auvia.c",
        "patchSetId": 1
      },
      "lineNbr": 171,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2024-03-05T05:38:33Z",
      "side": 1,
      "message": "phy_base is located at https://cgit.haiku-os.org/haiku/tree/src/add-ons/kernel/drivers/audio/ac97/auvia/auvia.h#n86",
      "parentUuid": "d5195f2f_a231cfae",
      "revId": "58897e5f611a37dc2612760d66250f85cf9c8bb6",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da66ed62_d2c7cace",
        "filename": "src/add-ons/kernel/drivers/audio/ac97/auvia/auvia.c",
        "patchSetId": 1
      },
      "lineNbr": 171,
      "author": {
        "id": 1000637
      },
      "writtenOn": "2024-03-05T19:52:57Z",
      "side": 1,
      "message": "Oh you meant that the type of phy_base should be changed not just casted. \nEdit: I have edited the type in the header file but it raises the following error\n\"../src/add-ons/kernel/drivers/audio/ac97/auvia/auvia.c:76:31: error: passing argument 1 of \u0027alloc_mem\u0027 from incompatible pointer type [-Werror\u003dincompatible-pointer-types]\n   76 |         mem-\u003earea \u003d alloc_mem(\u0026mem-\u003ephy_base, \u0026mem-\u003elog_base, size, \"auvia buffer\");\n      |                               ^~~~~~~~~~~~~~\n      |                               |\n      |                               phys_addr_t * {aka long long unsigned int *}\n\"",
      "parentUuid": "aec610b5_d41d730d",
      "revId": "58897e5f611a37dc2612760d66250f85cf9c8bb6",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b170b39d_949a2e40",
        "filename": "src/add-ons/kernel/drivers/audio/ac97/auvia/auvia.c",
        "patchSetId": 1
      },
      "lineNbr": 171,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2024-03-06T12:39:25Z",
      "side": 1,
      "message": "Then the alloc_mem function should be modified to use a phys_addr_t as well.\n\nI see that ac97/es1370/util.c has already been modified, but the modifications were not ported to the other drivers. How identical is the file between the drivers? Can the changes be ported over from es1370 to the other ones?\n\nIf the file is identical, maybe move it to a \"common\" directory so that all drivers can use the same file? You can find an example of such \"common\" directories in drivers/graphics. It is building a static library that the other drivers can then reuse.",
      "parentUuid": "da66ed62_d2c7cace",
      "revId": "58897e5f611a37dc2612760d66250f85cf9c8bb6",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bd22007e_17aacea6",
        "filename": "src/add-ons/kernel/drivers/audio/ac97/auvia/auvia.c",
        "patchSetId": 1
      },
      "lineNbr": 180,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2024-02-28T18:24:34Z",
      "side": 1,
      "message": "same here",
      "revId": "58897e5f611a37dc2612760d66250f85cf9c8bb6",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dece1ee6_539d0585",
        "filename": "src/add-ons/kernel/drivers/audio/ac97/auvia/auvia.c",
        "patchSetId": 1
      },
      "lineNbr": 229,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2024-02-28T18:24:34Z",
      "side": 1,
      "message": "log_base should probably be changed to addr_t",
      "revId": "58897e5f611a37dc2612760d66250f85cf9c8bb6",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "737c5570_6990c289",
        "filename": "src/add-ons/kernel/drivers/audio/emuxki/emuxki.c",
        "patchSetId": 1
      },
      "lineNbr": 255,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2024-02-28T18:24:34Z",
      "side": 1,
      "message": "silentpage_phy_base type should be changed to phys_addr_t",
      "revId": "58897e5f611a37dc2612760d66250f85cf9c8bb6",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b8f0619c_cd06e107",
        "filename": "src/add-ons/kernel/drivers/audio/emuxki/emuxki.c",
        "patchSetId": 1
      },
      "lineNbr": 281,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2024-02-28T18:24:34Z",
      "side": 1,
      "message": "here too",
      "revId": "58897e5f611a37dc2612760d66250f85cf9c8bb6",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9e7f7f35_178b5213",
        "filename": "src/add-ons/kernel/drivers/audio/hda/hda_codec.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1580,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2024-02-28T18:24:34Z",
      "side": 1,
      "message": "c++ bitfields members should be adapted to the bit size.\n\n\tstruct {\n\t\tuint16 device : 16;\n\t\tuint16 vendor : 16;\n\t\tuint32 subsystem : 32;\n\t\tuint8 stepping : 8;\n\t\tuint8 revision : 8;\n\t\tuint8 minor : 4;\n\t\tuint8 major : 4;\n\t\tuint8 _reserved0 : 8;\n\t\tuint8 count : 8;\n\t\tuint8 _reserved1 : 8;\n\t\tuint8 start : 8;\n\t\tuint8 _reserved2 : 8;\n\t} response;\n\t\n\tTRACE(\"Codec %\" B_PRIu32 \" Vendor: %04\" B_PRIx16 \" Product: %04\" B_PRIx16 \" Subsystem: %08\" B_PRIx32 \", \"\n\t\t\"Revision: %\" B_PRIu8 \".%\" B_PRIu8 \".%\" B_PRIu8 \".%\" B_PRIu8 \" Quirks: %04\" B_PRIx32 \"\\n\",\n\t\tcodecAddress, response.vendor, response.device, codec-\u003esubsystem_id,\n\t\tresponse.major, response.minor, response.revision, response.stepping,\n\t\tcodec-\u003equirks);",
      "revId": "58897e5f611a37dc2612760d66250f85cf9c8bb6",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a23ac7d2_417f36c1",
        "filename": "src/add-ons/kernel/drivers/audio/hda/hda_codec.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1580,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2024-04-06T09:27:46Z",
      "side": 1,
      "message": "That would require swapping the values around, because bitfields start at bit 0 (LSB).\n\nSo, for example, the vendor ID should be before the device ID if we did that.\n\nThe Intel HDA specification really describes the replies as 32bit words with specific bit positions for each field, so I think the current declaration (using uint32) makes sense. The problem seems to be that the values are converted to int instead of keeping their original types. I think it\u0027s a bug in gcc2?",
      "parentUuid": "9e7f7f35_178b5213",
      "revId": "58897e5f611a37dc2612760d66250f85cf9c8bb6",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "09197cef_44189139",
        "filename": "src/add-ons/kernel/drivers/audio/hda/hda_codec.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1580,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2024-04-06T10:36:03Z",
      "side": 1,
      "message": "I would be surprised if that made a difference for LSB. the response variable is filled by the driver itself from the corb buffer.",
      "parentUuid": "a23ac7d2_417f36c1",
      "revId": "58897e5f611a37dc2612760d66250f85cf9c8bb6",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}