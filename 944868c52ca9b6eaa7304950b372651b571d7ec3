{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "7e2769a6_4bc85355",
        "filename": "src/add-ons/kernel/bus_managers/acpi/ACPICAHaiku.cpp",
        "patchSetId": 3
      },
      "lineNbr": 369,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2025-02-16T17:42:50Z",
      "side": 1,
      "message": "most of these functions can be deleted if uacpi doesn\u0027t need them (I\u0027m not sure yet as I didn\u0027t get things to build and boot).",
      "revId": "944868c52ca9b6eaa7304950b372651b571d7ec3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "644db351_de212236",
        "filename": "src/add-ons/kernel/bus_managers/acpi/ACPICAHaiku.cpp",
        "patchSetId": 3
      },
      "lineNbr": 369,
      "author": {
        "id": 1000743
      },
      "writtenOn": "2025-02-16T17:58:58Z",
      "side": 1,
      "message": "Yeah this is definitely not needed",
      "parentUuid": "7e2769a6_4bc85355",
      "revId": "944868c52ca9b6eaa7304950b372651b571d7ec3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "76d764d1_8aa0a128",
        "filename": "src/add-ons/kernel/bus_managers/acpi/ACPICAHaiku.cpp",
        "patchSetId": 3
      },
      "lineNbr": 369,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2025-02-16T19:39:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "644db351_de212236",
      "revId": "944868c52ca9b6eaa7304950b372651b571d7ec3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cc42e30e_2df79fb2",
        "filename": "src/add-ons/kernel/bus_managers/acpi/BusManager.cpp",
        "patchSetId": 3
      },
      "lineNbr": 292,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2025-02-16T17:42:50Z",
      "side": 1,
      "message": "I\u0027m not sure how to handle this yet",
      "revId": "944868c52ca9b6eaa7304950b372651b571d7ec3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bd5cd29f_2a1d4a0b",
        "filename": "src/add-ons/kernel/bus_managers/acpi/BusManager.cpp",
        "patchSetId": 3
      },
      "lineNbr": 292,
      "author": {
        "id": 1000743
      },
      "writtenOn": "2025-02-16T17:58:58Z",
      "side": 1,
      "message": "Maybe this is an API that should be added to uACPI, not sure, does Haiku actually use NO_TRAILING?",
      "parentUuid": "cc42e30e_2df79fb2",
      "revId": "944868c52ca9b6eaa7304950b372651b571d7ec3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6ab867bb_98216f6c",
        "filename": "src/add-ons/kernel/bus_managers/acpi/BusManager.cpp",
        "patchSetId": 3
      },
      "lineNbr": 292,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2025-02-16T18:33:18Z",
      "side": 1,
      "message": "I checked the sourcecode and can only find one place where this function is used (in acpi_display_driver, that is currently not in use and not working), and it passes an hardcoded 1 as the nameType (that would be ACPI_SINGLE_NAME).\n\nThe other uses where deleted when removing ACPICA specific code already.\n\nSo I need to fix this to not return the full name, but just the leaf name.",
      "parentUuid": "bd5cd29f_2a1d4a0b",
      "revId": "944868c52ca9b6eaa7304950b372651b571d7ec3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e5d8c4c5_4062f8c1",
        "filename": "src/add-ons/kernel/bus_managers/acpi/BusManager.cpp",
        "patchSetId": 3
      },
      "lineNbr": 292,
      "author": {
        "id": 1000743
      },
      "writtenOn": "2025-02-16T18:37:50Z",
      "side": 1,
      "message": "for a single name there\u0027s a `uacpi_namespace_node_name`",
      "parentUuid": "6ab867bb_98216f6c",
      "revId": "944868c52ca9b6eaa7304950b372651b571d7ec3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "05033701_958edc38",
        "filename": "src/add-ons/kernel/bus_managers/acpi/BusManager.cpp",
        "patchSetId": 3
      },
      "lineNbr": 292,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2025-02-16T19:39:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e5d8c4c5_4062f8c1",
      "revId": "944868c52ca9b6eaa7304950b372651b571d7ec3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7425938b_c0ba1fc3",
        "filename": "src/add-ons/kernel/bus_managers/acpi/BusManager.cpp",
        "patchSetId": 3
      },
      "lineNbr": 321,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2025-02-16T17:42:50Z",
      "side": 1,
      "message": "check what the handlerType was and if it\u0027s not needed, remove it from the bus manager API or document it as unused",
      "revId": "944868c52ca9b6eaa7304950b372651b571d7ec3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e145e660_d5ed7a7c",
        "filename": "src/add-ons/kernel/bus_managers/acpi/BusManager.cpp",
        "patchSetId": 3
      },
      "lineNbr": 321,
      "author": {
        "id": 1000743
      },
      "writtenOn": "2025-02-16T18:09:09Z",
      "side": 1,
      "message": "ACPICA\u0027s two handler types essentially filter by the notification value, if the value is \u003c 0x80, it\u0027s dispatched to a type 1 handler, type 2 otherwise. I found this to be a bit redundant since both handlers do the exact same thing, it\u0027s just the ceiling notification value that changes.",
      "parentUuid": "7425938b_c0ba1fc3",
      "revId": "944868c52ca9b6eaa7304950b372651b571d7ec3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4c6da357_ae9fd77a",
        "filename": "src/add-ons/kernel/bus_managers/acpi/BusManager.cpp",
        "patchSetId": 3
      },
      "lineNbr": 321,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2025-02-16T18:47:17Z",
      "side": 1,
      "message": "Ok, so I can remove that parameter and it will be similar to using ACPI_ALL_NOTIFY in ACPICA. It looks like some Linux driver had fixes by switching from ACPI_DEVICE_NOTIFY to ACPI_ALL_NOTIFY, so that may fix some bugs for us as well.\n\nHaiku devs, do you have an opinion on keeping the ABI stable here? I can keep the parameter but document it as unused, or remove it completely. Do we care about the ABI of the ACPI module?",
      "parentUuid": "e145e660_d5ed7a7c",
      "revId": "944868c52ca9b6eaa7304950b372651b571d7ec3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6282a4fd_90cf945e",
        "filename": "src/add-ons/kernel/bus_managers/acpi/BusManager.cpp",
        "patchSetId": 3
      },
      "lineNbr": 369,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2025-02-16T17:42:50Z",
      "side": 1,
      "message": "maybe replace set_gpe with separate suspend_gpe and resume_gpe hooks",
      "revId": "944868c52ca9b6eaa7304950b372651b571d7ec3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "01ee924d_129cb508",
        "filename": "src/add-ons/kernel/bus_managers/acpi/BusManager.cpp",
        "patchSetId": 3
      },
      "lineNbr": 406,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2025-02-16T17:42:50Z",
      "side": 1,
      "message": "we should probably check if there is already a handler, and throw an error in that case? or does uacpi already take care of that check?",
      "revId": "944868c52ca9b6eaa7304950b372651b571d7ec3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "af68e40f_571e61d9",
        "filename": "src/add-ons/kernel/bus_managers/acpi/BusManager.cpp",
        "patchSetId": 3
      },
      "lineNbr": 406,
      "author": {
        "id": 1000743
      },
      "writtenOn": "2025-02-16T17:58:58Z",
      "side": 1,
      "message": "That comment doesn\u0027t seem correct, what do you mean by that? uACPI supports one handler per address space per a device object, exactly the same as ACPICA, at least to my knowledge",
      "parentUuid": "01ee924d_129cb508",
      "revId": "944868c52ca9b6eaa7304950b372651b571d7ec3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2c1e3943_ac3c65ef",
        "filename": "src/add-ons/kernel/bus_managers/acpi/BusManager.cpp",
        "patchSetId": 3
      },
      "lineNbr": 406,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2025-02-16T18:33:18Z",
      "side": 1,
      "message": "ACPICA requires to pass the handler to the uninstall function as well. I guessed that this would allow installing and uninstalling multiple handlers, but maybe it doesn\u0027t, and then passing the handler to the uninstall function is useless because it can be found internally.\n\nIn that case, there\u0027s no problem with this. I assume uacpi_install_address_space_handler will return an error if trying to install a handler for an (address space, device) that\u0027s already used by another handler?",
      "parentUuid": "af68e40f_571e61d9",
      "revId": "944868c52ca9b6eaa7304950b372651b571d7ec3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3c338937_0cfd80fa",
        "filename": "src/add-ons/kernel/bus_managers/acpi/BusManager.cpp",
        "patchSetId": 3
      },
      "lineNbr": 406,
      "author": {
        "id": 1000743
      },
      "writtenOn": "2025-02-16T18:37:50Z",
      "side": 1,
      "message": "\u003e and then passing the handler to the uninstall function is useless because it can be found internally\n\nI think it\u0027s just an extra sanity check that they do, but otherwise it\u0027s useless yeah\n\n\u003e I assume uacpi_install_address_space_handler will return an error if trying to install a handler for an (address space, device) that\u0027s already used by another handler?\n\nYep, it would return a `UACPI_STATUS_ALREADY_EXISTS`",
      "parentUuid": "2c1e3943_ac3c65ef",
      "revId": "944868c52ca9b6eaa7304950b372651b571d7ec3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "64bc4ecd_b9c7a55c",
        "filename": "src/add-ons/kernel/bus_managers/acpi/BusManager.cpp",
        "patchSetId": 3
      },
      "lineNbr": 406,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2025-02-16T19:39:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3c338937_0cfd80fa",
      "revId": "944868c52ca9b6eaa7304950b372651b571d7ec3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eae7be4e_a8ed9057",
        "filename": "src/add-ons/kernel/bus_managers/acpi/BusManager.cpp",
        "patchSetId": 3
      },
      "lineNbr": 464,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2025-02-16T17:42:50Z",
      "side": 1,
      "message": "remove it from the API or document it as unused",
      "revId": "944868c52ca9b6eaa7304950b372651b571d7ec3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "29d8c0ed_2ed03bdb",
        "filename": "src/add-ons/kernel/bus_managers/acpi/BusManager.cpp",
        "patchSetId": 3
      },
      "lineNbr": 648,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2025-02-16T17:42:50Z",
      "side": 1,
      "message": "does the caller need to dereference the returned object now?\n\nalso, the bufferLength is now unused.\n\nShould we instead copy the rsult into the passed buffer, or will that break uacpi reference counting?",
      "revId": "944868c52ca9b6eaa7304950b372651b571d7ec3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e0b355b1_3e4d5689",
        "filename": "src/add-ons/kernel/bus_managers/acpi/BusManager.cpp",
        "patchSetId": 3
      },
      "lineNbr": 648,
      "author": {
        "id": 1000743
      },
      "writtenOn": "2025-02-16T17:58:58Z",
      "side": 1,
      "message": "uacpi_object is an opaque struct, the returnValue should be of type `uacpi_object **returnValue`",
      "parentUuid": "29d8c0ed_2ed03bdb",
      "revId": "944868c52ca9b6eaa7304950b372651b571d7ec3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5b8c77e9_d963de78",
        "filename": "src/add-ons/kernel/bus_managers/acpi/uacpi/include/uacpi/platform/config.h",
        "patchSetId": 3
      },
      "lineNbr": 54,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2025-02-16T17:42:50Z",
      "side": 1,
      "message": "this should be in a #ifdef to visibliy mark it is modified from upstream",
      "revId": "944868c52ca9b6eaa7304950b372651b571d7ec3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}