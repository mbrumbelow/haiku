{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "20c1059b_de3bb9a2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2023-05-09T19:04:35Z",
      "side": 1,
      "message": "Any real advantage here? I tend to think the #if looks cleaner...",
      "revId": "4686464d85f008d3259d5f0618c3445a75c1d201",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3620e71f_67e6cdb9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000341
      },
      "writtenOn": "2023-05-09T19:06:52Z",
      "side": 1,
      "message": "mainly to prevent the bitrot situation we can see in some parts of the code: the tracing is disabled for a long time, meanwhile some function signatures or variable types got changed, and then after a while it won\u0027t compile any more with tracing enabled",
      "parentUuid": "20c1059b_de3bb9a2",
      "revId": "4686464d85f008d3259d5f0618c3445a75c1d201",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6709f15f_289ca1c7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2023-05-09T19:07:47Z",
      "side": 1,
      "message": "I\u0027d personally argue that the constexpr way is cleaner, since it\u0027s written just like regular code. Since it\u0027s a constexpr, the compiler can optimize out the blocks in question entirely when disabled rather than relying on preprocessor hacks, which IMO should only really be reserved for things the language literally can\u0027t do any other way.",
      "parentUuid": "20c1059b_de3bb9a2",
      "revId": "4686464d85f008d3259d5f0618c3445a75c1d201",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4d215231_f1cf9ea6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2023-05-09T20:53:12Z",
      "side": 1,
      "message": "Since ARM is a modern platform you could use auto as well for some var declarations.",
      "revId": "4686464d85f008d3259d5f0618c3445a75c1d201",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8c45e49b_ebb1d1e8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000172
      },
      "writtenOn": "2023-05-09T20:55:43Z",
      "side": 1,
      "message": "Good idea. This allows to check disabled code by compiler and avoid bit rot.",
      "revId": "4686464d85f008d3259d5f0618c3445a75c1d201",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}