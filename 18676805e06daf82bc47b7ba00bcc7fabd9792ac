{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "753c4e6a_9c1286c5",
        "filename": "headers/private/file_systems/QueryParser.h",
        "patchSetId": 2
      },
      "lineNbr": 752,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-05-31T04:05:35Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\tif (QueryPolicy::NodeGetAttribute(nodeHolder, node, fAttribute, buffer, \u0026size, \u0026type)\n\t\t\t!\u003d B_OK) {\n```",
      "range": {
        "startLine": 751,
        "startChar": 0,
        "endLine": 752,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "18676805e06daf82bc47b7ba00bcc7fabd9792ac",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2e2b899d_6716347d",
        "filename": "headers/private/file_systems/QueryParser.h",
        "patchSetId": 2
      },
      "lineNbr": 899,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-05-31T04:05:35Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\tstatus_t status \u003d QueryPolicy::IndexIteratorFetchNextEntry(iterator, \u0026indexValue,\n\t\t\t\u0026keyLength, (size_t)sizeof(indexValue), \u0026duplicate);\n```",
      "range": {
        "startLine": 898,
        "startChar": 0,
        "endLine": 899,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "18676805e06daf82bc47b7ba00bcc7fabd9792ac",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a3b8ced8_80786e97",
        "filename": "headers/private/file_systems/QueryParser.h",
        "patchSetId": 2
      },
      "lineNbr": 922,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-05-31T04:05:35Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\tstatus \u003d QueryPolicy::IndexIteratorGetEntry(context, iterator, nodeHolder, \u0026entry);\n```",
      "range": {
        "startLine": 921,
        "startChar": 0,
        "endLine": 922,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "18676805e06daf82bc47b7ba00bcc7fabd9792ac",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Build-Check",
        "description": {
          "value": "Builds OK on all architectures"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "-label:Verified\u003d-1"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-label:Verified=-1"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Verified=-1"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "18676805e06daf82bc47b7ba00bcc7fabd9792ac",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}