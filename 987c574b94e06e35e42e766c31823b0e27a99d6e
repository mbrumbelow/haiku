{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "bec2adb6_105429ee",
        "filename": "src/add-ons/kernel/drivers/power/acpi_ac/acpi_ac.cpp",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2023-02-07T16:46:16Z",
      "side": 1,
      "message": "This is nitpicking, but perhaps we should use a local buffer. Less chance of leaking memory.",
      "revId": "987c574b94e06e35e42e766c31823b0e27a99d6e",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dbad24c7_6beff41c",
        "filename": "src/add-ons/kernel/drivers/power/acpi_ac/acpi_ac.cpp",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2023-02-07T16:50:08Z",
      "side": 1,
      "message": "But then we\u0027d have to detect lengths. Much easier to just put the `free` at the bottom of the function. It\u0027s perfectly legal to `free(NULL)`.",
      "parentUuid": "bec2adb6_105429ee",
      "revId": "987c574b94e06e35e42e766c31823b0e27a99d6e",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f14aecce_4c6a5c09",
        "filename": "src/add-ons/kernel/drivers/power/acpi_ac/acpi_ac.cpp",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2023-02-07T17:06:58Z",
      "side": 1,
      "message": "It is a allocation and a free that always need to be accounted for.\n\nIn this case I think we know the expected size or even can use correct struct so why not just use the stack?",
      "parentUuid": "dbad24c7_6beff41c",
      "revId": "987c574b94e06e35e42e766c31823b0e27a99d6e",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0e2b2028_cd1ce8af",
        "filename": "src/add-ons/kernel/drivers/power/acpi_ac/acpi_ac.cpp",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1000311
      },
      "writtenOn": "2023-02-07T17:35:13Z",
      "side": 1,
      "message": "Thanks for the review guys (and sorry for missing the \"Change-Id\", forgot the commit hook on a new install. I\u0027ve updated the commit message with the Change-Id from the email headers).\n\nI\u0027m afraid my skills are pretty limited (mostly to one-lines and/or moving code around, or so it seems :-D).\n\nI think I would certainly mess up any attempt to use ACPI_ALLOCATE_LOCAL_BUFFER (assuming I got at least *that* right).\n\nI would be more than happy if someone more knowledgeable could handle that change, if a consensus is reached.\n\nThanks again!",
      "parentUuid": "f14aecce_4c6a5c09",
      "revId": "987c574b94e06e35e42e766c31823b0e27a99d6e",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bb52b475_e3ae1fba",
        "filename": "src/add-ons/kernel/drivers/power/acpi_ac/acpi_ac.cpp",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2023-02-07T17:57:28Z",
      "side": 1,
      "message": "This change is fine without doing that.\n \nIn short what you would do is create a local variable in the function and use a pointer to it and its size as args.\nIf it is not big enough you would get an error. \nIf the call succeeded it would fill the local var with data.",
      "parentUuid": "0e2b2028_cd1ce8af",
      "revId": "987c574b94e06e35e42e766c31823b0e27a99d6e",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}