{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "8429e6a7_73da6cca",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000223
      },
      "writtenOn": "2024-06-27T18:43:01Z",
      "side": 1,
      "message": "This is based on my not getting what I expected with a non-word-wrapping text view in a scroll view in a vertical group layout, not on any knowledge or understanding of BTextView. I don\u0027t even know what the change might break.\n\nWhat I observed was that initially the text rect is invalid, and while being so there\u0027s no search for line breaks, and so there\u0027s just one line with its width (and other properties) set to 0, which means a preferred width of 0 that gets changed to the minimum one that depends on font metrics and not on the text.",
      "revId": "5fdb84579edeecbbc01f10a71fa68bacc9041044",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "15cfcea2_36750358",
        "filename": "src/kits/interface/TextView.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2823,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2024-07-02T11:10:17Z",
      "side": 1,
      "message": "Can you clarify why we need to make a different decision here based on the presence of scrollbars?\n\nUsually, the scrollbars shouldn\u0027t affect the preferred size of the scrolled view, what may change is how these constraints are forwarded (or not) to the parent ScrollView.",
      "revId": "5fdb84579edeecbbc01f10a71fa68bacc9041044",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e295bb4_adbcbd5a",
        "filename": "src/kits/interface/TextView.cpp",
        "patchSetId": 1
      },
      "lineNbr": 3863,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2024-06-27T18:49:11Z",
      "side": 1,
      "message": "I\u0027m confused. This function calculates line breaks, shouldn\u0027t this check be \"if (!fWrap || ...\"?",
      "revId": "5fdb84579edeecbbc01f10a71fa68bacc9041044",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3593c251_fbfa0bc3",
        "filename": "src/kits/interface/TextView.cpp",
        "patchSetId": 1
      },
      "lineNbr": 3863,
      "author": {
        "id": 1000223
      },
      "writtenOn": "2024-06-27T19:06:26Z",
      "side": 1,
      "message": "Dunno. Maybe, if line breaks were already calculated on text insertion when !fWrap, but that\u0027s not the case. You may `Insert(\"This is a line\\n\")` as much as you want, and all the text will internally be one line until it goes through this method. That is, with `if (!fWrap || ...)` there would be no line breaks without word-wrapping.",
      "parentUuid": "8e295bb4_adbcbd5a",
      "revId": "5fdb84579edeecbbc01f10a71fa68bacc9041044",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cc07415f_4e5b8b50",
        "filename": "src/kits/interface/TextView.cpp",
        "patchSetId": 1
      },
      "lineNbr": 3863,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2024-06-27T19:07:46Z",
      "side": 1,
      "message": "Ah, OK.",
      "parentUuid": "3593c251_fbfa0bc3",
      "revId": "5fdb84579edeecbbc01f10a71fa68bacc9041044",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "492ab8dd_27f9e163",
        "filename": "src/kits/interface/TextView.cpp",
        "patchSetId": 1
      },
      "lineNbr": 3863,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2024-07-02T11:10:17Z",
      "side": 1,
      "message": "The reason this check was added is because the algorithm becomes very slow when the text rect is small or invalid. Basically it creates one line for each character in the text, resulting in lots of tiny memory allocations.\n\nBut, as mentioned in the commit message, this isn\u0027t the case when word wrapping is disabled (in that case, the text rect is not used at all). So, in that case, we can insert line break at every newline character (and then use that to know how many lines there are and automatically compute the text rect and the view preferred size)",
      "parentUuid": "cc07415f_4e5b8b50",
      "revId": "5fdb84579edeecbbc01f10a71fa68bacc9041044",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}