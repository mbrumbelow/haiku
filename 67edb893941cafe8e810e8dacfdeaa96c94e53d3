{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ff9fb37f_222f47cc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000013
      },
      "writtenOn": "2022-07-31T20:37:27Z",
      "side": 1,
      "message": "Calculate initial line count using (min width - insets) instead of base width. They are almost always the same value but can differ if your locale has long a long memory size string (e.g. Greek.)",
      "revId": "67edb893941cafe8e810e8dacfdeaa96c94e53d3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "690541c3_59c9a5bf",
        "filename": "src/apps/aboutsystem/AboutSystem.cpp",
        "patchSetId": 7
      },
      "lineNbr": 91,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2022-08-01T07:17:17Z",
      "side": 1,
      "message": "I don\u0027t understand what speed is gained here.\n\nIf I understand correctly, this is just permanently wasting 1K of memory. You could declare this as \"char string[STRING_LEN];\" in each function that needs it, and then it would be allocated on the stack, which does not use any memory because the stack is already allocated and large enough anyways.",
      "revId": "67edb893941cafe8e810e8dacfdeaa96c94e53d3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "53d14ff8_2a7c0346",
        "filename": "src/apps/aboutsystem/AboutSystem.cpp",
        "patchSetId": 7
      },
      "lineNbr": 592,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2022-08-01T07:17:17Z",
      "side": 1,
      "message": "This function can be completely removed if there is nothing else to do?\n\nPreparing the function like this so we have the vtables correctly set up in the future is a good idea in system libraries maybe, but here it seems not very useful?",
      "revId": "67edb893941cafe8e810e8dacfdeaa96c94e53d3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "78a4ad2b_561eb23d",
        "filename": "src/apps/aboutsystem/AboutSystem.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1539,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2022-08-01T07:17:17Z",
      "side": 1,
      "message": "these should have no \"f\" as they are local variables",
      "revId": "67edb893941cafe8e810e8dacfdeaa96c94e53d3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2164d3c7_97030ae6",
        "filename": "src/apps/aboutsystem/AboutSystem.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1676,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2022-08-01T07:17:17Z",
      "side": 1,
      "message": "(not really important, it works well this way)\n\nThe use of BObjectList here just makes this layout difficult to read.\n\nIt would be better with a for loop maybe:\n\n    BLayoutBuilder::Group\u003c\u003e((BGroupLayout*)GetLayout()) layout;\n\n    for (...) {\n        layout.Add(fLabels.ItemAt(i))\n        layout.Add(fSubtexts.ItemAt(i))\n        layout.Add(fSubtexts.ItemAt(i + 1))\n        layout.AddStrut(offset)\n    }\n\nHowever I\u0027m not sure there is a pattern that\u0027s regular enough to use a loop here? In that case I think we would be better off with several local variables for each item, or maybe just add them to the layout just as they are created in the function, instead of doing it all at the end.",
      "revId": "67edb893941cafe8e810e8dacfdeaa96c94e53d3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "867080df_03c9f7d2",
        "filename": "src/apps/aboutsystem/AboutSystem.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1842,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2022-08-01T07:17:17Z",
      "side": 1,
      "message": "We have an about box for the about box now? That seems a bit silly.\n\nDidn\u0027t we remove them from most Haiku apps?",
      "revId": "67edb893941cafe8e810e8dacfdeaa96c94e53d3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3bdf6d86_6154b0bd",
        "filename": "src/apps/aboutsystem/AboutSystem.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1993,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2022-08-01T07:17:17Z",
      "side": 1,
      "message": "we have a rgb_color.Brightness() function to do this in a more controlled way, the goal is to use the same algorithm and limits everywhere",
      "revId": "67edb893941cafe8e810e8dacfdeaa96c94e53d3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "87921195_89e01e35",
        "filename": "src/apps/aboutsystem/AboutSystem.cpp",
        "patchSetId": 7
      },
      "lineNbr": 2111,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2022-08-01T07:17:17Z",
      "side": 1,
      "message": "it\u0027s weird to compute this using floating point, can\u0027t it be done with integers by doing the division last?",
      "revId": "67edb893941cafe8e810e8dacfdeaa96c94e53d3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2611ee71_22bd0dc2",
        "filename": "src/apps/aboutsystem/AboutSystem.cpp",
        "patchSetId": 7
      },
      "lineNbr": 2118,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2022-08-01T07:17:17Z",
      "side": 1,
      "message": "it\u0027s weird to compute this using floating point, can\u0027t it be done with integers by doing the division last?",
      "revId": "67edb893941cafe8e810e8dacfdeaa96c94e53d3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "de16e4c9_b94e6c97",
        "filename": "src/apps/aboutsystem/AboutSystem.cpp",
        "patchSetId": 7
      },
      "lineNbr": 2126,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2022-08-01T07:17:17Z",
      "side": 1,
      "message": "it\u0027s weird to compute this using floating point, can\u0027t it be done with integers by doing the division last?",
      "revId": "67edb893941cafe8e810e8dacfdeaa96c94e53d3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "96936458_38fe4ebe",
        "filename": "src/apps/aboutsystem/AboutSystem.cpp",
        "patchSetId": 7
      },
      "lineNbr": 2133,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2022-08-01T07:17:17Z",
      "side": 1,
      "message": "it\u0027s weird to compute this using floating point, can\u0027t it be done with integers by doing the division last?",
      "revId": "67edb893941cafe8e810e8dacfdeaa96c94e53d3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cadfb836_599938ec",
        "filename": "src/apps/aboutsystem/AboutSystem.cpp",
        "patchSetId": 7
      },
      "lineNbr": 2171,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2022-08-01T07:17:17Z",
      "side": 1,
      "message": "why doesn\u0027t this return a BString instead?",
      "revId": "67edb893941cafe8e810e8dacfdeaa96c94e53d3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}