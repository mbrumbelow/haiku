{
  "comments": [
    {
      "key": {
        "uuid": "bedcc50b_a4c1af81",
        "filename": "src/preferences/input/InputDeviceView.cpp",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2021-03-28T11:21:20Z",
      "side": 1,
      "message": "the previous format was correct here.\n\nclang-format settings that could be related:\n- BreakConstructorInitializers (should be BCIS_Haiku)\n- AllowAllConstructorInitializersOnNextLine (should be false)\n- ConstructorInitializerAllOnOneLineOrOnePerLine (should be false)\n\nIf that is not enough, code changes are needed in clang-format",
      "revId": "320136b8218c94e16dce74c3049f5ad481ab8457",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "30184e13_80158373",
        "filename": "src/preferences/input/InputDeviceView.cpp",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1000012
      },
      "writtenOn": "2021-03-28T11:26:22Z",
      "side": 1,
      "message": "The existing style seems to be correct, see the example on the coding guidelines: \n\nFoo::Foo(int32 param)\n\t:\n\tBar(int32* param),\n\tfMember(param),\n\tfPointerMember(NULL)",
      "revId": "320136b8218c94e16dce74c3049f5ad481ab8457",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a25e019c_c0783aeb",
        "filename": "src/preferences/input/InputDeviceView.cpp",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1000294
      },
      "writtenOn": "2021-03-28T22:51:30Z",
      "side": 1,
      "message": "Thank you also I have observed that on line 31-35 is according to the coding style so may be it\u0027s just the case of length of line.",
      "parentUuid": "30184e13_80158373",
      "revId": "320136b8218c94e16dce74c3049f5ad481ab8457",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "40e4c284_d645981e",
        "filename": "src/preferences/input/InputDeviceView.cpp",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1000294
      },
      "writtenOn": "2021-03-28T22:51:30Z",
      "side": 1,
      "message": "I have tried with the above settings but it didn\u0027t worked as expected. So may be we need to change the code.",
      "parentUuid": "bedcc50b_a4c1af81",
      "revId": "320136b8218c94e16dce74c3049f5ad481ab8457",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b4a4fd6d_25f524af",
        "filename": "src/preferences/input/InputDeviceView.cpp",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1000013
      },
      "writtenOn": "2021-04-01T22:14:38Z",
      "side": 1,
      "message": "Deindent the initialization list by one tab otherwise go back the original code. Original braces. Never combine into one line even if list is short.",
      "parentUuid": "a25e019c_c0783aeb",
      "revId": "320136b8218c94e16dce74c3049f5ad481ab8457",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d0236c47_9f1b8888",
        "filename": "src/preferences/input/InputDeviceView.cpp",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1000197
      },
      "writtenOn": "2021-04-04T14:26:18Z",
      "side": 1,
      "message": "Maybe changing the workflow of BreakConstructorInitializers for BCIS_Haiku might solve your problem.",
      "parentUuid": "40e4c284_d645981e",
      "revId": "320136b8218c94e16dce74c3049f5ad481ab8457",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "931918b1_a0510bb1",
        "filename": "src/preferences/input/InputDeviceView.cpp",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2021-04-09T10:32:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b4a4fd6d_25f524af",
      "revId": "320136b8218c94e16dce74c3049f5ad481ab8457",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "86bc75c0_b5a5eba2",
        "filename": "src/preferences/input/InputDeviceView.cpp",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2021-04-09T10:32:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d0236c47_9f1b8888",
      "revId": "320136b8218c94e16dce74c3049f5ad481ab8457",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "853eac2c_e9b3b60a",
        "filename": "src/preferences/input/InputDeviceView.cpp",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2021-03-28T11:21:20Z",
      "side": 1,
      "message": "we don\u0027t have examples of inline functions in the coding guidelines.\n\nIs this style ok?",
      "revId": "320136b8218c94e16dce74c3049f5ad481ab8457",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "859b815b_7ba0f9f0",
        "filename": "src/preferences/input/InputDeviceView.cpp",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1000012
      },
      "writtenOn": "2021-03-28T11:26:22Z",
      "side": 1,
      "message": "Not sure about the style when adding the method body inside the class definition. It seems like our preferred style is to extract the method bodies outside of the definition.\n\nOpinions/previous work?",
      "revId": "320136b8218c94e16dce74c3049f5ad481ab8457",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "81ed151d_0091da20",
        "filename": "src/preferences/input/InputDeviceView.cpp",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1000294
      },
      "writtenOn": "2021-03-28T22:51:30Z",
      "side": 1,
      "message": "So do we need to change the code or working with this is fine?",
      "parentUuid": "859b815b_7ba0f9f0",
      "revId": "320136b8218c94e16dce74c3049f5ad481ab8457",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "863b61d9_75030243",
        "filename": "src/preferences/input/InputDeviceView.cpp",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1000197
      },
      "writtenOn": "2021-03-31T19:56:17Z",
      "side": 1,
      "message": "If you are planning to change the code then maybe changing the behaviour of AllowShortFunctionsOnASingleLine will help.\n\nYou may look at its options in the below link.\nhttps://clang.llvm.org/docs/ClangFormatStyleOptions.html",
      "parentUuid": "81ed151d_0091da20",
      "revId": "320136b8218c94e16dce74c3049f5ad481ab8457",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5ce6375a_66bfed66",
        "filename": "src/preferences/input/InputDeviceView.cpp",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1000013
      },
      "writtenOn": "2021-04-01T22:14:38Z",
      "side": 1,
      "message": "This looks ok to me to put on one line. The reason there are no examples is because writing inline members inside a class definition is discouraged. The original code style was also fine.",
      "parentUuid": "853eac2c_e9b3b60a",
      "revId": "320136b8218c94e16dce74c3049f5ad481ab8457",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "db4d2dfd_725644fe",
        "filename": "src/preferences/input/InputDeviceView.cpp",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2021-04-09T10:32:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "863b61d9_75030243",
      "revId": "320136b8218c94e16dce74c3049f5ad481ab8457",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fc90d59f_b87dacc5",
        "filename": "src/preferences/input/InputDeviceView.cpp",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2021-04-09T10:32:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5ce6375a_66bfed66",
      "revId": "320136b8218c94e16dce74c3049f5ad481ab8457",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "381c6359_fa3ef994",
        "filename": "src/preferences/input/InputDeviceView.cpp",
        "patchSetId": 1
      },
      "lineNbr": 100,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2021-03-28T11:21:20Z",
      "side": 1,
      "message": "The previous style was more correct here for fields of a class.\n\nIdeally there should be even more tabs, at the left, to leave space for qualifiers (\"volatile\", \"const\", ...) in a separate column.",
      "revId": "320136b8218c94e16dce74c3049f5ad481ab8457",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "26735140_9b3fbb84",
        "filename": "src/preferences/input/InputDeviceView.cpp",
        "patchSetId": 1
      },
      "lineNbr": 100,
      "author": {
        "id": 1000012
      },
      "writtenOn": "2021-03-28T11:26:22Z",
      "side": 1,
      "message": "I guess we are reaching the limits of our style guide and the extend to which you can do automated checking here.\n\nThere seems to be a preference for a very aligned, table-like structure of the class/struct definitions. I don\u0027t know if we can automatically check if the style is correct in the sense that types, specifiers and names are aligned in the table-structure. \n\nIt does seem to me that the style tool should not convert tabs into spaces.",
      "revId": "320136b8218c94e16dce74c3049f5ad481ab8457",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9857c833_999dd430",
        "filename": "src/preferences/input/InputDeviceView.cpp",
        "patchSetId": 1
      },
      "lineNbr": 100,
      "author": {
        "id": 1000294
      },
      "writtenOn": "2021-03-28T22:51:30Z",
      "side": 1,
      "message": "I have tried with different settings with tabs but none of them work as expected. May be we need to change the code or addding clang-format off but it will not look good in the code.",
      "parentUuid": "381c6359_fa3ef994",
      "revId": "320136b8218c94e16dce74c3049f5ad481ab8457",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f40d6084_3a546b70",
        "filename": "src/preferences/input/InputDeviceView.cpp",
        "patchSetId": 1
      },
      "lineNbr": 100,
      "author": {
        "id": 1000294
      },
      "writtenOn": "2021-03-29T09:36:45Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "26735140_9b3fbb84",
      "revId": "320136b8218c94e16dce74c3049f5ad481ab8457",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5ea9979e_38718cd7",
        "filename": "src/preferences/input/InputDeviceView.cpp",
        "patchSetId": 1
      },
      "lineNbr": 100,
      "author": {
        "id": 1000013
      },
      "writtenOn": "2021-04-01T22:14:38Z",
      "side": 1,
      "message": "Since there are no tabs in the rest of the class method definitions this seems ok to me to replace the tabs with spaces. Ideally the whole thing would be reworked to take all the method bodies out of the class and retab everything properly then. Assuming that is not done, I’m ok with the spaces for consistency here.",
      "parentUuid": "9857c833_999dd430",
      "revId": "320136b8218c94e16dce74c3049f5ad481ab8457",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8131a6bc_11112a4a",
        "filename": "src/preferences/input/InputKeyboard.cpp",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 1000012
      },
      "writtenOn": "2021-03-28T11:26:22Z",
      "side": 1,
      "message": "This change is probably inconsistent with our style guide (even though I do like it better). The previous version is consistent with the example.",
      "revId": "320136b8218c94e16dce74c3049f5ad481ab8457",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9a046cf3_cf9e88f0",
        "filename": "src/preferences/input/InputKeyboard.cpp",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 1000294
      },
      "writtenOn": "2021-03-28T22:51:30Z",
      "side": 1,
      "message": "I have not tried to change this behaviour but I will try by adding some setting in .clang-format file.",
      "parentUuid": "8131a6bc_11112a4a",
      "revId": "320136b8218c94e16dce74c3049f5ad481ab8457",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "15439074_d92ccf91",
        "filename": "src/preferences/input/InputKeyboard.cpp",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2021-03-28T11:21:20Z",
      "side": 1,
      "message": "These changes are incorrect. We use an unusual indentation style inside BLayoutBuilder to reflect the hierarchy of the controls being added in a window. So, for example, every call to .AddGroup results in an extra indentation level for all things that go inside the group, until the next call to .End().\n\nThis is specific to our APIs, so I don\u0027t know if it could be added to clang-format easily. What could be done about it?",
      "revId": "320136b8218c94e16dce74c3049f5ad481ab8457",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1d1266f7_59600ac3",
        "filename": "src/preferences/input/InputKeyboard.cpp",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1000012
      },
      "writtenOn": "2021-03-28T11:26:22Z",
      "side": 1,
      "message": "This is probably also one where you reach the limits of what you can/should automatically correct. Technically, the suggested style is correct. The issue is that the AddGroup() calls of the layout builder match with the End() calls, and it is probably more clear to the user what\u0027s happening her if you keep the original indentation.",
      "revId": "320136b8218c94e16dce74c3049f5ad481ab8457",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "af291459_2fbdd46c",
        "filename": "src/preferences/input/InputKeyboard.cpp",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1000294
      },
      "writtenOn": "2021-03-28T22:51:30Z",
      "side": 1,
      "message": "Yes, the previous code was much more readable and understandable at one go. I will try to find out the solution for this problem.",
      "parentUuid": "15439074_d92ccf91",
      "revId": "320136b8218c94e16dce74c3049f5ad481ab8457",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7667852c_622f00e6",
        "filename": "src/preferences/input/InputMouse.cpp",
        "patchSetId": 1
      },
      "lineNbr": 145,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2021-03-28T11:21:20Z",
      "side": 1,
      "message": "this if should get {} because the statement inside it spans more than one line",
      "revId": "320136b8218c94e16dce74c3049f5ad481ab8457",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1eeaf6cd_c9f51b7e",
        "filename": "src/preferences/input/InputMouse.cpp",
        "patchSetId": 1
      },
      "lineNbr": 145,
      "author": {
        "id": 1000294
      },
      "writtenOn": "2021-03-28T22:51:30Z",
      "side": 1,
      "message": "Yes it is. May be adding some settings in clang-format might solve it but I think that to achieve this we need to change the code",
      "parentUuid": "7667852c_622f00e6",
      "revId": "320136b8218c94e16dce74c3049f5ad481ab8457",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "05966b99_14bdee7d",
        "filename": "src/preferences/input/InputMouse.cpp",
        "patchSetId": 1
      },
      "lineNbr": 145,
      "author": {
        "id": 1000294
      },
      "writtenOn": "2021-04-11T10:19:48Z",
      "side": 1,
      "message": "I have searched and didn\u0027t found any way to add braces in such condition using clang-format. Then, I tried with clang-tidy by changing some settings of clang-tidy and it was giving the expected result, in this case. So can we use that?",
      "parentUuid": "1eeaf6cd_c9f51b7e",
      "revId": "320136b8218c94e16dce74c3049f5ad481ab8457",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "40819721_62024e70",
        "filename": "src/preferences/input/InputMouse.cpp",
        "patchSetId": 1
      },
      "lineNbr": 172,
      "author": {
        "id": 1000012
      },
      "writtenOn": "2021-03-28T11:26:22Z",
      "side": 1,
      "message": "Just want to double check with others whether this is the expected style. IMO it is, the rules are (a) max 80 chars (b) put as many arguments on the line as possible and (c) complex arguments should preferably not be broken up.\n\nThe alterative would be the previous style where the main rule is to put as much as possible on each line.",
      "revId": "320136b8218c94e16dce74c3049f5ad481ab8457",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5f5a1ff3_0fe77579",
        "filename": "src/preferences/input/InputMouse.cpp",
        "patchSetId": 1
      },
      "lineNbr": 172,
      "author": {
        "id": 1000012
      },
      "writtenOn": "2021-03-28T11:30:20Z",
      "side": 1,
      "message": "Just to reply to myself, the style guide seems to be of a differing opinion, i.e. the previous version is preferred:\n\nif (someVeryVeryLongConditionThatBarelyFitsOnALine\n\t\u0026\u0026 (someVeryLongNestedConditionPart1\n\t\t|| someVeryLongNestedConditionPart2)\n\t\u0026\u0026 lastPartOfSomeVeryVeryLongCondition\n\t\t!\u003d 0) {",
      "parentUuid": "40819721_62024e70",
      "revId": "320136b8218c94e16dce74c3049f5ad481ab8457",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2926b651_bfdfc91a",
        "filename": "src/preferences/input/InputMouse.cpp",
        "patchSetId": 1
      },
      "lineNbr": 172,
      "author": {
        "id": 1000294
      },
      "writtenOn": "2021-03-29T09:36:45Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "5f5a1ff3_0fe77579",
      "revId": "320136b8218c94e16dce74c3049f5ad481ab8457",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "60e3bdc6_2d31f8e6",
        "filename": "src/preferences/input/InputTouchpadPref.cpp",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1000012
      },
      "writtenOn": "2021-03-28T11:26:22Z",
      "side": 1,
      "message": "This does seem to be against the style guide: we put as many arguments on one line as possible.",
      "revId": "320136b8218c94e16dce74c3049f5ad481ab8457",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d072da1c_3ad989d3",
        "filename": "src/preferences/input/InputTouchpadPref.cpp",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1000294
      },
      "writtenOn": "2021-03-29T09:36:45Z",
      "side": 1,
      "message": "Does the previous style follows our code guidelines?",
      "parentUuid": "60e3bdc6_2d31f8e6",
      "revId": "320136b8218c94e16dce74c3049f5ad481ab8457",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b998f98d_e6752841",
        "filename": "src/preferences/input/InputTouchpadPref.cpp",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2021-03-29T09:44:59Z",
      "side": 1,
      "message": "yes, but I think both versions are acceptable?",
      "parentUuid": "d072da1c_3ad989d3",
      "revId": "320136b8218c94e16dce74c3049f5ad481ab8457",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "269a5215_5cb70ab0",
        "filename": "src/preferences/input/InputTouchpadPref.cpp",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2021-04-09T10:32:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b998f98d_e6752841",
      "revId": "320136b8218c94e16dce74c3049f5ad481ab8457",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0983169e_e87cecae",
        "filename": "src/preferences/input/InputTouchpadPref.cpp",
        "patchSetId": 1
      },
      "lineNbr": 102,
      "author": {
        "id": 1000012
      },
      "writtenOn": "2021-03-28T11:26:22Z",
      "side": 1,
      "message": "This change seems to be correct, though I am not sure I like it.",
      "revId": "320136b8218c94e16dce74c3049f5ad481ab8457",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d0aeeb1_b1f53739",
        "filename": "src/preferences/input/InputTouchpadPref.cpp",
        "patchSetId": 1
      },
      "lineNbr": 102,
      "author": {
        "id": 1000294
      },
      "writtenOn": "2021-03-29T09:36:45Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "0983169e_e87cecae",
      "revId": "320136b8218c94e16dce74c3049f5ad481ab8457",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "524d92b3_5dcb8894",
        "filename": "src/preferences/input/InputTouchpadPrefView.cpp",
        "patchSetId": 1
      },
      "lineNbr": 105,
      "author": {
        "id": 1000012
      },
      "writtenOn": "2021-03-28T11:26:22Z",
      "side": 1,
      "message": "Again, don\u0027t think the new one is compliant to the style guide.",
      "revId": "320136b8218c94e16dce74c3049f5ad481ab8457",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb09aa91_c9e741f1",
        "filename": "src/preferences/input/InputTouchpadPrefView.cpp",
        "patchSetId": 1
      },
      "lineNbr": 105,
      "author": {
        "id": 1000294
      },
      "writtenOn": "2021-03-28T22:51:30Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "524d92b3_5dcb8894",
      "revId": "320136b8218c94e16dce74c3049f5ad481ab8457",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cc6cb629_d094b52b",
        "filename": "src/preferences/input/InputTouchpadPrefView.cpp",
        "patchSetId": 1
      },
      "lineNbr": 383,
      "author": {
        "id": 1000012
      },
      "writtenOn": "2021-03-28T11:26:22Z",
      "side": 1,
      "message": "I don\u0027t know whether this change is compliant with the style guide.",
      "revId": "320136b8218c94e16dce74c3049f5ad481ab8457",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9a8bd320_56243c10",
        "filename": "src/preferences/input/InputTouchpadPrefView.cpp",
        "patchSetId": 1
      },
      "lineNbr": 383,
      "author": {
        "id": 1000294
      },
      "writtenOn": "2021-03-28T22:51:30Z",
      "side": 1,
      "message": "May be disccusing it on mailing list might be helpful.",
      "parentUuid": "cc6cb629_d094b52b",
      "revId": "320136b8218c94e16dce74c3049f5ad481ab8457",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7d9865ee_ba06c18c",
        "filename": "src/preferences/input/InputTouchpadPrefView.cpp",
        "patchSetId": 1
      },
      "lineNbr": 421,
      "author": {
        "id": 1000012
      },
      "writtenOn": "2021-03-28T11:26:22Z",
      "side": 1,
      "message": "The changes on these lines are not compliant with the style guide, we generally use the indention based on the level of depth, not on a visual layout.",
      "revId": "320136b8218c94e16dce74c3049f5ad481ab8457",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d662bea9_c77851a1",
        "filename": "src/preferences/input/InputTouchpadPrefView.cpp",
        "patchSetId": 1
      },
      "lineNbr": 421,
      "author": {
        "id": 1000294
      },
      "writtenOn": "2021-03-29T09:36:45Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "7d9865ee_ba06c18c",
      "revId": "320136b8218c94e16dce74c3049f5ad481ab8457",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bd3071e6_3bcdac62",
        "filename": "src/preferences/input/InputTouchpadPrefView.cpp",
        "patchSetId": 1
      },
      "lineNbr": 422,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2021-03-28T11:21:20Z",
      "side": 1,
      "message": "this is incorrect, we never align things this way",
      "revId": "320136b8218c94e16dce74c3049f5ad481ab8457",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ca1daf9_c438953f",
        "filename": "src/preferences/input/InputTouchpadPrefView.cpp",
        "patchSetId": 1
      },
      "lineNbr": 422,
      "author": {
        "id": 1000294
      },
      "writtenOn": "2021-03-29T09:36:45Z",
      "side": 1,
      "message": "I think there is a setting that will fufill our requirement. I will look into it.",
      "parentUuid": "bd3071e6_3bcdac62",
      "revId": "320136b8218c94e16dce74c3049f5ad481ab8457",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b9b1cf6f_0eb383d6",
        "filename": "src/preferences/input/InputWindow.cpp",
        "patchSetId": 1
      },
      "lineNbr": 116,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2021-03-28T11:21:20Z",
      "side": 1,
      "message": "the braces for this else should not be removed",
      "revId": "320136b8218c94e16dce74c3049f5ad481ab8457",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d7c10f1f_2a1ff5de",
        "filename": "src/preferences/input/InputWindow.cpp",
        "patchSetId": 1
      },
      "lineNbr": 116,
      "author": {
        "id": 1000294
      },
      "writtenOn": "2021-03-28T22:51:30Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "b9b1cf6f_0eb383d6",
      "revId": "320136b8218c94e16dce74c3049f5ad481ab8457",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c842ad33_d7a8b8cd",
        "filename": "src/preferences/input/MouseSettings.cpp",
        "patchSetId": 1
      },
      "lineNbr": 134,
      "author": {
        "id": 1000012
      },
      "writtenOn": "2021-03-28T11:26:22Z",
      "side": 1,
      "message": "I don\u0027t think there is a style guide for this, but I prefer the previous style with these type of conditional pre-processor directives.",
      "revId": "320136b8218c94e16dce74c3049f5ad481ab8457",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e0ea07e7_4e25c6d2",
        "filename": "src/preferences/input/MouseSettings.cpp",
        "patchSetId": 1
      },
      "lineNbr": 134,
      "author": {
        "id": 1000294
      },
      "writtenOn": "2021-03-28T22:51:30Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "c842ad33_d7a8b8cd",
      "revId": "320136b8218c94e16dce74c3049f5ad481ab8457",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ded767e7_376df80f",
        "filename": "src/preferences/input/MouseSettings.cpp",
        "patchSetId": 1
      },
      "lineNbr": 274,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2021-03-28T11:21:20Z",
      "side": 1,
      "message": "the previous style was correct here: the comment is indented one level more because it refers to the line above.\n\nHowever, I don\u0027t know if clang-format can be made to understand that. Maybe it should simply accept that some comments are indented one level more than others.",
      "revId": "320136b8218c94e16dce74c3049f5ad481ab8457",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e29c73fd_06e51f90",
        "filename": "src/preferences/input/MouseSettings.cpp",
        "patchSetId": 1
      },
      "lineNbr": 274,
      "author": {
        "id": 1000294
      },
      "writtenOn": "2021-03-29T09:36:45Z",
      "side": 1,
      "message": "Can we somehow detect that the comment need to indent one level more or should we disable the indenting of comment by clang-format?",
      "parentUuid": "ded767e7_376df80f",
      "revId": "320136b8218c94e16dce74c3049f5ad481ab8457",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "812245bd_18e282ed",
        "filename": "src/preferences/input/MouseSettings.cpp",
        "patchSetId": 1
      },
      "lineNbr": 274,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2021-03-29T09:44:59Z",
      "side": 1,
      "message": "No, there is no way to detect this. I think the best we can do is have clang-format accept that sometimes comments are at the same level as the code, and sometimes they are one indentation level further, and keep them how they are.",
      "parentUuid": "e29c73fd_06e51f90",
      "revId": "320136b8218c94e16dce74c3049f5ad481ab8457",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "446076f1_b4164f1e",
        "filename": "src/preferences/input/MouseSettings.cpp",
        "patchSetId": 1
      },
      "lineNbr": 386,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2021-03-28T11:21:20Z",
      "side": 1,
      "message": "I don\u0027t understand why there is an extra space added here",
      "revId": "320136b8218c94e16dce74c3049f5ad481ab8457",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2edfe785_9438c99c",
        "filename": "src/preferences/input/MouseSettings.cpp",
        "patchSetId": 1
      },
      "lineNbr": 386,
      "author": {
        "id": 1000012
      },
      "writtenOn": "2021-03-28T11:26:22Z",
      "side": 1,
      "message": "Not sure why the style checker insists on adding a space before the ++ operator in this case.",
      "revId": "320136b8218c94e16dce74c3049f5ad481ab8457",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "977bcaf7_c59497fc",
        "filename": "src/preferences/input/MouseSettings.cpp",
        "patchSetId": 1
      },
      "lineNbr": 386,
      "author": {
        "id": 1000294
      },
      "writtenOn": "2021-03-28T22:51:30Z",
      "side": 1,
      "message": "I will try to find the cause of this and will solve it.",
      "range": {
        "startLine": 386,
        "startChar": 2,
        "endLine": 386,
        "endChar": 9
      },
      "revId": "320136b8218c94e16dce74c3049f5ad481ab8457",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0e7cc27b_c6f369a2",
        "filename": "src/preferences/input/MouseView.cpp",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2021-03-28T11:21:20Z",
      "side": 1,
      "message": "the previous version was better. But it is a special case here (there are several columns of values that should be kept aligned).\n\nMaybe the best option is to insert special comments around it to disable formatting here:\n\n// clang-format off\nstatic const int32 kButtonOffsets[][7] \u003d ...\n// clang-format on\n\nThese comments are detected by the formatting tool and will tell it to not touch this part of the code.",
      "revId": "320136b8218c94e16dce74c3049f5ad481ab8457",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a8546d0_dca7c427",
        "filename": "src/preferences/input/MouseView.cpp",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1000294
      },
      "writtenOn": "2021-03-28T22:51:30Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "0e7cc27b_c6f369a2",
      "revId": "320136b8218c94e16dce74c3049f5ad481ab8457",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b19dd623_9c328284",
        "filename": "src/preferences/input/MouseView.cpp",
        "patchSetId": 1
      },
      "lineNbr": 144,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2021-03-28T11:21:20Z",
      "side": 1,
      "message": "the previous format was correct here",
      "revId": "320136b8218c94e16dce74c3049f5ad481ab8457",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2272921b_cf8d29fd",
        "filename": "src/preferences/input/MouseView.cpp",
        "patchSetId": 1
      },
      "lineNbr": 144,
      "author": {
        "id": 1000294
      },
      "writtenOn": "2021-03-29T09:36:45Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "b19dd623_9c328284",
      "revId": "320136b8218c94e16dce74c3049f5ad481ab8457",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3fbbcce3_66154295",
        "filename": "src/preferences/input/MouseView.cpp",
        "patchSetId": 1
      },
      "lineNbr": 158,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2021-03-28T11:21:20Z",
      "side": 1,
      "message": "the {} are required by our coding style here",
      "revId": "320136b8218c94e16dce74c3049f5ad481ab8457",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2dd4d084_e0d111ce",
        "filename": "src/preferences/input/MouseView.cpp",
        "patchSetId": 1
      },
      "lineNbr": 158,
      "author": {
        "id": 1000294
      },
      "writtenOn": "2021-03-29T09:36:45Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "3fbbcce3_66154295",
      "revId": "320136b8218c94e16dce74c3049f5ad481ab8457",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    }
  ]
}