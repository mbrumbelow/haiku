{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ebca742c_6b404927",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000223
      },
      "writtenOn": "2025-01-05T16:37:19Z",
      "side": 1,
      "message": "[Not an expert on ICU or or the locale kit]\n\nDoes this bring anything over using, say:\n```\nBStringFormat formatter(\"{0, number, ::unit/celsius}\");\nformatter.format(buffer, value);\n```",
      "revId": "21dee8ef39ddc05a1e4dcc4861ffe9e11394eaed",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "637d411d_0c1ab6f8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2025-01-05T22:18:07Z",
      "side": 1,
      "message": "And besides that, if NumberFormat is deprecated and NumberFormatter is preferred instead, we should just rework BNumberFormat to use NumberFormatter instead. Glancing at the documentation, it looks like it kind of expects you will create a new NumberFormatter every time or almost every time it\u0027s used, so re-creating it on the fly shouldn\u0027t be too slow?",
      "parentUuid": "ebca742c_6b404927",
      "revId": "21dee8ef39ddc05a1e4dcc4861ffe9e11394eaed",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ca7808d_bb80bf38",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2025-01-06T18:05:45Z",
      "side": 1,
      "message": "\u003e Does this bring anything over using, say:\n\nI wasn\u0027t aware of this way of doing it, I think the result is the same.\n\nHowever, the BNumberFormat class may offer more control (on setting the number of decimals, etc) and saves parsing the format string. It may be useful if you need to format a lot of things with the same format, to not reparse the string each time.\n\n\u003e if NumberFormat is deprecated and NumberFormatter is preferred instead, we should just rework BNumberFormat to use NumberFormatter instead.\n\nYes, that can be done, but it will still need a way to set units (optionally) so I\u0027m not sure how the API would look like.\n\nIt seems NumberFormatter is not available for gcc 2 (the builder failed), so that\u0027s a problem, we need to make that API not supported there, and we can\u0027t migrate the existing class to it (unless we stop using it in any code that neesds to build with gcc2).",
      "parentUuid": "637d411d_0c1ab6f8",
      "revId": "21dee8ef39ddc05a1e4dcc4861ffe9e11394eaed",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bb0eb607_50e5aa71",
        "filename": "headers/os/locale/UnitFormat.h",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-01-04T17:23:10Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define U_ICU_NAMESPACE icu\n```",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 14,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "21dee8ef39ddc05a1e4dcc4861ffe9e11394eaed",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f2825c84_b92b4291",
        "filename": "headers/os/locale/UnitFormat.h",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-01-04T17:23:10Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nnamespace number {\nclass LocalizedNumberFormatter;\n```",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 19,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "21dee8ef39ddc05a1e4dcc4861ffe9e11394eaed",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "02a88516_9e82bde2",
        "filename": "headers/os/locale/UnitFormat.h",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-01-04T17:23:10Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (insert after):\n```c++\n} // namespace U_ICU_NAMESPACE\n```",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 20,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "21dee8ef39ddc05a1e4dcc4861ffe9e11394eaed",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7cc8e0f7_7f99721e",
        "filename": "headers/os/locale/UnitFormat.h",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-01-04T17:23:10Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nenum { B_CELSIUS_UNIT, B_FAHRENHEIT_UNIT };\n```",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 26,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "21dee8ef39ddc05a1e4dcc4861ffe9e11394eaed",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2514015b_3a5d1d93",
        "filename": "headers/os/locale/UnitFormat.h",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-01-04T17:23:10Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nclass BUnitFormat : public BFormat\n{\n```",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 29,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "21dee8ef39ddc05a1e4dcc4861ffe9e11394eaed",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "89bab1a9_81c4f8db",
        "filename": "src/kits/locale/UnitFormat.cpp",
        "patchSetId": 1
      },
      "lineNbr": 5,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-01-04T17:23:10Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (insert after):\n```c++\n#include \"UnitFormat.h\"\n```",
      "range": {
        "startLine": 5,
        "startChar": 0,
        "endLine": 5,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "21dee8ef39ddc05a1e4dcc4861ffe9e11394eaed",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2794d5ad_7685ffa1",
        "filename": "src/kits/locale/UnitFormat.cpp",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-01-04T17:23:10Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` is to remove this line/these lines.",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "21dee8ef39ddc05a1e4dcc4861ffe9e11394eaed",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fe4e5bfc_e3b07ac6",
        "filename": "src/kits/locale/UnitFormat.cpp",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-01-04T17:23:10Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` is to remove this line/these lines.",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 15,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "21dee8ef39ddc05a1e4dcc4861ffe9e11394eaed",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "32dd9022_558be86d",
        "filename": "src/kits/locale/UnitFormat.cpp",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-01-04T17:23:10Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t:\n\tBFormat(locale)\n```",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 20,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "21dee8ef39ddc05a1e4dcc4861ffe9e11394eaed",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7ace49bf_83566221",
        "filename": "src/kits/locale/UnitFormat.cpp",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-01-04T17:23:10Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tfFormatter \u003d new number::LocalizedNumberFormatter(\n\t\ticu::number::NumberFormatter::withLocale(fLanguage.Code()).unit(unit));\n```",
      "range": {
        "startLine": 36,
        "startChar": 0,
        "endLine": 36,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "21dee8ef39ddc05a1e4dcc4861ffe9e11394eaed",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3b4444b5_704e4a6a",
        "filename": "src/kits/locale/UnitFormat.cpp",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-01-04T17:23:10Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nBUnitFormat::BUnitFormat(int unitId, const BLanguage\u0026 language,\n\tconst BFormattingConventions\u0026 conventions)\n\t:\n\tBFormat(language, conventions)\n```",
      "range": {
        "startLine": 40,
        "startChar": 0,
        "endLine": 41,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "21dee8ef39ddc05a1e4dcc4861ffe9e11394eaed",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f76abb88_36df7dce",
        "filename": "src/kits/locale/UnitFormat.cpp",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-01-04T17:23:10Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tfFormatter \u003d new number::LocalizedNumberFormatter(\n\t\ticu::number::NumberFormatter::withLocale(fLanguage.Code()).unit(unit));\n```",
      "range": {
        "startLine": 57,
        "startChar": 0,
        "endLine": 57,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "21dee8ef39ddc05a1e4dcc4861ffe9e11394eaed",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}