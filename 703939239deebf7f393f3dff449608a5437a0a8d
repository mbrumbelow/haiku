{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "743fc8d4_5a8fe092",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2024-07-16T16:04:01Z",
      "side": 1,
      "message": "This looks like a very inefficient way to do this.\n\nInstead of adding a new filtering mechanism to PoseView, I think that BRefFilter should suffice here.\n\nAnd then instead of a list that\u0027s iterated over with string comparisons, a HashSet containing all the directory inodes should be used, and then the entry_ref\u0027s parent directory can just be tested against the HashSet of used directories.\n\nThe logic around adding/removing/saving/loading directory filters also looks like it could be consolidated/trimmed, but I didn\u0027t look at it too closely, nor the UI related changes.",
      "revId": "703939239deebf7f393f3dff449608a5437a0a8d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c56a9cae_e406a723",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000644
      },
      "writtenOn": "2024-07-16T16:27:20Z",
      "side": 1,
      "message": "It completely skipped my mind that I could use a hash table for this. Will definitely fix that. Keeping with that line of thought, should I instead use an unordered_set since it also offers an average lookup of O(1), since we just need to do an existence check?\n\nI\u0027ll also replace the filter part of QueryPoseView with a BRefFilter instead.",
      "parentUuid": "743fc8d4_5a8fe092",
      "revId": "703939239deebf7f393f3dff449608a5437a0a8d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "28bbcddf_51d70cf6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2024-07-16T16:29:35Z",
      "side": 1,
      "message": "Tracker still is compiled with GCC2 on 32-bit x86 so we can\u0027t use unordered_set here. The home-grown HashSet\u003c\u003e is what I\u0027d suggest you use, it should have similar behavior.",
      "parentUuid": "c56a9cae_e406a723",
      "revId": "703939239deebf7f393f3dff449608a5437a0a8d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7c0a5829_2a69f059",
        "filename": "src/kits/tracker/FindPanel.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1098,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-07-16T15:54:57Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` is to remove this line/these lines.",
      "range": {
        "startLine": 1098,
        "startChar": 0,
        "endLine": 1098,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "703939239deebf7f393f3dff449608a5437a0a8d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "251fd132_94312adb",
        "filename": "src/kits/tracker/FindPanel.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1109,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-07-16T15:54:57Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t// we must manage the memory of entry_refs stored in fDirectoryFilters manually!\n```",
      "range": {
        "startLine": 1109,
        "startChar": 0,
        "endLine": 1109,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "703939239deebf7f393f3dff449608a5437a0a8d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aebc4f11_cd56dcd3",
        "filename": "src/kits/tracker/FindPanel.h",
        "patchSetId": 4
      },
      "lineNbr": 40,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-07-16T15:54:57Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (insert after):\n```c++\n#include \u003cView.h\u003e\n```",
      "range": {
        "startLine": 40,
        "startChar": 0,
        "endLine": 40,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "703939239deebf7f393f3dff449608a5437a0a8d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "991f3f05_5e37edc8",
        "filename": "src/kits/tracker/FindPanel.h",
        "patchSetId": 4
      },
      "lineNbr": 42,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-07-16T15:54:57Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` is to remove this line/these lines.",
      "range": {
        "startLine": 42,
        "startChar": 0,
        "endLine": 42,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "703939239deebf7f393f3dff449608a5437a0a8d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "348b5ad7_a5f9e663",
        "filename": "src/kits/tracker/QueryPoseView.cpp",
        "patchSetId": 4
      },
      "lineNbr": 87,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-07-16T15:54:57Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t// we are managing memory manually!\n```",
      "range": {
        "startLine": 87,
        "startChar": 0,
        "endLine": 87,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "703939239deebf7f393f3dff449608a5437a0a8d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}