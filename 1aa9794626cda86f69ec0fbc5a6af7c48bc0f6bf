{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "de16719f_7f809716",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2024-06-01T02:21:30Z",
      "side": 1,
      "message": "axeld: If you have a few minutes to look through this (and preceding commits), I\u0027d appreciate it. And as regards reworking the evaluation to avoid deep recursion, I left a comment on https://dev.haiku-os.org/ticket/18692#comment:4 asking some questions...",
      "revId": "1aa9794626cda86f69ec0fbc5a6af7c48bc0f6bf",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ef963528_2b71f1b2",
        "filename": "headers/private/file_systems/QueryParser.h",
        "patchSetId": 1
      },
      "lineNbr": 692,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-06-01T04:39:09Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tQUERY_D(if (Term\u003cQueryPolicy\u003e::fOp \u003c\u003d OP_EQUATION\n\t\t|| Term\u003cQueryPolicy\u003e::fOp \u003e OP_LESS_THAN_OR_EQUAL) {\n```",
      "range": {
        "startLine": 692,
        "startChar": 0,
        "endLine": 692,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "1aa9794626cda86f69ec0fbc5a6af7c48bc0f6bf",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a1c78647_1aced9d9",
        "filename": "headers/private/file_systems/QueryParser.h",
        "patchSetId": 1
      },
      "lineNbr": 1187,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-06-01T04:39:09Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\tcurrentExpr \u003d new(std::nothrow) Stack\u003cExpressionNode\u003e;\n```",
      "range": {
        "startLine": 1187,
        "startChar": 0,
        "endLine": 1187,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "1aa9794626cda86f69ec0fbc5a6af7c48bc0f6bf",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "304440df_e314929e",
        "filename": "headers/private/file_systems/QueryParser.h",
        "patchSetId": 1
      },
      "lineNbr": 1187,
      "author": {
        "id": 1000052
      },
      "writtenOn": "2024-06-01T17:01:55Z",
      "side": 1,
      "message": "Small heads up! Youâ€™re forgetting to check if new fails to allocate memory here! :)",
      "range": {
        "startLine": 1187,
        "startChar": 4,
        "endLine": 1187,
        "endChar": 15
      },
      "revId": "1aa9794626cda86f69ec0fbc5a6af7c48bc0f6bf",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "deb957f2_9ee69e90",
        "filename": "headers/private/file_systems/QueryParser.h",
        "patchSetId": 1
      },
      "lineNbr": 1235,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-06-01T04:39:09Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\tEquation\u003cQueryPolicy\u003e* equation \u003d new(std::nothrow) Equation\u003cQueryPolicy\u003e(\u0026expr);\n```",
      "range": {
        "startLine": 1234,
        "startChar": 0,
        "endLine": 1235,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "1aa9794626cda86f69ec0fbc5a6af7c48bc0f6bf",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2c1598fb_6cd9bdb8",
        "filename": "headers/private/file_systems/QueryParser.h",
        "patchSetId": 1
      },
      "lineNbr": 1283,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-06-01T04:39:09Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\t\tTerm\u003cQueryPolicy\u003e* newTerm\n\t\t\t\t\t\u003d new(std::nothrow) Operator\u003cQueryPolicy\u003e(left-\u003eterm, left-\u003eop, right-\u003eterm);\n```",
      "range": {
        "startLine": 1282,
        "startChar": 0,
        "endLine": 1283,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "1aa9794626cda86f69ec0fbc5a6af7c48bc0f6bf",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}