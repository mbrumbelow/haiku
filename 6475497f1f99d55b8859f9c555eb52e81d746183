{
  "comments": [
    {
      "key": {
        "uuid": "fb8acbad_59a8f2f4",
        "filename": "src/add-ons/kernel/file_systems/ntfs/kernel_interface.cpp",
        "patchSetId": 4
      },
      "lineNbr": 56,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2021-11-06T13:10:36Z",
      "side": 1,
      "message": "just a side thing: I find these logs in the syslog a bit annoying, since they will always pop up for all partitions x all filesystems except when there is a match.\n\nI think it would be more useful to log when there is a match, and say nothing when there isn\u0027t.\n\nProbably so√±ething to be discussed in a separate change.",
      "revId": "6475497f1f99d55b8859f9c555eb52e81d746183",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e514a32e_3be1e86b",
        "filename": "src/add-ons/kernel/file_systems/ntfs/kernel_interface.cpp",
        "patchSetId": 4
      },
      "lineNbr": 56,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2021-11-06T17:43:12Z",
      "side": 1,
      "message": "Some of these logs could be removed, yes. But this one at least probably should be left in ... if a partition has less than 512 bytes, or we fail to read it, that would be strange.",
      "parentUuid": "fb8acbad_59a8f2f4",
      "revId": "6475497f1f99d55b8859f9c555eb52e81d746183",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f342bb33_3cbc131f",
        "filename": "src/add-ons/kernel/file_systems/ntfs/kernel_interface.cpp",
        "patchSetId": 4
      },
      "lineNbr": 56,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2021-11-06T19:17:58Z",
      "side": 1,
      "message": "Well that just leads to another annoyance I have with the way we do this: each filesystem reads a few blocks from the partition, and there is no caching, so this results in a lot of reads of each partition. Having some kind of cache here would probably speed up boot time especially if you have some slow storage connected (USB1 or CD-ROM for example). Our boot CD/DVD is probably the worst case: it\u0027s slow and it has multiple partitions, which will all be scanned by all filesystems and all partitioning systems, resulting in a few dozen small reads from the CD at roughly the same place. Let\u0027s hope DVD-ROM drives do some internal caching?\n\nAgain, something to fix sometime later...",
      "parentUuid": "e514a32e_3be1e86b",
      "revId": "6475497f1f99d55b8859f9c555eb52e81d746183",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "33d2743f_65a94d4c",
        "filename": "src/add-ons/kernel/file_systems/ntfs/kernel_interface.cpp",
        "patchSetId": 4
      },
      "lineNbr": 153,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2021-11-06T13:10:36Z",
      "side": 1,
      "message": "do we allow multiple declarations on the same line?",
      "revId": "6475497f1f99d55b8859f9c555eb52e81d746183",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "98bd8d77_02efd46e",
        "filename": "src/add-ons/kernel/file_systems/ntfs/kernel_interface.cpp",
        "patchSetId": 4
      },
      "lineNbr": 153,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2021-11-06T17:43:44Z",
      "side": 1,
      "message": "I think we do? At least I\u0027ve seen some before, I think...",
      "parentUuid": "33d2743f_65a94d4c",
      "revId": "6475497f1f99d55b8859f9c555eb52e81d746183",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "84e5adf8_68ee45e7",
        "filename": "src/add-ons/kernel/file_systems/ntfs/kernel_interface.cpp",
        "patchSetId": 4
      },
      "lineNbr": 314,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2021-11-06T13:10:36Z",
      "side": 1,
      "message": "it would make more sense to initialize *_numBytes to 0 here and increment it in the loop?",
      "revId": "6475497f1f99d55b8859f9c555eb52e81d746183",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5aee99dc_8378ebc2",
        "filename": "src/add-ons/kernel/file_systems/ntfs/kernel_interface.cpp",
        "patchSetId": 4
      },
      "lineNbr": 317,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2021-11-06T13:10:36Z",
      "side": 1,
      "message": "can ntfs_fuse_read return a positive value less than ioSize (partial read)? This does not look to be handled properly here.",
      "revId": "6475497f1f99d55b8859f9c555eb52e81d746183",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b00d52a7_58e3333b",
        "filename": "src/add-ons/kernel/file_systems/ntfs/kernel_interface.cpp",
        "patchSetId": 4
      },
      "lineNbr": 322,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2021-11-06T13:10:36Z",
      "side": 1,
      "message": "this should be *_numBytes otherwise you are corrupting memory, right?\n\nUsing \"size* const _numBytes\" in the function prototype would avoid this kind of error (the pointer will be const so attempting to make it point elsewhere will fail at compile time)",
      "revId": "6475497f1f99d55b8859f9c555eb52e81d746183",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5abf5c57_0c95ea32",
        "filename": "src/add-ons/kernel/file_systems/ntfs/kernel_interface.cpp",
        "patchSetId": 4
      },
      "lineNbr": 555,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2021-11-06T13:10:36Z",
      "side": 1,
      "message": "missing std::nothrow? It may not be needed when building with -fno-exceptions (?) but we may want to build this code in userspace for testing (with userlandfs or fs_shell) someday?",
      "revId": "6475497f1f99d55b8859f9c555eb52e81d746183",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    }
  ]
}