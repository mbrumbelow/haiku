{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "40d272e5_7a86d690",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2024-04-03T01:22:39Z",
      "side": 1,
      "message": "I don\u0027t think we should do this at all. Any games which want to do this, we should work around in the Game/Interface Kits (if they\u0027re BeOS games) or patch the games directly (if they\u0027re newer ports.)",
      "revId": "9c95d7b090f76db30d7a723bb5891d02e93fd83e",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9aabf132_2402e64d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2024-04-03T07:14:32Z",
      "side": 1,
      "message": "Handling the virtual width/height correctly should not be a problem. This is a feature of the app_server and should be supported by all drivers if it can be done.\n\nThe colorspace conversion may be going a bit too far, but I think it\u0027s fine, as long as it\u0027s not exposed as a supported video mode in screen preferences.\n\nThere is nothing we can do in the game kit, these just call videomode setting functions directly. Maybe we could move the colorspace conversion up in app_server.\n\nIdeally, of course, we should be writing more native modesetting drivers.",
      "parentUuid": "40d272e5_7a86d690",
      "revId": "9c95d7b090f76db30d7a723bb5891d02e93fd83e",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1d10dcdf_b8f934a2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2024-04-03T16:01:26Z",
      "side": 1,
      "message": "Most old BeOS games are going to try to set resolutions that modern widescreen monitors may not support at all, or at least poorly (like 800x600 or something.) Besides, on my computer, using only 800x600 of the framebuffer driver won\u0027t look good (it\u0027s a HiDPI monitor.) We need to handle this in app_server, at the absolute least.\n\nBut I don\u0027t see why we can\u0027t deal with this in the Game Kit. Why can\u0027t we just make a BBitmap with the appropriate size and color space, a BView to render it in every Vblank (or every X Hz if we don\u0027t have Vblank notifications), and present the BBitmap memory to the application as if it were video memory?",
      "parentUuid": "9aabf132_2402e64d",
      "revId": "9c95d7b090f76db30d7a723bb5891d02e93fd83e",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f0ba1494_a5d870c1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000651
      },
      "writtenOn": "2024-04-03T18:28:17Z",
      "side": 1,
      "message": "Why don\u0027t do that directly on the app_server instead of the Game Kit? If I\u0027m not mistaken that would allow to use it for setting (smaller) resolutions on the framebuffer driver. We could just do what I\u0027m doing here, but on the app_server + some integer scaling at least, so it looks better (bigger). We might even try to perform some form of fractional scaling, although this might not work well.\n\nThis would solve the issue of no videomode setting supported by the framebuffer driver and we could also reuse that as a \"fallback\" mechanism for applications (games, mainly) that attempt to set resolutions that the videocard or the monitor don\u0027t allow.",
      "parentUuid": "1d10dcdf_b8f934a2",
      "revId": "9c95d7b090f76db30d7a723bb5891d02e93fd83e",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fe84f274_4e6c4887",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2024-04-03T18:31:40Z",
      "side": 1,
      "message": "How often do modern games change screen resolutions? I don\u0027t think they ever do? This is mostly a \"feature\" used by old games from the days of CRTs. So we should probably treat it as the legacy compatibility thing it is, and not add more complexity to app_server but rather just add workarounds in the Game Kit.",
      "parentUuid": "f0ba1494_a5d870c1",
      "revId": "9c95d7b090f76db30d7a723bb5891d02e93fd83e",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3543aab0_7e322935",
        "filename": "src/add-ons/accelerants/framebuffer/accelerant.cpp",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-02T23:01:37Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n} color_spaces[] \u003d {{B_CMAP8, 1}, {B_RGB16, 2}, {B_RGB24, 3}, {B_RGB32, 4}};\n\nstatic const int32 color_spaces_count \u003d sizeof(color_spaces) / sizeof(color_spaces[0]);\n```",
      "range": {
        "startLine": 39,
        "startChar": 0,
        "endLine": 47,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "9c95d7b090f76db30d7a723bb5891d02e93fd83e",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7b1fdb30_0a592d71",
        "filename": "src/add-ons/accelerants/framebuffer/accelerant.cpp",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2024-04-03T08:49:47Z",
      "side": 1,
      "message": "There is a macro B_COUNT_OF() for this.",
      "revId": "9c95d7b090f76db30d7a723bb5891d02e93fd83e",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ce42bc4d_f2390eb2",
        "filename": "src/add-ons/accelerants/framebuffer/accelerant.cpp",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 1000651
      },
      "writtenOn": "2024-04-03T13:30:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7b1fdb30_0a592d71",
      "revId": "9c95d7b090f76db30d7a723bb5891d02e93fd83e",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "121d6460_867679f7",
        "filename": "src/add-ons/accelerants/framebuffer/accelerant.cpp",
        "patchSetId": 1
      },
      "lineNbr": 87,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-02T23:01:37Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tfor (i \u003d 0; i \u003c color_spaces_count; i++) {\n```",
      "range": {
        "startLine": 87,
        "startChar": 0,
        "endLine": 87,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "9c95d7b090f76db30d7a723bb5891d02e93fd83e",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "299e5180_e0d101fc",
        "filename": "src/add-ons/accelerants/framebuffer/accelerant.cpp",
        "patchSetId": 1
      },
      "lineNbr": 89,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-02T23:01:37Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (insert after):\n```c++\n\t}\n```",
      "range": {
        "startLine": 89,
        "startChar": 0,
        "endLine": 89,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "9c95d7b090f76db30d7a723bb5891d02e93fd83e",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "27a48c9f_566b2847",
        "filename": "src/add-ons/accelerants/framebuffer/accelerant.h",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-02T23:01:37Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tdisplay_mode current_emulated_mode;\n\tuint32 bytes_per_pixel;\n```",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 27,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "9c95d7b090f76db30d7a723bb5891d02e93fd83e",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4d27a947_26e09cd9",
        "filename": "src/add-ons/accelerants/framebuffer/mode.cpp",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-02T23:01:37Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\treturn (mode !\u003d NULL)\n\t\t\u0026\u0026 (mode-\u003evirtual_width \u003c\u003d max_width \u0026\u0026 mode-\u003evirtual_height \u003c\u003d max_height);\n```",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 47,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "9c95d7b090f76db30d7a723bb5891d02e93fd83e",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4740fb56_7d58005e",
        "filename": "src/add-ons/accelerants/framebuffer/mode.cpp",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2024-04-03T08:49:47Z",
      "side": 1,
      "message": "correct would be:\nreturn mode !\u003d NULL \u0026\u0026 mode-\u003evirtual_width \u003c\u003d max_width \u0026\u0026 mode-\u003evirtual_height \u003c\u003d max_height;",
      "parentUuid": "4d27a947_26e09cd9",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 47,
        "endChar": 0
      },
      "revId": "9c95d7b090f76db30d7a723bb5891d02e93fd83e",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ac2d5d28_30d9b919",
        "filename": "src/add-ons/accelerants/framebuffer/mode.cpp",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 1000651
      },
      "writtenOn": "2024-04-03T13:30:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4740fb56_7d58005e",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 47,
        "endChar": 0
      },
      "revId": "9c95d7b090f76db30d7a723bb5891d02e93fd83e",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "096cd202_aff08661",
        "filename": "src/add-ons/accelerants/framebuffer/mode.cpp",
        "patchSetId": 1
      },
      "lineNbr": 113,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-02T23:01:37Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tdisplay_mode* max_mode \u003d \u0026gInfo-\u003eshared_info-\u003ecurrent_mode;\n\tuint32 frame_buffer_size\n\t\t\u003d max_mode-\u003evirtual_width * max_mode-\u003evirtual_height * gInfo-\u003ebytes_per_pixel;\n```",
      "range": {
        "startLine": 111,
        "startChar": 0,
        "endLine": 113,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "9c95d7b090f76db30d7a723bb5891d02e93fd83e",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9b385932_488be797",
        "filename": "src/add-ons/accelerants/framebuffer/mode.cpp",
        "patchSetId": 1
      },
      "lineNbr": 153,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-02T23:01:37Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tconfig-\u003ebytes_per_row \u003d gInfo-\u003ecurrent_emulated_mode.virtual_width * gInfo-\u003ebytes_per_pixel;\n```",
      "range": {
        "startLine": 152,
        "startChar": 0,
        "endLine": 153,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "9c95d7b090f76db30d7a723bb5891d02e93fd83e",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}