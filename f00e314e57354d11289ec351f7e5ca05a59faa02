{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "2463e4ec_e0762f12",
        "filename": "src/add-ons/kernel/file_systems/fat/kernel_interface.cpp",
        "patchSetId": 1
      },
      "lineNbr": 3269,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2024-07-29T17:13:31Z",
      "side": 0,
      "message": "How do we know disk images are 0x200 bytes per sector?",
      "revId": "f00e314e57354d11289ec351f7e5ca05a59faa02",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ccf25d78_2a028dec",
        "filename": "src/add-ons/kernel/file_systems/fat/kernel_interface.cpp",
        "patchSetId": 1
      },
      "lineNbr": 3269,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2024-07-30T09:24:50Z",
      "side": 0,
      "message": "FAT is always 512 bytes per sector unless you have a huge (several terabytes) volume where that would not fit. These values are not supported by the driver, so assuming 512 bytes per sector is fine.\n\nLarger volumes really should use another filesystem, even if in theory it is possible to extend the sector size.",
      "parentUuid": "2463e4ec_e0762f12",
      "revId": "f00e314e57354d11289ec351f7e5ca05a59faa02",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c31ea0ca_3e6407b9",
        "filename": "src/add-ons/kernel/file_systems/fat/kernel_interface.cpp",
        "patchSetId": 1
      },
      "lineNbr": 3269,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2024-07-30T13:21:50Z",
      "side": 0,
      "message": "The values are supported by the underlying FreeBSD driver and are just disabled here as a precaution for the moment.",
      "parentUuid": "ccf25d78_2a028dec",
      "revId": "f00e314e57354d11289ec351f7e5ca05a59faa02",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "57eb5026_f7b1a463",
        "filename": "src/add-ons/kernel/file_systems/fat/kernel_interface.cpp",
        "patchSetId": 1
      },
      "lineNbr": 3269,
      "author": {
        "id": 1000366
      },
      "writtenOn": "2024-07-30T14:38:15Z",
      "side": 0,
      "message": "I went ahead and added code to check the sector size of images just in case.  I also enabled read-only access for sector sizes other than 512.\nSome basic testing of mounting volumes with larger sector sizes uncovered bugs in fat_volume_init() and check_fat() which I also fixed.",
      "parentUuid": "c31ea0ca_3e6407b9",
      "revId": "f00e314e57354d11289ec351f7e5ca05a59faa02",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b3676455_3306d245",
        "filename": "src/add-ons/kernel/file_systems/fat/kernel_interface.cpp",
        "patchSetId": 1
      },
      "lineNbr": 3269,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2024-07-30T15:59:06Z",
      "side": 0,
      "message": "I\u0027m confused. Do we actually need this code for disk images specifically? Won\u0027t the boot sector be read for disk images also, in the common code...?",
      "parentUuid": "57eb5026_f7b1a463",
      "revId": "f00e314e57354d11289ec351f7e5ca05a59faa02",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3bc9c725_888fb765",
        "filename": "src/add-ons/kernel/file_systems/fat/kernel_interface.cpp",
        "patchSetId": 1
      },
      "lineNbr": 3298,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2024-07-29T17:13:31Z",
      "side": 0,
      "message": "Why not allow these to be mounted in read-only mode too?",
      "revId": "f00e314e57354d11289ec351f7e5ca05a59faa02",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}