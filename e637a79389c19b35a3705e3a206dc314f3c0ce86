{
  "comments": [
    {
      "key": {
        "uuid": "968d22ee_abe89e36",
        "filename": "src/bin/unzip/beos.c",
        "patchSetId": 4
      },
      "lineNbr": 731,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2019-02-13T08:18:31Z",
      "side": 1,
      "message": "Beware, the whole file is indented with spaces!\nWe should outsource this and use the version from info-zip upstream, anyways.\n\nIt is strange that you do a free(tmproot) in a check that verifies tmproot \u003d\u003d NULL",
      "revId": "e637a79389c19b35a3705e3a206dc314f3c0ce86",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b47cb4d0_49d5697d",
        "filename": "src/bin/unzip/beos.c",
        "patchSetId": 4
      },
      "lineNbr": 731,
      "author": {
        "id": 1000091
      },
      "writtenOn": "2019-02-13T12:17:20Z",
      "side": 1,
      "message": "Removed from this set.",
      "parentUuid": "968d22ee_abe89e36",
      "revId": "e637a79389c19b35a3705e3a206dc314f3c0ce86",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d5376b2a_06ab4b1c",
        "filename": "src/servers/net/Services.cpp",
        "patchSetId": 4
      },
      "lineNbr": 459,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2019-02-13T08:18:31Z",
      "side": 1,
      "message": "if execv succeeds, this code will never run...",
      "revId": "e637a79389c19b35a3705e3a206dc314f3c0ce86",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1842a9ce_470547df",
        "filename": "src/servers/net/Services.cpp",
        "patchSetId": 4
      },
      "lineNbr": 459,
      "author": {
        "id": 1000091
      },
      "writtenOn": "2019-02-13T12:17:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d5376b2a_06ab4b1c",
      "revId": "e637a79389c19b35a3705e3a206dc314f3c0ce86",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2f4917b9_bc4be36b",
        "filename": "src/system/boot/platform/efi/devices.cpp",
        "patchSetId": 4
      },
      "lineNbr": 319,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2019-02-13T08:18:31Z",
      "side": 1,
      "message": "If you detach it, it will not delete the savedDevicePath. You do this only when yhe pointer is stored elsewhere. That may be the case here, but please do this very close to where it happens (before line 316?) in that case.",
      "revId": "e637a79389c19b35a3705e3a206dc314f3c0ce86",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "48f34384_d94115c7",
        "filename": "src/system/boot/platform/efi/devices.cpp",
        "patchSetId": 4
      },
      "lineNbr": 319,
      "author": {
        "id": 1000091
      },
      "writtenOn": "2019-02-13T12:17:20Z",
      "side": 1,
      "message": "Would it be better to return to adding free() to each error case as in patch set one?",
      "parentUuid": "2f4917b9_bc4be36b",
      "revId": "e637a79389c19b35a3705e3a206dc314f3c0ce86",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "96a4fa25_4869e630",
        "filename": "src/system/boot/platform/efi/devices.cpp",
        "patchSetId": 4
      },
      "lineNbr": 319,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2019-02-13T12:40:31Z",
      "side": 1,
      "message": "No, auto-deleter is better, we have one single place where to be careful with it (the point where we hand the pointer over to something else and must detach it). This is much better than having to be careful about calling free everytime we exit the function.\n\nThe point is just making it obvious why the detach needs to happen here (I guess it is because add_device_path now owns the pointer?).",
      "parentUuid": "48f34384_d94115c7",
      "revId": "e637a79389c19b35a3705e3a206dc314f3c0ce86",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1201a4f6_9ca5c111",
        "filename": "src/system/boot/platform/efi/devices.cpp",
        "patchSetId": 4
      },
      "lineNbr": 319,
      "author": {
        "id": 1000091
      },
      "writtenOn": "2019-02-13T15:28:50Z",
      "side": 1,
      "message": "\u003e The point is just making it obvious why the detach needs to happen here (I guess it is because add_device_path now owns the pointer?).\n\nOK, now located directly after the add_device_path",
      "parentUuid": "96a4fa25_4869e630",
      "revId": "e637a79389c19b35a3705e3a206dc314f3c0ce86",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "92149236_faee1f9f",
        "filename": "src/system/boot/platform/efi/devices.cpp",
        "patchSetId": 4
      },
      "lineNbr": 319,
      "author": {
        "id": 1000110
      },
      "writtenOn": "2019-02-15T12:12:01Z",
      "side": 1,
      "message": "add_device_path creates a copy of the parameter savedDevicePath.",
      "parentUuid": "1201a4f6_9ca5c111",
      "revId": "e637a79389c19b35a3705e3a206dc314f3c0ce86",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    }
  ]
}