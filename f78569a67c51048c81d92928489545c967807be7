{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b11d8e3b_2011a4c0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000372
      },
      "writtenOn": "2022-08-13T12:32:48Z",
      "side": 1,
      "message": "Just one more issue, Tracker doesn\u0027t shows any entries.\n\nI did see if there is any function remaining to implement but didn\u0027t find any.\nfs_info and vnode_stat are implemented correctly.\n\nAnyone who knows what could be issue please help.\nThanks",
      "revId": "f78569a67c51048c81d92928489545c967807be7",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b29bb6bb_3f73d4e2",
        "filename": "src/add-ons/kernel/file_systems/xfs/xfs.h",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2022-08-28T17:52:04Z",
      "side": 1,
      "message": "I\u0027m not very convinced by this, I think it\u0027s better to use offsetof and keep the compiler warning for now until we can find a better solution.",
      "revId": "f78569a67c51048c81d92928489545c967807be7",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c07564aa_253efaef",
        "filename": "src/add-ons/kernel/file_systems/xfs/xfs.h",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 1000372
      },
      "writtenOn": "2022-08-29T15:36:08Z",
      "side": 1,
      "message": "Though can we really find something better? \nFor example even though if we will make normal class data and methods as public there is still going to be virtual class left, we simply can\u0027t use offsetof() without warning on virtual class.\n\nNow virtual methods currently helps us to handle V4 \u0026 V5 headers using same code, so it\u0027s not good idea to redesign entire API just for this warning.\n\nWe can disable Werror but the clean build log with no warnings looks so elegant, or maybe that\u0027s just me :P",
      "parentUuid": "b29bb6bb_3f73d4e2",
      "revId": "f78569a67c51048c81d92928489545c967807be7",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd4cf92a_b854c5f1",
        "filename": "src/add-ons/kernel/file_systems/xfs/xfs.h",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2022-09-05T18:24:54Z",
      "side": 1,
      "message": "Usually we can convert just one warning to not trigger Werror.\n\nSomething like this in compiler flags: -Werror -Wno-error\u003dxxx (where xxx is the name of the option that enables or disables the specific warning).\n\nThis way we still get the warning, which is correct (using offsetof on classes with virtual methods is not safe, and creating your own implementation of offsetof is still not safe).\n\nI agree building with no warnings at all is better, but this is just hiding the problem, not actually fixing it. And that\u0027s dangerous because if we change something (compiler version, optimization options, ...), the code can break in hard to debug ways when the warning is silenced/hidden this way.",
      "parentUuid": "c07564aa_253efaef",
      "revId": "f78569a67c51048c81d92928489545c967807be7",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}