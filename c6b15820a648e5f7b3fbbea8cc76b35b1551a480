{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "7ab9eecd_86b7cf39",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2024-12-06T19:25:07Z",
      "side": 1,
      "message": "This works fine for BList and classes that use it directly (BStringList), but unfortunately this breaks `_PointerList_` and thus BObjectList: because the compiler actually was using the padding to store the `owning` member of `_PointerList_`, and so this causes its size to expand by 8 bytes, despite BList\u0027s size not increasing at all.",
      "revId": "c6b15820a648e5f7b3fbbea8cc76b35b1551a480",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1280b337_703d6cdf",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2024-12-06T19:28:09Z",
      "side": 1,
      "message": "There are a few workarounds possible here, like removing another one of the uint32s and storing it as fObjectList[-1] or something like that, but all of them seem rather annoying... maybe it\u0027s just best to enable lazy allocation and not try to use the one-item trick at all.",
      "parentUuid": "7ab9eecd_86b7cf39",
      "revId": "c6b15820a648e5f7b3fbbea8cc76b35b1551a480",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4fc57d76_6d057762",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2024-12-06T19:39:53Z",
      "side": 1,
      "message": "Seems I got the logging wrong somehow (or rather, the ABI break may be related too) and the count of lists that never allocate anything under lazy allocations alone (no inline trick) with \"pkgman search\" is actually over 200,000. So that\u0027s a pretty good benefit by itself.",
      "parentUuid": "1280b337_703d6cdf",
      "revId": "c6b15820a648e5f7b3fbbea8cc76b35b1551a480",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7b424829_2e880f03",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2024-12-06T19:52:19Z",
      "side": 1,
      "message": "Submitted just https://review.haiku-os.org/c/haiku/+/8630/1 for that.",
      "parentUuid": "4fc57d76_6d057762",
      "revId": "c6b15820a648e5f7b3fbbea8cc76b35b1551a480",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4ce3d2d6_a72a36ae",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2025-01-03T17:06:03Z",
      "side": 1,
      "message": "Comment removed by: waddlesplash; Reason: dupe",
      "revId": "c6b15820a648e5f7b3fbbea8cc76b35b1551a480",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "af6daf28_9655c4e0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2025-01-03T17:06:03Z",
      "side": 1,
      "message": "I added a note to https://dev.haiku-os.org/wiki/FutureHaiku/APIChangesOnCompatibilityDrop. I think we can abandon this otherwise.",
      "parentUuid": "7b424829_2e880f03",
      "revId": "c6b15820a648e5f7b3fbbea8cc76b35b1551a480",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "30904051_2588c2be",
        "filename": "src/kits/support/List.cpp",
        "patchSetId": 1
      },
      "lineNbr": 496,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-12-06T19:28:43Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t} else if (targetSize \u003c\u003d fResizeThreshold) {\n```",
      "range": {
        "startLine": 496,
        "startChar": 0,
        "endLine": 496,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "c6b15820a648e5f7b3fbbea8cc76b35b1551a480",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b09eaa27_ce48c38e",
        "filename": "src/kits/support/List.cpp",
        "patchSetId": 1
      },
      "lineNbr": 497,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-12-06T19:28:43Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (insert after):\n```c++\n\t\t}\n```",
      "range": {
        "startLine": 497,
        "startChar": 0,
        "endLine": 497,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "c6b15820a648e5f7b3fbbea8cc76b35b1551a480",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6588f636_20c13657",
        "filename": "src/kits/support/List.cpp",
        "patchSetId": 1
      },
      "lineNbr": 524,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-12-06T19:28:43Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t} else {\n```",
      "range": {
        "startLine": 524,
        "startChar": 0,
        "endLine": 524,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "c6b15820a648e5f7b3fbbea8cc76b35b1551a480",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a94528de_edcd1374",
        "filename": "src/kits/support/List.cpp",
        "patchSetId": 1
      },
      "lineNbr": 529,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-12-06T19:28:43Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t}\n\t}\n\n\treturn result;\n}\n```",
      "range": {
        "startLine": 526,
        "startChar": 0,
        "endLine": 529,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "c6b15820a648e5f7b3fbbea8cc76b35b1551a480",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Build-Check",
        "description": {
          "value": "Builds OK on all architectures"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "-label:Verified\u003d-1"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-label:Verified=-1"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Verified=-1"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "c6b15820a648e5f7b3fbbea8cc76b35b1551a480",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}