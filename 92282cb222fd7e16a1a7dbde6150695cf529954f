{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "03bf7b71_fd5dfb6b",
        "filename": "headers/posix/netinet/ip_icmp.h",
        "patchSetId": 4
      },
      "lineNbr": 38,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2024-02-13T03:50:57Z",
      "side": 1,
      "message": "The very next structure in the file is this same thing but with different names. So this is not needed.",
      "revId": "92282cb222fd7e16a1a7dbde6150695cf529954f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5796b899_08187997",
        "filename": "headers/posix/netinet/ip_icmp.h",
        "patchSetId": 4
      },
      "lineNbr": 38,
      "author": {
        "id": 1000610
      },
      "writtenOn": "2024-02-13T14:34:17Z",
      "side": 1,
      "message": "@waddlesplash I would like to differ . The size of icmp_header is fixed and of 8 bytes while the next one defines a structure of 20 bytes (if I calculated correctly) . One cannot be used in place of the other . Also , this is precisely the reason why the ip payload in icmp is not getting parsed properly .",
      "parentUuid": "03bf7b71_fd5dfb6b",
      "revId": "92282cb222fd7e16a1a7dbde6150695cf529954f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1c316e8e_8fe5c448",
        "filename": "headers/posix/netinet/ip_icmp.h",
        "patchSetId": 4
      },
      "lineNbr": 40,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-02-12T12:46:13Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tuint8_t code;\n```",
      "range": {
        "startLine": 40,
        "startChar": 0,
        "endLine": 40,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "92282cb222fd7e16a1a7dbde6150695cf529954f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ef1e4e8c_c139f0b3",
        "filename": "src/bin/network/ping/ping.c",
        "patchSetId": 4
      },
      "lineNbr": 727,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-02-12T12:46:13Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\tip2 \u003d (struct ip*)(buf + hlen + sizeof(struct icmp_header));\n```",
      "range": {
        "startLine": 727,
        "startChar": 0,
        "endLine": 727,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "92282cb222fd7e16a1a7dbde6150695cf529954f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4995e5bd_376f53fc",
        "filename": "src/bin/network/ping/ping.c",
        "patchSetId": 4
      },
      "lineNbr": 730,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-02-12T12:46:13Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\t\u0026\u0026 check_icmph((struct ip*)((char*)icp + sizeof(struct icmp_header))) !\u003d 1) {\n```",
      "range": {
        "startLine": 730,
        "startChar": 0,
        "endLine": 730,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "92282cb222fd7e16a1a7dbde6150695cf529954f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0e208f34_e128e005",
        "filename": "src/bin/network/ping/ping.c",
        "patchSetId": 4
      },
      "lineNbr": 1276,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-02-12T12:46:13Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\ticmph \u003d (struct icmp*)((char*)iph + (4 * iph-\u003eip_hl));\n```",
      "range": {
        "startLine": 1276,
        "startChar": 0,
        "endLine": 1276,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "92282cb222fd7e16a1a7dbde6150695cf529954f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}