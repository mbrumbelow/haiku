{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "debb004c_05ac4e67",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2024-04-02T11:40:41Z",
      "side": 1,
      "message": "Is this fixing a specific ticket? If so, it should be mentionned in the commit message.\n\nI think we have one for changing the tab color, but I\u0027m not sure about the border colors?",
      "revId": "5c1b98134d83480df8216ba236d991d030404cfd",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f4f20904_41b3db8d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1000659
      },
      "writtenOn": "2024-04-02T18:15:47Z",
      "side": 1,
      "message": "I was working on this for: https://dev.haiku-os.org/ticket/4089 so I\u0027ll add that to the commit message now. I took a look at what it would look like if the tab was coloured too but found it looked a bit off so I held off on writing that in.\n\nConcerning the implementation cleanness, I wanted some feedback about where the best home for `fBorderColor` would be. I\u0027m not sure if we need to declare and extra member for it in the `Decorator` class. Would it be better to place it on `TabDecorator` since that\u0027s where a bunch of related members live? Or on `DefaultDecorator` since the purpose of the member conceptually is to override colours on the `TabDecorator` when it is defined? \n\nSorry for any lack of clarity.",
      "parentUuid": "debb004c_05ac4e67",
      "revId": "5c1b98134d83480df8216ba236d991d030404cfd",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7976f7a0_961955f7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2024-04-02T11:34:54Z",
      "side": 1,
      "message": "Hello,\n\nIt seems your changes are not compiling with gcc2, could you have a look? You can find the build log in the bot comment.\n\nThere are also some code formatting problems, I have opened the relevent comment threads from the review bot.",
      "revId": "5c1b98134d83480df8216ba236d991d030404cfd",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a7d9a877_9416ff41",
        "filename": "src/servers/app/EventDispatcher.cpp",
        "patchSetId": 1
      },
      "lineNbr": 754,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2024-04-02T11:40:41Z",
      "side": 1,
      "message": "Is it possible to detect if the message was handled by its target, and change the color of the window border only if it was not? This may be enough to make this work well (I think?).\n\nAlso, should there be an API for applications to be able to set the color themselves? Or do we want to keep this available only for the user?",
      "revId": "5c1b98134d83480df8216ba236d991d030404cfd",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "53a13b53_939a8ffd",
        "filename": "src/servers/app/EventDispatcher.cpp",
        "patchSetId": 1
      },
      "lineNbr": 754,
      "author": {
        "id": 1000659
      },
      "writtenOn": "2024-04-02T18:15:47Z",
      "side": 1,
      "message": "With respect to one: I had considered that but wasn\u0027t sure if it made more sense to do the change only when the drop point is on the window tab or to do handling if the message was dropped. \n\nFor two: I hadn\u0027t even thought about that. My initial instinct is to say yes that makes sense, my rationale being: 1) that the control over style is nice and 2) This could be used as a status indicator to grab the user\u0027s attention (e.g. if a background task failed an App could choose to switch its border colour to red).",
      "parentUuid": "a7d9a877_9416ff41",
      "revId": "5c1b98134d83480df8216ba236d991d030404cfd",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "74f4f3b5_c0e6f857",
        "filename": "src/servers/app/EventDispatcher.cpp",
        "patchSetId": 1
      },
      "lineNbr": 754,
      "author": {
        "id": 1000659
      },
      "writtenOn": "2024-04-02T21:12:43Z",
      "side": 1,
      "message": "Actually, I think I\u0027ll go with detecting the drop on the window tab. Then the user faces less ambiguity with respect to wether or not a window will pick up on their drop because some view happens to be handling the message instead.",
      "parentUuid": "53a13b53_939a8ffd",
      "revId": "5c1b98134d83480df8216ba236d991d030404cfd",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6c40dfd3_bb0efb11",
        "filename": "src/servers/app/EventDispatcher.cpp",
        "patchSetId": 1
      },
      "lineNbr": 754,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2024-04-03T11:04:18Z",
      "side": 1,
      "message": "Yes, if you can make it work by dropping the color on the tab I think that\u0027s better.\n\nRegarding the API, I guess I can detail a bit more why I\u0027m asking this question: I can think of some use cases for this, such as visually grouping together a set of related windows (internet explorer 6 did that with its internal tabs and I found it very convenient there, sadly this was not adopted a lot in other web browsers).\n\nBut on the other hand, there is a risk of \"misuse\", such as some company deciding to have their window border match their software branding, ignoring completely the user preferences. Which would be even more annoying in the current implementation because it will be done even for the inactive window border, so a window can fake being active when it is not, for example.\n\nYou mention trying to grab the user attention, I think this would better be done with a dedicated API, then we can change on the OS side what the high level command \"this window needs the user\u0027s attention\" what exactly that should do. Whereas if we hardcode in all apps the idea that \"grabbing the user attention\" is implemented by \"setting the border (or tab) color to red\", we have to live with that way of doing it forever.",
      "parentUuid": "74f4f3b5_c0e6f857",
      "revId": "5c1b98134d83480df8216ba236d991d030404cfd",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6510bcaa_c215aa7a",
        "filename": "src/servers/app/EventDispatcher.cpp",
        "patchSetId": 1
      },
      "lineNbr": 754,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2024-04-03T16:04:09Z",
      "side": 1,
      "message": "\u003e But on the other hand, there is a risk of \"misuse\", such as some company deciding to have their window border match their software branding, ignoring completely the user preferences.\n\nIMHO we should not have an API for this. Applications shouldn\u0027t use this feature, it should be left as user-only.\n\n\u003e would be even more annoying in the current implementation because it will be done even for the inactive window border, so a window can fake being active when it is not, for example.\n\nWait, this changes the color even when the window is inactive? That seems odd to me. I would just expect this to set the \"Window tab\" color to something other than yellow.\n\n\u003e What to do for users (including me) that prefer window tab and border to have the same color\n\nI think we should ask the opposite, what to do for users who don\u0027t prefer them to be the same (like me)? That should be simple enough, though: can\u0027t the decorator just check if the window border and tab color are the same, and if so, set/override both; if not, just the tab then?",
      "parentUuid": "6c40dfd3_bb0efb11",
      "revId": "5c1b98134d83480df8216ba236d991d030404cfd",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8efbb726_34730356",
        "filename": "src/servers/app/decorator/Decorator.cpp",
        "patchSetId": 1
      },
      "lineNbr": 77,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-02T03:38:34Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nDecorator::Decorator(DesktopSettings\u0026 settings, BRect frame, Desktop* desktop)\n```",
      "range": {
        "startLine": 76,
        "startChar": 0,
        "endLine": 77,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "5c1b98134d83480df8216ba236d991d030404cfd",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8eae7c2f_f95b77fd",
        "filename": "src/servers/app/decorator/Decorator.cpp",
        "patchSetId": 1
      },
      "lineNbr": 77,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2024-04-02T11:34:54Z",
      "side": 1,
      "message": "this can all fit in one line",
      "parentUuid": "8efbb726_34730356",
      "range": {
        "startLine": 76,
        "startChar": 0,
        "endLine": 77,
        "endChar": 0
      },
      "revId": "5c1b98134d83480df8216ba236d991d030404cfd",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "92ab937b_ecbf333b",
        "filename": "src/servers/app/decorator/Decorator.cpp",
        "patchSetId": 1
      },
      "lineNbr": 966,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-02T03:38:34Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (insert after):\n```c++\n\n```",
      "range": {
        "startLine": 966,
        "startChar": 0,
        "endLine": 966,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "5c1b98134d83480df8216ba236d991d030404cfd",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6dd09190_95f57823",
        "filename": "src/servers/app/decorator/Decorator.cpp",
        "patchSetId": 1
      },
      "lineNbr": 966,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2024-04-02T11:34:54Z",
      "side": 1,
      "message": "there should be two blank lines between functions",
      "parentUuid": "92ab937b_ecbf333b",
      "range": {
        "startLine": 966,
        "startChar": 0,
        "endLine": 966,
        "endChar": 0
      },
      "revId": "5c1b98134d83480df8216ba236d991d030404cfd",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7375ed3a_ab622067",
        "filename": "src/servers/app/decorator/Decorator.cpp",
        "patchSetId": 1
      },
      "lineNbr": 973,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-02T03:38:34Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (insert after):\n```c++\n\n```",
      "range": {
        "startLine": 973,
        "startChar": 0,
        "endLine": 973,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "5c1b98134d83480df8216ba236d991d030404cfd",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9fcfe439_0c3ebffc",
        "filename": "src/servers/app/decorator/Decorator.cpp",
        "patchSetId": 1
      },
      "lineNbr": 973,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2024-04-02T11:34:54Z",
      "side": 1,
      "message": "two blank lines between functions",
      "parentUuid": "7375ed3a_ab622067",
      "range": {
        "startLine": 973,
        "startChar": 0,
        "endLine": 973,
        "endChar": 0
      },
      "revId": "5c1b98134d83480df8216ba236d991d030404cfd",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "15e88757_a2a73ba3",
        "filename": "src/servers/app/decorator/DefaultDecorator.cpp",
        "patchSetId": 1
      },
      "lineNbr": 172,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-02T03:38:34Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\t\t\t_colors[i].red \u003d std::max((int)_colors[i].red - 80, 0);\n\t\t\t\t\t_colors[i].green \u003d std::max((int)_colors[i].green - 80, 0);\n```",
      "range": {
        "startLine": 171,
        "startChar": 0,
        "endLine": 172,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "5c1b98134d83480df8216ba236d991d030404cfd",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8c850d41_3e93e26f",
        "filename": "src/servers/app/decorator/DefaultDecorator.cpp",
        "patchSetId": 1
      },
      "lineNbr": 172,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2024-04-02T11:34:54Z",
      "side": 1,
      "message": "no space between the cast and the variable being casted",
      "parentUuid": "15e88757_a2a73ba3",
      "range": {
        "startLine": 171,
        "startChar": 0,
        "endLine": 172,
        "endChar": 0
      },
      "revId": "5c1b98134d83480df8216ba236d991d030404cfd",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}