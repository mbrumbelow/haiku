{
  "comments": [
    {
      "key": {
        "uuid": "6def44bc_11312fa8",
        "filename": "build/jam/ArchitectureRules",
        "patchSetId": 1
      },
      "lineNbr": 617,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2021-07-30T18:43:53Z",
      "side": 1,
      "message": "Wouldn\u0027t it make more sense just to add these flags to the KERNEL_CC flags, etc. across the board? (This would also include some drivers, but as we have some functionality in drivers that is often found within many kernels, perhaps that makes more sense anyway.)",
      "revId": "5010d9bfcb39985ecb4bd07ce71c0a725e806671",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "35b51ba4_ac912938",
        "filename": "build/jam/ArchitectureRules",
        "patchSetId": 1
      },
      "lineNbr": 617,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2021-11-23T14:19:31Z",
      "side": 1,
      "message": "It looks like a good idea, but I\u0027d rather keep the scope of this change limited.",
      "parentUuid": "6def44bc_11312fa8",
      "revId": "5010d9bfcb39985ecb4bd07ce71c0a725e806671",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6d0f9022_b73bdf24",
        "filename": "build/jam/packages/Haiku",
        "patchSetId": 1
      },
      "lineNbr": 86,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2021-07-30T18:43:53Z",
      "side": 1,
      "message": "`kcov` seems to be more of an abbreviation than we usually use; the GCC flag is \"coverage\" and the init routine is \"coverage\"; why not use \"kernel_coverage\"?",
      "revId": "5010d9bfcb39985ecb4bd07ce71c0a725e806671",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be5474ac_9ba2ed48",
        "filename": "build/jam/packages/Haiku",
        "patchSetId": 1
      },
      "lineNbr": 86,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2021-11-23T14:19:31Z",
      "side": 1,
      "message": "`kcov` is a known abbreviation across BSDs and Linux. kernel_coverage for the driver, the feature, and the source files? This means \u003cdriver\u003ekernel_coverage@kernel_coverage",
      "parentUuid": "6d0f9022_b73bdf24",
      "revId": "5010d9bfcb39985ecb4bd07ce71c0a725e806671",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1bac94b9_1dc277b6",
        "filename": "headers/private/kernel/kcov.h",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2021-07-30T18:43:53Z",
      "side": 1,
      "message": "These should probably also be given Haiku-like names?",
      "revId": "5010d9bfcb39985ecb4bd07ce71c0a725e806671",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2bc68a0f_7a19e13a",
        "filename": "headers/private/kernel/kcov.h",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2021-11-23T14:19:31Z",
      "side": 1,
      "message": "I thought we could avoid yet another name in syzcaller: \nhttps://github.com/google/syzkaller/blob/fcdb12ba70875c410749932abf39160d19c753d9/tools/kcovtrace/kcovtrace.c#L64\nFor instance: B_ENABLE_KERNEL_COVERAGE, B_DISABLE_KERNEL_COVERAGE, B_SET_BUFFERSIZE, B_GET_AREA?",
      "parentUuid": "1bac94b9_1dc277b6",
      "revId": "5010d9bfcb39985ecb4bd07ce71c0a725e806671",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bd850a5b_be8e8e48",
        "filename": "headers/private/kernel/kcov.h",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2021-11-23T15:14:36Z",
      "side": 1,
      "message": "Makes sense. Probably we should add a note that these names are used other than on Haiku, then.",
      "parentUuid": "2bc68a0f_7a19e13a",
      "revId": "5010d9bfcb39985ecb4bd07ce71c0a725e806671",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1a0bda39_575f2dff",
        "filename": "src/add-ons/kernel/drivers/misc/kcov.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2021-11-23T15:14:36Z",
      "side": 1,
      "message": "Thought: Perhaps we can avoid having a driver at all, and instead have the kernel feature register a generic_syscall instead? Perhaps that makes more sense?",
      "revId": "5010d9bfcb39985ecb4bd07ce71c0a725e806671",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f069134b_7d7b506b",
        "filename": "src/system/kernel/int.cpp",
        "patchSetId": 1
      },
      "lineNbr": 300,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2021-07-30T18:43:53Z",
      "side": 1,
      "message": "Atomics are not as cheap as one might expect. Does this really need to be atomic; and if so, can we put it behind \"#if KDEBUG\" perhaps?",
      "revId": "5010d9bfcb39985ecb4bd07ce71c0a725e806671",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1f36a383_968ca58e",
        "filename": "src/system/kernel/int.cpp",
        "patchSetId": 1
      },
      "lineNbr": 300,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2021-11-23T14:19:31Z",
      "side": 1,
      "message": "Yeah, atomic isn\u0027t needed.",
      "parentUuid": "f069134b_7d7b506b",
      "revId": "5010d9bfcb39985ecb4bd07ce71c0a725e806671",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    }
  ]
}