{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "49a54b11_d818c1b0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-03-07T21:11:59Z",
      "side": 1,
      "message": "Could we get some more details on this one and your theory?",
      "revId": "42b0aee9720c5dd8b135b3de2ecc5a95d0233ec2",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "54e732ab_8aca3eda",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-03-07T21:22:22Z",
      "side": 1,
      "message": "I tried a similar change on riscv64, and it just locks up when entering the kernel.\n\nThese are different architectures and function differently, however the context of our EFI loader mapping memory areas before jumping into the kernel shouldn\u0027t change between architectures that substantially from a high level.",
      "revId": "42b0aee9720c5dd8b135b3de2ecc5a95d0233ec2",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c8eb8bc7_358cd37e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2023-03-07T21:35:49Z",
      "side": 1,
      "message": "You should not need to map these, it just seems something is broken in RISC-V if you rely on bootloader memory or code.",
      "parentUuid": "54e732ab_8aca3eda",
      "revId": "42b0aee9720c5dd8b135b3de2ecc5a95d0233ec2",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d0520a6c_80b8d423",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000341
      },
      "writtenOn": "2023-03-07T21:48:43Z",
      "side": 1,
      "message": "arm64 is somewhat different from riscv64 in this aspect:\n* lower part of memory is mapped via ttbr0 which is initialized to identity mapping by EFI loader\n* upper part of memory is mapped via ttbr1 which is initilaized in arch_mmu\n* the piece of code mapping efi loader code/data does not do anything because of two reasons: 1) these are already mapped 2) it\u0027s trying to use virtual address zero because virtual address for these areas is not initialized. So even if this code had any effect, it would result in invalid mappings.\n* mapping these regions is not required on 32-bit arm or 32-bit x86 either\n* with this change i reach the same point in the bootup as before\n\nBasically we should be thinking about mapping anything \"lower memory\" if we want to prepare our own ttbr0 - which might be not a bad idea but that needs some more rework. Also in that case I\u0027d try to avoid identity-mapping so many things.",
      "parentUuid": "c8eb8bc7_358cd37e",
      "revId": "42b0aee9720c5dd8b135b3de2ecc5a95d0233ec2",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a36dfd04_03d72e17",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-03-07T21:53:08Z",
      "side": 1,
      "message": "fair enough.  Does this help progress the boot any further?",
      "revId": "42b0aee9720c5dd8b135b3de2ecc5a95d0233ec2",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}