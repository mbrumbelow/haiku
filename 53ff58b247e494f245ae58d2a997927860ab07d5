{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "bc109315_84de4ddb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2023-01-02T12:21:49Z",
      "side": 1,
      "message": "I would rqther fix the regression that causes the LANG variable to be missing?\n\nIt is required by POSIX: https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap08.html#tag_08_02",
      "revId": "53ff58b247e494f245ae58d2a997927860ab07d5",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1dc90e75_10b9e8dc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000390
      },
      "writtenOn": "2023-01-02T12:29:48Z",
      "side": 1,
      "message": "I don\u0027t know when this regressed (or if LANG was there before? these scripts suggest it was but I\u0027ve never seen them work properly)\n\nThis commit would still be needed to get the \"base\" language, I can change it to use LANG as a source again but I don\u0027t know where LANG is supposed to be set.",
      "parentUuid": "bc109315_84de4ddb",
      "revId": "53ff58b247e494f245ae58d2a997927860ab07d5",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "73391c2e_3d968f0e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2023-01-02T18:01:48Z",
      "side": 1,
      "message": "I think it is supposed to be set in https://cgit.haiku-os.org/haiku/tree/data/system/boot/SetupEnvironment#n41 but it is not there currently.\n\nLC_MESSAGES could be used.",
      "parentUuid": "1dc90e75_10b9e8dc",
      "revId": "53ff58b247e494f245ae58d2a997927860ab07d5",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4bbb3994_a86eb5ef",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000012
      },
      "writtenOn": "2023-01-03T07:55:17Z",
      "side": 1,
      "message": "Comment removed by: Niels Sascha Reedijk; Reason: invalid argument",
      "parentUuid": "73391c2e_3d968f0e",
      "revId": "53ff58b247e494f245ae58d2a997927860ab07d5",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "329bfa0f_c2d43230",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000012
      },
      "writtenOn": "2023-01-03T08:01:22Z",
      "side": 1,
      "message": "Removed previous comment.\n\nI am not sure whether we want to prefer the environment variable over the other: I think `locale -l` has the guarantee that it gives us what the user has set for their Haiku language. Are the variables in SetupBootEnvironment updated if the user switches language? If not, I would say this slightly tips us in favor of using locale -l.",
      "parentUuid": "4bbb3994_a86eb5ef",
      "revId": "53ff58b247e494f245ae58d2a997927860ab07d5",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "654e3307_e67d47f3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000390
      },
      "writtenOn": "2023-01-03T12:00:27Z",
      "side": 1,
      "message": "\u003e Are the variables in SetupBootEnvironment updated if the user switches language?\n\nSine environment varibles are inherited I\u0027d think they wouldn\u0027t.\n\nWe could change it so launch_roster sets them on program start so they are acurate then, i\u0027d imagine our native apps don\u0027t use these vars in any case (this still wouldnt work if eg a bash session is already started and one used the scripts in it then though)",
      "parentUuid": "329bfa0f_c2d43230",
      "revId": "53ff58b247e494f245ae58d2a997927860ab07d5",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7118cf9a_7898c638",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000012
      },
      "writtenOn": "2023-01-08T17:34:39Z",
      "side": 1,
      "message": "I think there is a small problem in the logic, so you may want to fix that. Stylistically, I would suggest adding some comments near the variables about what you expect to be in language and languageBase (so that it becomes clear what you are trying to do). Also test if the language is not of the format nl_NL but just nl, just to be sure that there is no weird awk error, and also, it may be the case that a language includes a character set (for example, Serbian can be in latin and cyrillic). \n\nIn my opinion, using `locale -l` is fine, it goes beyond the scope of this change to fix locale environment variables.",
      "revId": "53ff58b247e494f245ae58d2a997927860ab07d5",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ebc09d98_cb6f374a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000390
      },
      "writtenOn": "2023-01-08T18:00:25Z",
      "side": 1,
      "message": "What would be the problem with awk erroring out? STDERR here would iirc just be printed, bot stored in the variable, but without a connected terminal that should just be discarded.",
      "parentUuid": "7118cf9a_7898c638",
      "revId": "53ff58b247e494f245ae58d2a997927860ab07d5",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "82c9bdc6_f8c767fa",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000012
      },
      "writtenOn": "2023-01-09T06:43:56Z",
      "side": 1,
      "message": "So the variable would be empty. If that doesn\u0027t accidentally lead to a valid path, then all would be well.",
      "parentUuid": "ebc09d98_cb6f374a",
      "revId": "53ff58b247e494f245ae58d2a997927860ab07d5",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ddc73ec8_12b4b4df",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000390
      },
      "writtenOn": "2023-01-10T17:41:20Z",
      "side": 1,
      "message": "Missed the comment about adding some comments. Just a line to explain what awk does there?",
      "parentUuid": "82c9bdc6_f8c767fa",
      "revId": "53ff58b247e494f245ae58d2a997927860ab07d5",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4c7c8e9e_20eec2d4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000390
      },
      "writtenOn": "2023-01-10T18:02:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ddc73ec8_12b4b4df",
      "revId": "53ff58b247e494f245ae58d2a997927860ab07d5",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6736c022_c0bc6dcf",
        "filename": "src/data/bin/quicktour",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1000012
      },
      "writtenOn": "2023-01-08T17:34:39Z",
      "side": 1,
      "message": "Should this be testing localizedQuicktourBase?",
      "revId": "53ff58b247e494f245ae58d2a997927860ab07d5",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "22d25b69_f13df577",
        "filename": "src/data/bin/quicktour",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1000390
      },
      "writtenOn": "2023-01-08T18:00:25Z",
      "side": 1,
      "message": "Yes, will fix that. (and the conditional above it)\n\nAny opinions on using \"if test -f $file;\" instead of [?\nPersonally I like this style much more because I\u0027ve seen many shell scripts blindly copy [ assuming the command is part if the syntax.\n... Though eliminating shell would be much better to get rid of such footguns ;)",
      "parentUuid": "6736c022_c0bc6dcf",
      "revId": "53ff58b247e494f245ae58d2a997927860ab07d5",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7a1385f1_5fb61191",
        "filename": "src/data/bin/quicktour",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1000012
      },
      "writtenOn": "2023-01-09T06:43:56Z",
      "side": 1,
      "message": "I do not have a strong opinion on it, though a quick google search shows me that the bracket syntax is the modern version of invoking test for files, so I think the current syntax is fine.",
      "parentUuid": "22d25b69_f13df577",
      "revId": "53ff58b247e494f245ae58d2a997927860ab07d5",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5539bdf6_c83ad9de",
        "filename": "src/data/bin/quicktour",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1000390
      },
      "writtenOn": "2023-01-10T17:41:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7a1385f1_5fb61191",
      "revId": "53ff58b247e494f245ae58d2a997927860ab07d5",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}