{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "0864b2d0_9093041b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2022-05-29T16:17:30Z",
      "side": 1,
      "message": "Probably don\u0027t want to add more outside dependencies in ACPICA lib itself, better to remove the define and define it before building ACPICA.\nWe could even override the OS function names and implement the whole OS function per platform if we want less includes and calls, but the current call to platform functions works as well.",
      "revId": "43bb08cfdaa2b0308ac273d16c2bbe18f956fdf1",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "24fcfdf4_ed41dc05",
        "filename": "src/add-ons/kernel/bus_managers/acpi/acpica/include/platform/achaiku.h",
        "patchSetId": 4
      },
      "lineNbr": 159,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2022-05-29T16:17:30Z",
      "side": 1,
      "message": "It seems other OS\u0027es no longer define flush instruction OS I don\u0027t think we need arch_config.h. And is we want platform specific defines I think we should set it as defines in the build.",
      "revId": "43bb08cfdaa2b0308ac273d16c2bbe18f956fdf1",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d84d3abb_d05e1487",
        "filename": "src/add-ons/kernel/bus_managers/acpi/acpica/include/platform/achaiku.h",
        "patchSetId": 4
      },
      "lineNbr": 159,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2022-05-29T17:38:36Z",
      "side": 1,
      "message": "Using defines in the build seems a lot more complicated. Why write complex Jam logic when it can be either a #ifdef in the code (as initially proposed) or the usual thing we do with include paths and arch-specific directories?",
      "parentUuid": "24fcfdf4_ed41dc05",
      "revId": "43bb08cfdaa2b0308ac273d16c2bbe18f956fdf1",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "abb1d81c_fab6a7f9",
        "filename": "src/add-ons/kernel/bus_managers/acpi/acpica/include/platform/achaiku.h",
        "patchSetId": 4
      },
      "lineNbr": 159,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2022-05-30T16:06:02Z",
      "side": 1,
      "message": "Inside the ACPICA library we make a dependency on a non-system header. The library should at some point be able to compile both in kernel and userland so I rather avoid having outside dependencies in a lib that we probably should move out of this directory.\n\nACPI should probably be restructured a lot when it comes to init process in general.",
      "parentUuid": "d84d3abb_d05e1487",
      "revId": "43bb08cfdaa2b0308ac273d16c2bbe18f956fdf1",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5e599139_9d6f1d75",
        "filename": "src/add-ons/kernel/bus_managers/acpi/acpica/include/platform/achaiku.h",
        "patchSetId": 4
      },
      "lineNbr": 159,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2022-05-31T11:04:05Z",
      "side": 1,
      "message": "should I move this to a per-architecture acenv.h file, stored in the acpica include directory then? And should we upstream that?",
      "parentUuid": "abb1d81c_fab6a7f9",
      "revId": "43bb08cfdaa2b0308ac273d16c2bbe18f956fdf1",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bd887e69_31271a2f",
        "filename": "src/add-ons/kernel/bus_managers/acpi/arch/x86/arch_config.h",
        "patchSetId": 4
      },
      "lineNbr": 11,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2022-05-29T16:17:30Z",
      "side": 1,
      "message": "When I looked it seems that other OS\u0027es doesn\u0027t bother with this anymore.",
      "revId": "43bb08cfdaa2b0308ac273d16c2bbe18f956fdf1",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "acd135b9_2d773185",
        "filename": "src/add-ons/kernel/bus_managers/acpi/arch/x86/arch_config.h",
        "patchSetId": 4
      },
      "lineNbr": 11,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2022-05-29T17:38:36Z",
      "side": 1,
      "message": "Seems to still be here, but everyone sets it in difference places:\n\nNetBSD: https://github.com/NetBSD/src/blob/trunk/sys/dev/acpi/acpica/acpi_func.h#L86\nLinux: https://elixir.bootlin.com/linux/latest/source/arch/x86/include/asm/acenv.h#L16\nFreeBSD: https://github.com/freebsd/freebsd-src/blob/main/sys/x86/include/acpica_machdep.h#L62\n\nIt can be left undefined for platforms that don\u0027t need it (there is a default definition that does nothing).",
      "parentUuid": "bd887e69_31271a2f",
      "revId": "43bb08cfdaa2b0308ac273d16c2bbe18f956fdf1",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b3027949_663b40dd",
        "filename": "src/add-ons/kernel/bus_managers/acpi/arch/x86/arch_config.h",
        "patchSetId": 4
      },
      "lineNbr": 11,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2022-05-30T16:06:02Z",
      "side": 1,
      "message": "Nice find. It also show a bit of the mess on doing this in a good way.\nFreeBSD: system header\nNetBSD: Local with README about the problems (same as we have currently when I update ACPICA): https://github.com/NetBSD/src/blob/trunk/sys/dev/acpi/acpica/README\nLinux: Arch acenv.h headers, which I think is the intended way in ACPICA.",
      "parentUuid": "acd135b9_2d773185",
      "revId": "43bb08cfdaa2b0308ac273d16c2bbe18f956fdf1",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}