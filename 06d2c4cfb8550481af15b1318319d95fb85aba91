{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2e025e1b_39234568",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000013
      },
      "writtenOn": "2022-07-11T22:16:19Z",
      "side": 1,
      "message": "to nephele",
      "revId": "06d2c4cfb8550481af15b1318319d95fb85aba91",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e02b72de_e0561f4a",
        "filename": "headers/private/interface/DefaultColors.h",
        "patchSetId": 5
      },
      "lineNbr": 15,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2022-07-06T09:02:02Z",
      "side": 1,
      "message": "I don\u0027t understand why this is exposed in a private header of the interface kit.\n\nIf you put it here it\u0027s possible for apps to access this array directly, then, what\u0027s the point of the API in libshared? It can be short-circuited to access the array directly.\n\nAnd if we change the array format someday, since the array is in libbe, apps that used the API in libshared will still stop working if the array does not match what they expect.\n\nSo we have two choices here:\n- Make this be fully contained in interface kit, make kDefaultColorsDark not exposed at all in public or private headers, and only expose the function. And immediately commit to keeping this function ABI stable if we don\u0027t want to break apps using it in the future\n- Or, move everything (both the color array and the function) completely into the shared kit. Then all apps using end up bundling their own copy of it, and we can change it as much as we want if neede later without breaking existing binaries\n\nThe mixed solution currently implemented ends up giving us the worst of both worlds.",
      "revId": "06d2c4cfb8550481af15b1318319d95fb85aba91",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7b1ce489_d69a300e",
        "filename": "headers/private/interface/DefaultColors.h",
        "patchSetId": 5
      },
      "lineNbr": 15,
      "author": {
        "id": 1000390
      },
      "writtenOn": "2022-07-06T09:53:15Z",
      "side": 1,
      "message": "I don\u0027t see the problem of apps potentially linking to private parts of the api, if they do this we can not protect them either way, and kDefaultColors has the same problem here.\nWhich was the inital reason for this proposed api.\n\nIf we move kDefaultColorsDark into libshared we could end up in a situation where the acess to kDefaultColors breaks but the acess to kDefaultColorsDark does not. For this reason I think both arrays should be in the same place.\n\nWe could put both arrays into libshared (copying kDefaultColors), including the api\nor move both back to the interface kit and keep it in BPrivate.\n\nGiven the choice I think it makes more sense to just keep it all in the interface kit and mark the api as BPrivate then.",
      "parentUuid": "e02b72de_e0561f4a",
      "revId": "06d2c4cfb8550481af15b1318319d95fb85aba91",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "41c6c8bd_e547ae18",
        "filename": "headers/private/interface/DefaultColors.h",
        "patchSetId": 5
      },
      "lineNbr": 15,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2022-07-10T09:38:10Z",
      "side": 1,
      "message": "\u003e Given the choice I think it makes more sense to just keep it all in the interface kit and mark the api as BPrivate then.\n\nI think it makes more sense to move it all to libshared instead. All private APIs should be in libshared, then we can move it into the interface kit if/when we decide to make it public.\n\nIn any case, we should not make the arrays public, it just creates a mess because we already plan to change how the color system works (with having just an \"accent\" color and generating the other colors from it). These default colors will not exist anymore as an array when we do this.\n\nThe function avoids this problem (it can compute the colors on the fly or do whatever is convenient to preserve its API). But the array really shouldn\u0027t be exposed anywhere in libbe for all apps to use.",
      "parentUuid": "7b1ce489_d69a300e",
      "revId": "06d2c4cfb8550481af15b1318319d95fb85aba91",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2854ec83_7f42decf",
        "filename": "headers/private/interface/DefaultColors.h",
        "patchSetId": 5
      },
      "lineNbr": 15,
      "author": {
        "id": 1000390
      },
      "writtenOn": "2022-07-10T11:48:58Z",
      "side": 1,
      "message": "Do you suggest to remove kDefaultColors from the interface kit aswell then, currently it is exposed (maybe for appearence prefs defaults button)?",
      "parentUuid": "41c6c8bd_e547ae18",
      "revId": "06d2c4cfb8550481af15b1318319d95fb85aba91",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "78b6ac3e_246de62a",
        "filename": "headers/private/interface/DefaultColors.h",
        "patchSetId": 5
      },
      "lineNbr": 15,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2022-07-10T21:34:15Z",
      "side": 1,
      "message": "Yes. This is an Haiku addition and should not have been added there. We should move it to libshared instead.",
      "parentUuid": "2854ec83_7f42decf",
      "revId": "06d2c4cfb8550481af15b1318319d95fb85aba91",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b8e7f01e_7cdd4b7a",
        "filename": "headers/private/interface/DefaultColors.h",
        "patchSetId": 5
      },
      "lineNbr": 15,
      "author": {
        "id": 1000013
      },
      "writtenOn": "2022-07-10T21:45:58Z",
      "side": 1,
      "message": "I only see color_which on BeOS InterfaceDefs.h so I assume kDefaultColors is a Haiku addition.\n\nhttps://github.com/jscipione/r5headers/blob/master/headers/be/interface/InterfaceDefs.h#L296",
      "parentUuid": "78b6ac3e_246de62a",
      "revId": "06d2c4cfb8550481af15b1318319d95fb85aba91",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "621a21b2_798149da",
        "filename": "headers/private/interface/DefaultColors.h",
        "patchSetId": 5
      },
      "lineNbr": 15,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2022-07-11T07:16:18Z",
      "side": 1,
      "message": "Yes, it is, the convention of starting constants with k, and the BPrivate namespace, are both specific to Haiku.\n\nBeOS didn\u0027t use namespaces and started constants names with B_.",
      "parentUuid": "b8e7f01e_7cdd4b7a",
      "revId": "06d2c4cfb8550481af15b1318319d95fb85aba91",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b7b5813_a75811d5",
        "filename": "headers/private/interface/DefaultColors.h",
        "patchSetId": 5
      },
      "lineNbr": 15,
      "author": {
        "id": 1000013
      },
      "writtenOn": "2022-07-11T22:16:19Z",
      "side": 1,
      "message": "\u003e Given the choice I think it makes more sense to just keep it all in the interface kit and mark the api as BPrivate then.\n\nThese constants should stay together in interface kit rather than using a shared kit and should be in the BPrivate namespace for now. I’d be ok with leaving kDefaultColors out of BPrivate if somebody is using it.",
      "parentUuid": "621a21b2_798149da",
      "revId": "06d2c4cfb8550481af15b1318319d95fb85aba91",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "20ac2759_13cb35d2",
        "filename": "headers/private/interface/DefaultColors.h",
        "patchSetId": 5
      },
      "lineNbr": 15,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2022-07-12T08:27:55Z",
      "side": 1,
      "message": "\u003e I’d be ok with leaving kDefaultColors out of BPrivate if somebody is using it.\n\nThat is just making things worse.\n\nThe ideal situation for experimental APIs is:\n- They are in libshared (which isn\u0027t a great name since it is a static library), so that each app bundle its own copy of the code. If the code changes, old apps can still be built fine\n- They are in BPrivate, so that if a new public function appears with the same name in the shared libraries (libbe in this case), there is no name conflict, and the app can still use the version it was compiled with.\n\nIn this specific case it looks like we will not be able to move the whole thing to libshared because interface kit code uses the default colors array at the moment. So we have to give up on the first of these two things. There is no reason to give up on the second one at the same time. It can remain in BPrivate.\n\nAdditionally we will be able to move it out of headers/private/ (which is installed in haiku_devel and available for 3rd party apps) and move it somewhere in src/kits/interfaces/ (making it really private). As a result we expose to apps only a function that allows to access the array. If, later, we remove the array and compute the colors in a different way, we can adjust the function to still expose the same API/ABI, and keep existing apps using it working.",
      "parentUuid": "2b7b5813_a75811d5",
      "revId": "06d2c4cfb8550481af15b1318319d95fb85aba91",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1bb0abb0_08718b16",
        "filename": "src/kits/interface/InterfaceDefs.cpp",
        "patchSetId": 5
      },
      "lineNbr": 1291,
      "author": {
        "id": 1000390
      },
      "writtenOn": "2022-07-12T02:23:37Z",
      "side": 1,
      "message": "The interface kit used kDefaultColors here, the second user is preferences/Appearence.\n\nI don\u0027t see how the usage here could be removed, so the alternative then would be to have the interface kit depend on this private api in libshared. does that make sense to do?\n\nAlternatively the api could be added to interfacedefs and the arrays made private, that way no caller can access them directly.",
      "revId": "06d2c4cfb8550481af15b1318319d95fb85aba91",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5436fd70_0c10ad03",
        "filename": "src/kits/interface/InterfaceDefs.cpp",
        "patchSetId": 5
      },
      "lineNbr": 1291,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2022-07-12T08:27:55Z",
      "side": 1,
      "message": "\u003e I don\u0027t see how the usage here could be removed, so the alternative then would be to have the interface kit depend on this private api in libshared. does that make sense to do?\n\nNo, if libshared is available by linking other libs, it defeats the purpose.\n\n\u003e Alternatively the api could be added to interfacedefs and the arrays made private, that way no caller can access them directly.\n\nYes, but then we have to make sure the API remains stable otherwise it breaks apps using it if we ever need to change the API. In this case the API is possibly simple enough that it will be ok (as long as the arrays themselves aren\u0027t exposed in public headers).",
      "parentUuid": "1bb0abb0_08718b16",
      "revId": "06d2c4cfb8550481af15b1318319d95fb85aba91",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}