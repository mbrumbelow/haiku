{
  "comments": [
    {
      "key": {
        "uuid": "57b1814a_2d8d90b5",
        "filename": "src/system/boot/loader/elf.cpp",
        "patchSetId": 1
      },
      "lineNbr": 302,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-08-05T10:43:24Z",
      "side": 1,
      "message": "As regions that are executable are skipped with a continue above, I\u0027m not sure why it is needed?",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6993ee3f_4deb925d",
        "filename": "src/system/boot/loader/elf.cpp",
        "patchSetId": 1
      },
      "lineNbr": 302,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-06T18:55:44Z",
      "side": 1,
      "message": "X512, was there a reason for this one that you remember?",
      "parentUuid": "57b1814a_2d8d90b5",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d0486f0c_3996422e",
        "filename": "src/system/boot/loader/kernel_args.cpp",
        "patchSetId": 1
      },
      "lineNbr": 402,
      "author": {
        "id": 1000281
      },
      "writtenOn": "2021-08-05T00:48:04Z",
      "side": 1,
      "message": "This is declared in efi/mmu.h. Without moving the prototype this does not make sense to enable for RISC-V if EFI is disabled for some reason (which it also shouldn\u0027t be, EFI is how you should be booting... but direct booting from BBL/OpenSBI is ok too, if discouraged these days).",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "39da09a7_108129ca",
        "filename": "src/system/boot/loader/kernel_args.cpp",
        "patchSetId": 1
      },
      "lineNbr": 402,
      "author": {
        "id": 1000172
      },
      "writtenOn": "2021-08-05T01:10:04Z",
      "side": 1,
      "message": "It is used by bare metal haiku_loader.riscv. It is probably should be always enabled and return the same address if identity mapping is used on specific platform.",
      "parentUuid": "d0486f0c_3996422e",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8a93f0f9_28da8627",
        "filename": "src/system/boot/loader/kernel_args.cpp",
        "patchSetId": 1
      },
      "lineNbr": 402,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-06T18:27:34Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "39da09a7_108129ca",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8ac731f7_c61b9ccb",
        "filename": "src/system/boot/platform/efi/Jamfile",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-08-05T10:43:24Z",
      "side": 1,
      "message": "Not a Jam expert, but I think you are supposed to set it in your arch, not here.",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f96807c9_0d460150",
        "filename": "src/system/boot/platform/efi/Jamfile",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-06T22:00:42Z",
      "side": 1,
      "message": "I think this one is ok. The EFI spec allows for FDT being passed to bootloaders.  If the EFI loader (aka x86) doesn\u0027t use it, then it\u0027s just unused support code.\n\nNothing technically prevents x86 from using FDT... it just isn\u0027t needed very often.\n\nu-boot does the same thing.",
      "parentUuid": "8ac731f7_c61b9ccb",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "330c36ad_9e9f3783",
        "filename": "src/system/boot/platform/efi/arch/riscv64/arch_mmu.cpp",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1000281
      },
      "writtenOn": "2021-08-05T00:48:04Z",
      "side": 1,
      "message": "Another copy of all this stuff that you\u0027ve also put in the kernel. Can you not find a way to share the implementation between the kernel and your bootloader (or change your bootloader to be less abnormal and not set up paging, leaving that to the kernel)?",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4894dd18_365eab5c",
        "filename": "src/system/boot/platform/efi/arch/riscv64/arch_mmu.cpp",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1000172
      },
      "writtenOn": "2021-08-05T01:10:04Z",
      "side": 1,
      "message": "Boot loader is supposed to setup kernel page table on Haiku. x86 version also do this. My earlier version of RISC-V port setup page table in kernel, but it cause using low addresses for kernel and high addresses for userland. Haiku kernel do not support relocation at runtime. Also my early version start kernel directly from machine mode and then kernel switched to supervisor mode when initializing interrupt handling.",
      "parentUuid": "330c36ad_9e9f3783",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7c94459a_d8cf709b",
        "filename": "src/system/boot/platform/efi/arch/riscv64/arch_mmu.cpp",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-06T22:00:42Z",
      "side": 1,
      "message": "Ack.",
      "parentUuid": "4894dd18_365eab5c",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2562c077_7c19be46",
        "filename": "src/system/boot/platform/efi/arch/riscv64/arch_mmu.cpp",
        "patchSetId": 1
      },
      "lineNbr": 362,
      "author": {
        "id": 1000281
      },
      "writtenOn": "2021-08-05T00:48:04Z",
      "side": 1,
      "message": "Unlikely, that\u0027s normally for UEFI drivers to convert their own pointers after the kernel updates the address map, it\u0027d be weird for the kernel to then go and call the same thing (though I guess would technically work in certain specific circumstances)",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "39f98e56_d03dd691",
        "filename": "src/system/boot/platform/efi/arch/riscv64/arch_mmu.cpp",
        "patchSetId": 1
      },
      "lineNbr": 362,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-06T18:27:34Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "2562c077_7c19be46",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "49ac357f_ab2b19ca",
        "filename": "src/system/boot/platform/efi/arch/riscv64/arch_mmu.cpp",
        "patchSetId": 1
      },
      "lineNbr": 378,
      "author": {
        "id": 1000281
      },
      "writtenOn": "2021-08-05T00:48:04Z",
      "side": 1,
      "message": "?",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c8d5bd2e_565ce240",
        "filename": "src/system/boot/platform/efi/arch/riscv64/arch_mmu.cpp",
        "patchSetId": 1
      },
      "lineNbr": 378,
      "author": {
        "id": 1000172
      },
      "writtenOn": "2021-08-05T01:10:04Z",
      "side": 1,
      "message": "Debug leftover to investigate issue with freeze after setting SATP. Already solved and should be removed.",
      "parentUuid": "49ac357f_ab2b19ca",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3953fd37_ccf48108",
        "filename": "src/system/boot/platform/efi/arch/riscv64/arch_mmu.cpp",
        "patchSetId": 1
      },
      "lineNbr": 378,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-06T18:27:34Z",
      "side": 1,
      "message": "This is the only caller of \"IdentityMap\", does IdentityMap need removed as well?",
      "parentUuid": "c8d5bd2e_565ce240",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "13a58a7e_e706af8b",
        "filename": "src/system/boot/platform/efi/arch/riscv64/arch_mmu.cpp",
        "patchSetId": 1
      },
      "lineNbr": 378,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-06T18:55:44Z",
      "side": 1,
      "message": "Did a check of all patches. IdentityMap looks like purely a debug function setting up identity mapped memory.",
      "parentUuid": "3953fd37_ccf48108",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a3d3921_9e6464df",
        "filename": "src/system/boot/platform/efi/arch/riscv64/arch_smp.cpp",
        "patchSetId": 1
      },
      "lineNbr": 109,
      "author": {
        "id": 1000281
      },
      "writtenOn": "2021-08-05T00:48:04Z",
      "side": 1,
      "message": "Does your compiler not scream about this dead code?",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "680b9140_6cc3af69",
        "filename": "src/system/boot/platform/efi/arch/riscv64/arch_smp.cpp",
        "patchSetId": 1
      },
      "lineNbr": 109,
      "author": {
        "id": 1000172
      },
      "writtenOn": "2021-08-05T01:10:04Z",
      "side": 1,
      "message": "SMP code is currently not working so it is disabled. There are no response from other HARTs after attempting to start them.",
      "parentUuid": "5a3d3921_9e6464df",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "21df2251_1a8df260",
        "filename": "src/system/boot/platform/efi/arch/riscv64/arch_smp.cpp",
        "patchSetId": 1
      },
      "lineNbr": 109,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-06T18:27:34Z",
      "side": 1,
      "message": "Ack.  Added comment",
      "parentUuid": "680b9140_6cc3af69",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b4f2efd1_fbd5c7c1",
        "filename": "src/system/boot/platform/efi/arch/riscv64/arch_smp.cpp",
        "patchSetId": 1
      },
      "lineNbr": 113,
      "author": {
        "id": 1000281
      },
      "writtenOn": "2021-08-05T00:48:04Z",
      "side": 1,
      "message": "mhartid 0 may not exist, and even if it does it may not be a hart you\u0027re interested in (on the FU540 and FU740 hart 0 is the RV64IMAC management core, not one of the RV64IMAFDC application cores)",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a2f406c_94ea547e",
        "filename": "src/system/boot/platform/efi/arch/riscv64/arch_smp.cpp",
        "patchSetId": 1
      },
      "lineNbr": 113,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-06T18:27:34Z",
      "side": 1,
      "message": "Ack.  Added comment / TODO",
      "parentUuid": "b4f2efd1_fbd5c7c1",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cef9a01f_f8e4ace8",
        "filename": "src/system/boot/platform/efi/arch/riscv64/arch_start.cpp",
        "patchSetId": 1
      },
      "lineNbr": 137,
      "author": {
        "id": 1000281
      },
      "writtenOn": "2021-08-05T00:48:04Z",
      "side": 1,
      "message": "?",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6d5764bd_19c3b88e",
        "filename": "src/system/boot/platform/efi/arch/riscv64/arch_start.cpp",
        "patchSetId": 1
      },
      "lineNbr": 137,
      "author": {
        "id": 1000172
      },
      "writtenOn": "2021-08-05T01:10:04Z",
      "side": 1,
      "message": "It was used when SiFive UART was not yet implemented to get UEFI stdout. Not needed anymore.",
      "parentUuid": "cef9a01f_f8e4ace8",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f06ad93_e7b890a4",
        "filename": "src/system/boot/platform/efi/arch/riscv64/arch_start.cpp",
        "patchSetId": 1
      },
      "lineNbr": 137,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-06T18:27:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6d5764bd_19c3b88e",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ea5aac3_ce9ed45b",
        "filename": "src/system/boot/platform/efi/arch/riscv64/arch_start.cpp",
        "patchSetId": 1
      },
      "lineNbr": 164,
      "author": {
        "id": 1000281
      },
      "writtenOn": "2021-08-05T00:48:04Z",
      "side": 1,
      "message": "?",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3e5aa908_cd79e908",
        "filename": "src/system/boot/platform/efi/arch/riscv64/arch_start.cpp",
        "patchSetId": 1
      },
      "lineNbr": 164,
      "author": {
        "id": 1000172
      },
      "writtenOn": "2021-08-05T01:10:04Z",
      "side": 1,
      "message": "Used to investigate SATP freeze issue. Can be removed with MmuTest.",
      "parentUuid": "5ea5aac3_ce9ed45b",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4dc4fdcc_c2a3e407",
        "filename": "src/system/boot/platform/efi/arch/riscv64/arch_start.cpp",
        "patchSetId": 1
      },
      "lineNbr": 164,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-06T18:27:34Z",
      "side": 1,
      "message": "done",
      "parentUuid": "3e5aa908_cd79e908",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f7825ff7_fb41817f",
        "filename": "src/system/boot/platform/efi/debug.cpp",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 1000281
      },
      "writtenOn": "2021-08-05T00:48:04Z",
      "side": 1,
      "message": "?",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1885aa89_44969aa7",
        "filename": "src/system/boot/platform/efi/debug.cpp",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 1000172
      },
      "writtenOn": "2021-08-05T01:10:04Z",
      "side": 1,
      "message": "Was used when SiFive UART was not yet implemented. Can be removed.",
      "parentUuid": "f7825ff7_fb41817f",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "79b23bb0_717422d5",
        "filename": "src/system/boot/platform/efi/debug.cpp",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-06T18:27:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1885aa89_44969aa7",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c214288d_08faad8a",
        "filename": "src/system/boot/platform/efi/dtb.cpp",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 1000281
      },
      "writtenOn": "2021-08-05T00:48:04Z",
      "side": 1,
      "message": "This stuff all belongs in device driver files, not a generic efi/dtb.cpp. Separate your library/framework from its consumers.",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f97e250_2c48802d",
        "filename": "src/system/boot/platform/efi/dtb.cpp",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-06T22:00:42Z",
      "side": 1,
      "message": "I wholeheartedly agree.  Previously we had a \"mini-uart\" system which would detect the uart from fdt and attach the needed uart.\n\n*however* we also have a full fdt handling rewrite as part of these RV64 patches.\n(https://review.haiku-os.org/c/haiku/+/3977)\n\nI\u0027d rather take this one with some warts, and get it merged to get riscv64 compiling again.  Then we can review the fdt handling rewrite and fold these convenience functions back into it.",
      "parentUuid": "c214288d_08faad8a",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7247d366_c866fe04",
        "filename": "src/system/boot/platform/efi/mmu.cpp",
        "patchSetId": 1
      },
      "lineNbr": 127,
      "author": {
        "id": 1000281
      },
      "writtenOn": "2021-08-05T00:48:04Z",
      "side": 1,
      "message": "?",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "671a6b85_55d7bf6c",
        "filename": "src/system/boot/platform/efi/mmu.cpp",
        "patchSetId": 1
      },
      "lineNbr": 127,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-06T18:55:44Z",
      "side": 1,
      "message": "X512, is this needed?  Seems likely to impact other platforms.",
      "parentUuid": "7247d366_c866fe04",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2f2cda01_11cefa62",
        "filename": "src/system/boot/platform/efi/serial.cpp",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1000281
      },
      "writtenOn": "2021-08-05T00:48:04Z",
      "side": 1,
      "message": "This code is dead given the above addition?",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ffe0d228_8be04a37",
        "filename": "src/system/boot/platform/efi/serial.cpp",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1000172
      },
      "writtenOn": "2021-08-05T01:10:04Z",
      "side": 1,
      "message": "sSerial-\u003eWrite() do not work for me.",
      "parentUuid": "2f2cda01_11cefa62",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ba29fef4_eb798ec9",
        "filename": "src/system/boot/platform/efi/serial.cpp",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-06T22:44:59Z",
      "side": 1,
      "message": "I swapped this around a little to check if sSerial is NULL.\n\nThe overall logic looks like sSerialUsesEFI can (potentially) get detached from the NULL state of sSerial",
      "parentUuid": "ffe0d228_8be04a37",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8c211ac4_8340ab80",
        "filename": "src/system/boot/platform/efi/serial.cpp",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 1000281
      },
      "writtenOn": "2021-08-05T00:48:04Z",
      "side": 1,
      "message": "?",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bad89cce_b58fb733",
        "filename": "src/system/boot/platform/efi/serial.cpp",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 1000172
      },
      "writtenOn": "2021-08-05T01:10:04Z",
      "side": 1,
      "message": "Used to avoid not working sSerial. Should be reworked or undone.",
      "parentUuid": "8c211ac4_8340ab80",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0aa9b8a5_dde974db",
        "filename": "src/system/boot/platform/efi/serial.cpp",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-06T22:44:59Z",
      "side": 1,
      "message": "Via the change to serial_putc, the NULL check moves a lot closer to the potential NULL pointer dereference.",
      "parentUuid": "bad89cce_b58fb733",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3c971648_6cf83e61",
        "filename": "src/system/boot/platform/efi/start.cpp",
        "patchSetId": 1
      },
      "lineNbr": 181,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-08-05T10:43:24Z",
      "side": 1,
      "message": "This should be done in arch specific code. Try to avoid using the preprocessor and use arch specific functions. As you already has access to gKernelArgs from arch code I don\u0027t think we should even need another function for platform_init or such.",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "120f54b3_cc55fc13",
        "filename": "src/system/boot/platform/efi/start.cpp",
        "patchSetId": 1
      },
      "lineNbr": 181,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-06T18:55:44Z",
      "side": 1,
      "message": "Done. Moved into the top of arch_start_kernel. Nothing else within the EFI bootloader touches these.\n\nThey \"kinda\" make sense in arch_start_kernel as it is EFI preparing to jump into the kernel... thus defining what platform it came from.",
      "parentUuid": "3c971648_6cf83e61",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "01adfd56_66d0acb7",
        "filename": "src/system/boot/platform/efi/start.cpp",
        "patchSetId": 1
      },
      "lineNbr": 238,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-08-05T10:43:24Z",
      "side": 1,
      "message": "Can this be moved to arch code, avoiding preprocessor?",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "525ae51f_6342ff86",
        "filename": "src/system/boot/platform/efi/start.cpp",
        "patchSetId": 1
      },
      "lineNbr": 238,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-06T20:50:23Z",
      "side": 1,
      "message": "Sp() is needed at the top of efi_main to find the Stack Pointer at the start of the EFI application\n\nWith that said however.. it was only referenced for debug printf later in the mmu code and not actually used for anything else.\n\nI ripped it out for now.  It can be added back later if needed for debugging :-)",
      "parentUuid": "01adfd56_66d0acb7",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": false
    }
  ]
}