{
  "comments": [
    {
      "key": {
        "uuid": "57b1814a_2d8d90b5",
        "filename": "src/system/boot/loader/elf.cpp",
        "patchSetId": 1
      },
      "lineNbr": 302,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-08-05T10:43:24Z",
      "side": 1,
      "message": "As regions that are executable are skipped with a continue above, I\u0027m not sure why it is needed?",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d0486f0c_3996422e",
        "filename": "src/system/boot/loader/kernel_args.cpp",
        "patchSetId": 1
      },
      "lineNbr": 402,
      "author": {
        "id": 1000281
      },
      "writtenOn": "2021-08-05T00:48:04Z",
      "side": 1,
      "message": "This is declared in efi/mmu.h. Without moving the prototype this does not make sense to enable for RISC-V if EFI is disabled for some reason (which it also shouldn\u0027t be, EFI is how you should be booting... but direct booting from BBL/OpenSBI is ok too, if discouraged these days).",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "39da09a7_108129ca",
        "filename": "src/system/boot/loader/kernel_args.cpp",
        "patchSetId": 1
      },
      "lineNbr": 402,
      "author": {
        "id": 1000172
      },
      "writtenOn": "2021-08-05T01:10:04Z",
      "side": 1,
      "message": "It is used by bare metal haiku_loader.riscv. It is probably should be always enabled and return the same address if identity mapping is used on specific platform.",
      "parentUuid": "d0486f0c_3996422e",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8ac731f7_c61b9ccb",
        "filename": "src/system/boot/platform/efi/Jamfile",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-08-05T10:43:24Z",
      "side": 1,
      "message": "Not a Jam expert, but I think you are supposed to set it in your arch, not here.",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "330c36ad_9e9f3783",
        "filename": "src/system/boot/platform/efi/arch/riscv64/arch_mmu.cpp",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1000281
      },
      "writtenOn": "2021-08-05T00:48:04Z",
      "side": 1,
      "message": "Another copy of all this stuff that you\u0027ve also put in the kernel. Can you not find a way to share the implementation between the kernel and your bootloader (or change your bootloader to be less abnormal and not set up paging, leaving that to the kernel)?",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4894dd18_365eab5c",
        "filename": "src/system/boot/platform/efi/arch/riscv64/arch_mmu.cpp",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1000172
      },
      "writtenOn": "2021-08-05T01:10:04Z",
      "side": 1,
      "message": "Boot loader is supposed to setup kernel page table on Haiku. x86 version also do this. My earlier version of RISC-V port setup page table in kernel, but it cause using low addresses for kernel and high addresses for userland. Haiku kernel do not support relocation at runtime. Also my early version start kernel directly from machine mode and then kernel switched to supervisor mode when initializing interrupt handling.",
      "parentUuid": "330c36ad_9e9f3783",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2562c077_7c19be46",
        "filename": "src/system/boot/platform/efi/arch/riscv64/arch_mmu.cpp",
        "patchSetId": 1
      },
      "lineNbr": 362,
      "author": {
        "id": 1000281
      },
      "writtenOn": "2021-08-05T00:48:04Z",
      "side": 1,
      "message": "Unlikely, that\u0027s normally for UEFI drivers to convert their own pointers after the kernel updates the address map, it\u0027d be weird for the kernel to then go and call the same thing (though I guess would technically work in certain specific circumstances)",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "49ac357f_ab2b19ca",
        "filename": "src/system/boot/platform/efi/arch/riscv64/arch_mmu.cpp",
        "patchSetId": 1
      },
      "lineNbr": 378,
      "author": {
        "id": 1000281
      },
      "writtenOn": "2021-08-05T00:48:04Z",
      "side": 1,
      "message": "?",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c8d5bd2e_565ce240",
        "filename": "src/system/boot/platform/efi/arch/riscv64/arch_mmu.cpp",
        "patchSetId": 1
      },
      "lineNbr": 378,
      "author": {
        "id": 1000172
      },
      "writtenOn": "2021-08-05T01:10:04Z",
      "side": 1,
      "message": "Debug leftover to investigate issue with freeze after setting SATP. Already solved and should be removed.",
      "parentUuid": "49ac357f_ab2b19ca",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a3d3921_9e6464df",
        "filename": "src/system/boot/platform/efi/arch/riscv64/arch_smp.cpp",
        "patchSetId": 1
      },
      "lineNbr": 109,
      "author": {
        "id": 1000281
      },
      "writtenOn": "2021-08-05T00:48:04Z",
      "side": 1,
      "message": "Does your compiler not scream about this dead code?",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "680b9140_6cc3af69",
        "filename": "src/system/boot/platform/efi/arch/riscv64/arch_smp.cpp",
        "patchSetId": 1
      },
      "lineNbr": 109,
      "author": {
        "id": 1000172
      },
      "writtenOn": "2021-08-05T01:10:04Z",
      "side": 1,
      "message": "SMP code is currently not working so it is disabled. There are no response from other HARTs after attempting to start them.",
      "parentUuid": "5a3d3921_9e6464df",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b4f2efd1_fbd5c7c1",
        "filename": "src/system/boot/platform/efi/arch/riscv64/arch_smp.cpp",
        "patchSetId": 1
      },
      "lineNbr": 113,
      "author": {
        "id": 1000281
      },
      "writtenOn": "2021-08-05T00:48:04Z",
      "side": 1,
      "message": "mhartid 0 may not exist, and even if it does it may not be a hart you\u0027re interested in (on the FU540 and FU740 hart 0 is the RV64IMAC management core, not one of the RV64IMAFDC application cores)",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cef9a01f_f8e4ace8",
        "filename": "src/system/boot/platform/efi/arch/riscv64/arch_start.cpp",
        "patchSetId": 1
      },
      "lineNbr": 137,
      "author": {
        "id": 1000281
      },
      "writtenOn": "2021-08-05T00:48:04Z",
      "side": 1,
      "message": "?",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6d5764bd_19c3b88e",
        "filename": "src/system/boot/platform/efi/arch/riscv64/arch_start.cpp",
        "patchSetId": 1
      },
      "lineNbr": 137,
      "author": {
        "id": 1000172
      },
      "writtenOn": "2021-08-05T01:10:04Z",
      "side": 1,
      "message": "It was used when SiFive UART was not yet implemented to get UEFI stdout. Not needed anymore.",
      "parentUuid": "cef9a01f_f8e4ace8",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5ea5aac3_ce9ed45b",
        "filename": "src/system/boot/platform/efi/arch/riscv64/arch_start.cpp",
        "patchSetId": 1
      },
      "lineNbr": 164,
      "author": {
        "id": 1000281
      },
      "writtenOn": "2021-08-05T00:48:04Z",
      "side": 1,
      "message": "?",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3e5aa908_cd79e908",
        "filename": "src/system/boot/platform/efi/arch/riscv64/arch_start.cpp",
        "patchSetId": 1
      },
      "lineNbr": 164,
      "author": {
        "id": 1000172
      },
      "writtenOn": "2021-08-05T01:10:04Z",
      "side": 1,
      "message": "Used to investigate SATP freeze issue. Can be removed with MmuTest.",
      "parentUuid": "5ea5aac3_ce9ed45b",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f7825ff7_fb41817f",
        "filename": "src/system/boot/platform/efi/debug.cpp",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 1000281
      },
      "writtenOn": "2021-08-05T00:48:04Z",
      "side": 1,
      "message": "?",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1885aa89_44969aa7",
        "filename": "src/system/boot/platform/efi/debug.cpp",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 1000172
      },
      "writtenOn": "2021-08-05T01:10:04Z",
      "side": 1,
      "message": "Was used when SiFive UART was not yet implemented. Can be removed.",
      "parentUuid": "f7825ff7_fb41817f",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c214288d_08faad8a",
        "filename": "src/system/boot/platform/efi/dtb.cpp",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 1000281
      },
      "writtenOn": "2021-08-05T00:48:04Z",
      "side": 1,
      "message": "This stuff all belongs in device driver files, not a generic efi/dtb.cpp. Separate your library/framework from its consumers.",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7247d366_c866fe04",
        "filename": "src/system/boot/platform/efi/mmu.cpp",
        "patchSetId": 1
      },
      "lineNbr": 127,
      "author": {
        "id": 1000281
      },
      "writtenOn": "2021-08-05T00:48:04Z",
      "side": 1,
      "message": "?",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2f2cda01_11cefa62",
        "filename": "src/system/boot/platform/efi/serial.cpp",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1000281
      },
      "writtenOn": "2021-08-05T00:48:04Z",
      "side": 1,
      "message": "This code is dead given the above addition?",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ffe0d228_8be04a37",
        "filename": "src/system/boot/platform/efi/serial.cpp",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1000172
      },
      "writtenOn": "2021-08-05T01:10:04Z",
      "side": 1,
      "message": "sSerial-\u003eWrite() do not work for me.",
      "parentUuid": "2f2cda01_11cefa62",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8c211ac4_8340ab80",
        "filename": "src/system/boot/platform/efi/serial.cpp",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 1000281
      },
      "writtenOn": "2021-08-05T00:48:04Z",
      "side": 1,
      "message": "?",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bad89cce_b58fb733",
        "filename": "src/system/boot/platform/efi/serial.cpp",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 1000172
      },
      "writtenOn": "2021-08-05T01:10:04Z",
      "side": 1,
      "message": "Used to avoid not working sSerial. Should be reworked or undone.",
      "parentUuid": "8c211ac4_8340ab80",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c971648_6cf83e61",
        "filename": "src/system/boot/platform/efi/start.cpp",
        "patchSetId": 1
      },
      "lineNbr": 181,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-08-05T10:43:24Z",
      "side": 1,
      "message": "This should be done in arch specific code. Try to avoid using the preprocessor and use arch specific functions. As you already has access to gKernelArgs from arch code I don\u0027t think we should even need another function for platform_init or such.",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "01adfd56_66d0acb7",
        "filename": "src/system/boot/platform/efi/start.cpp",
        "patchSetId": 1
      },
      "lineNbr": 238,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2021-08-05T10:43:24Z",
      "side": 1,
      "message": "Can this be moved to arch code, avoiding preprocessor?",
      "revId": "8ff6dd6fb7cd8bd040ce1bdf37291fca1b41616d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    }
  ]
}