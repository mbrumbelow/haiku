{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "64ac5615_dfb8d03c",
        "filename": "src/system/libroot/posix/glibc/include/arch/arm/tininess.h",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define TININESS_AFTER_ROUNDING 0\n```",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 1,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "43b4e0e2_7daca4ce",
        "filename": "src/system/libroot/posix/glibc/include/arch/arm64/tininess.h",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define TININESS_AFTER_ROUNDING 0\n```",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 1,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "172cc77d_6008d89d",
        "filename": "src/system/libroot/posix/glibc/include/arch/ppc/tininess.h",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define TININESS_AFTER_ROUNDING 0\n```",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 1,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "25a1fb89_b4068b23",
        "filename": "src/system/libroot/posix/glibc/include/arch/riscv64/tininess.h",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define TININESS_AFTER_ROUNDING 1\n```",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 1,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d23c783f_de0e5eb4",
        "filename": "src/system/libroot/posix/glibc/include/arch/sparc/tininess.h",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define TININESS_AFTER_ROUNDING 0\n```",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 1,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "64e32500_1c8506ca",
        "filename": "src/system/libroot/posix/glibc/include/arch/x86/tininess.h",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define TININESS_AFTER_ROUNDING 1\n```",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 1,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "30900130_8d3d0780",
        "filename": "src/system/libroot/posix/glibc/include/arch/x86_64/tininess.h",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define TININESS_AFTER_ROUNDING 1\n```",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 1,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ce508ca7_1607a27f",
        "filename": "src/system/libroot/posix/glibc/include/bits/floatn.h",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#undef __f128\n```",
      "range": {
        "startLine": 44,
        "startChar": 0,
        "endLine": 44,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "62dd790c_c319d7a1",
        "filename": "src/system/libroot/posix/glibc/include/bits/floatn.h",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#undef __CFLOAT128\n```",
      "range": {
        "startLine": 48,
        "startChar": 0,
        "endLine": 48,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "94445a76_60cb53d7",
        "filename": "src/system/libroot/posix/glibc/include/bits/floatn.h",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n// #include \u003cbits/floatn-common.h\u003e\n```",
      "range": {
        "startLine": 52,
        "startChar": 0,
        "endLine": 52,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "451d007c_8f537e22",
        "filename": "src/system/libroot/posix/glibc/include/get-rounding-mode.h",
        "patchSetId": 1
      },
      "lineNbr": 2,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define _GET_ROUNDING_MODE_H 1\n```",
      "range": {
        "startLine": 2,
        "startChar": 0,
        "endLine": 2,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4fe8ba7d_80084187",
        "filename": "src/system/libroot/posix/glibc/include/get-rounding-mode.h",
        "patchSetId": 1
      },
      "lineNbr": 5,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (insert after):\n```c++\n\n```",
      "range": {
        "startLine": 5,
        "startChar": 0,
        "endLine": 5,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a28b85a2_b96c1c49",
        "filename": "src/system/libroot/posix/glibc/include/get-rounding-mode.h",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nget_rounding_mode(void)\n```",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2e9651eb_cd4b4cbf",
        "filename": "src/system/libroot/posix/glibc/include/math-barriers.h",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define _MATH_BARRIERS_H 1\n```",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 20,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "18775bd1_05250c3c",
        "filename": "src/system/libroot/posix/glibc/include/math-barriers.h",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define math_opt_barrier(x) \\\n\t({ \\\n\t\t__typeof(x) __x \u003d (x); \\\n\t\t__asm(\"\" : \"+m\"(__x)); \\\n\t\t__x; \\\n\t})\n#define math_force_eval(x) \\\n\t({ \\\n\t\t__typeof(x) __x \u003d (x); \\\n\t\t__asm __volatile__(\"\" : : \"m\"(__x)); \\\n\t})\n```",
      "range": {
        "startLine": 32,
        "startChar": 0,
        "endLine": 35,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dbaa92b0_b5d57108",
        "filename": "src/system/libroot/posix/glibc/include/math-narrow-eval.h",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define _MATH_NARROW_EVAL_H 1\n```",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 20,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ad45d8e5_7dd3d27a",
        "filename": "src/system/libroot/posix/glibc/include/math-narrow-eval.h",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define math_narrow_eval(x) (x)\n```",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 29,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0079e439_cdee622c",
        "filename": "src/system/libroot/posix/glibc/include/math-narrow-eval.h",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#if FLT_EVAL_METHOD \u003d\u003d 1\n#define excess_precision(type) __builtin_types_compatible_p(type, float)\n#else\n#define excess_precision(type) \\\n\t(__builtin_types_compatible_p(type, float) || __builtin_types_compatible_p(type, double))\n#endif\n#define math_narrow_eval(x) \\\n\t({ \\\n\t\t__typeof(x) math_narrow_eval_tmp \u003d (x); \\\n\t\tif (excess_precision(__typeof(math_narrow_eval_tmp))) \\\n\t\t\t__asm__(\"\" : \"+m\"(math_narrow_eval_tmp)); \\\n\t\tmath_narrow_eval_tmp; \\\n\t})\n```",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 44,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3d0fafdf_b47cf9f6",
        "filename": "src/system/libroot/posix/glibc/include/math-type-macros-double.h",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define M_USE_BUILTIN(c) USE_##c##_BUILTIN\n```",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 29,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9bb08829_80fd222a",
        "filename": "src/system/libroot/posix/glibc/include/math-type-macros-double.h",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define SET_NAN_PAYLOAD(flt, mant) \\\n\tdo { \\\n\t\tunion ieee754_double u; \\\n\t\tu.d \u003d (flt); \\\n\t\tu.ieee_nan.mantissa0 \u003d (mant) \u003e\u003e 32; \\\n\t\tu.ieee_nan.mantissa1 \u003d (mant); \\\n\t\tif ((u.ieee.mantissa0 | u.ieee.mantissa1) !\u003d 0) \\\n\t\t\t(flt) \u003d u.d; \\\n\t} while (0)\n```",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 41,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c0e5399b_2128ab36",
        "filename": "src/system/libroot/posix/glibc/include/math-type-macros-float.h",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define M_LIT(c) c##f\n```",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 22,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7ddd7d89_faa031ff",
        "filename": "src/system/libroot/posix/glibc/include/math-type-macros-float.h",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define M_SUF(c) c##f\n```",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 24,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "686fb9be_c1f64f53",
        "filename": "src/system/libroot/posix/glibc/include/math-type-macros-float.h",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define M_USE_BUILTIN(c) USE_##c##F_BUILTIN\n```",
      "range": {
        "startLine": 28,
        "startChar": 0,
        "endLine": 28,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4d6e5fc2_579a8455",
        "filename": "src/system/libroot/posix/glibc/include/math-type-macros-float.h",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define SET_NAN_PAYLOAD(flt, mant) \\\n\tdo { \\\n\t\tunion ieee754_float u; \\\n\t\tu.f \u003d (flt); \\\n\t\tu.ieee_nan.mantissa \u003d (mant); \\\n\t\tif (u.ieee.mantissa !\u003d 0) \\\n\t\t\t(flt) \u003d u.f; \\\n\t} while (0)\n```",
      "range": {
        "startLine": 30,
        "startChar": 0,
        "endLine": 39,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e988e2ac_7f3ffee6",
        "filename": "src/system/libroot/posix/glibc/include/math-type-macros-ldouble.h",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define M_LIT(c) c##L\n#define M_MLIT(c) c##l\n```",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 23,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5d337463_c8a90fb7",
        "filename": "src/system/libroot/posix/glibc/include/math-type-macros-ldouble.h",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define M_SUF(c) c##l\n```",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 25,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a52e8bb1_923db921",
        "filename": "src/system/libroot/posix/glibc/include/math-type-macros-ldouble.h",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define M_USE_BUILTIN(c) USE_##c##L_BUILTIN\n```",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 29,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "437dc532_136bb7d0",
        "filename": "src/system/libroot/posix/glibc/include/math-type-macros-ldouble.h",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define SET_NAN_PAYLOAD(flt, mant) \\\n\tdo { \\\n\t\tunion ieee854_long_double u; \\\n\t\tu.d \u003d (flt); \\\n\t\tu.ieee_nan.mantissa0 \u003d (mant) \u003e\u003e 32; \\\n\t\tu.ieee_nan.mantissa1 \u003d (mant); \\\n\t\tif ((u.ieee.mantissa0 | u.ieee.mantissa1) !\u003d 0) \\\n\t\t\t(flt) \u003d u.d; \\\n\t} while (0)\n```",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 41,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "233f7503_5019b6f0",
        "filename": "src/system/libroot/posix/glibc/include/math_ldbl_opt.h",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define ldbl_hidden_def(local, name) libc_hidden_def(name)\n#define ldbl_strong_alias(name, aliasname) strong_alias(name, aliasname)\n#define ldbl_weak_alias(name, aliasname) weak_alias(name, aliasname)\n#define ldbl_compat_symbol(lib, local, symbol, version) compat_symbol(lib, local, symbol, version)\n```",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 17,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bbca25d0_986675d5",
        "filename": "src/system/libroot/posix/glibc/include/rounding-mode.h",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define _ROUNDING_MODE_H 1\n```",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 20,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ac646562_a40da61e",
        "filename": "src/system/libroot/posix/glibc/include/rounding-mode.h",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nround_away(bool negative, bool last_digit_odd, bool half_bit, bool more_bits, int mode)\n```",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 44,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "88d5dde8_844d4c25",
        "filename": "src/system/libroot/posix/glibc/include/rounding-mode.h",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tswitch (mode) {\n\t\tcase FE_DOWNWARD:\n\t\t\treturn negative \u0026\u0026 (half_bit || more_bits);\n```",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 49,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "00995dc3_e787420d",
        "filename": "src/system/libroot/posix/glibc/include/rounding-mode.h",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\tcase FE_TONEAREST:\n\t\t\treturn half_bit \u0026\u0026 (last_digit_odd || more_bits);\n```",
      "range": {
        "startLine": 51,
        "startChar": 0,
        "endLine": 52,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7078e8c4_dacfaef5",
        "filename": "src/system/libroot/posix/glibc/include/rounding-mode.h",
        "patchSetId": 1
      },
      "lineNbr": 55,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\tcase FE_TOWARDZERO:\n\t\t\treturn false;\n```",
      "range": {
        "startLine": 54,
        "startChar": 0,
        "endLine": 55,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c2f475fd_ee8443fe",
        "filename": "src/system/libroot/posix/glibc/include/rounding-mode.h",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\tcase FE_UPWARD:\n\t\t\treturn !negative \u0026\u0026 (half_bit || more_bits);\n```",
      "range": {
        "startLine": 57,
        "startChar": 0,
        "endLine": 58,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2ece687c_bf9591cc",
        "filename": "src/system/libroot/posix/glibc/include/rounding-mode.h",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\tdefault:\n\t\t\tabort();\n\t}\n```",
      "range": {
        "startLine": 60,
        "startChar": 0,
        "endLine": 62,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9aa85cff_d5af46c8",
        "filename": "src/system/libroot/posix/glibc/include/stdlib.h",
        "patchSetId": 1
      },
      "lineNbr": 72,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nextern double ____strtod_l_internal(const char* __restrict __nptr, char** __restrict __endptr,\n\tint __group, locale_t __loc);\nextern float ____strtof_l_internal(const char* __restrict __nptr, char** __restrict __endptr,\n\tint __group, locale_t __loc);\nextern long double ____strtold_l_internal(const char* __restrict __nptr, char** __restrict __endptr,\n\tint __group, locale_t __loc);\n```",
      "range": {
        "startLine": 64,
        "startChar": 0,
        "endLine": 72,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eee042e0_f53a4205",
        "filename": "src/system/libroot/posix/glibc/include/stdlib.h",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nextern float __strtof_nan(const char*, char**, char);\nextern double __strtod_nan(const char*, char**, char);\nextern long double __strtold_nan(const char*, char**, char);\nextern float __wcstof_nan(const wchar_t*, wchar_t**, wchar_t);\nextern double __wcstod_nan(const wchar_t*, wchar_t**, wchar_t);\nextern long double __wcstold_nan(const wchar_t*, wchar_t**, wchar_t);\n```",
      "range": {
        "startLine": 74,
        "startChar": 0,
        "endLine": 79,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3ddfa42d_155cd9ce",
        "filename": "src/system/libroot/posix/glibc/include/sys/cdefs.h",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define __glibc_unlikely(cond) __builtin_expect((cond), 0)\n#define __glibc_likely(cond) __builtin_expect((cond), 1)\n```",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 9,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5e655028_bb3068d1",
        "filename": "src/system/libroot/posix/glibc/include/sys/cdefs.h",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define __glibc_unlikely(cond) (cond)\n#define __glibc_likely(cond) (cond)\n```",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 12,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fac71d63_0c764794",
        "filename": "src/system/libroot/posix/glibc/stdlib/grouping.c",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define MAX(a, b) \\\n\t({ \\\n\t\ttypeof(a) _a \u003d (a); \\\n\t\ttypeof(b) _b \u003d (b); \\\n\t\t_a \u003e _b ? _a : _b; \\\n\t})\n```",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 25,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b65fff81_20e8a440",
        "filename": "src/system/libroot/posix/glibc/stdlib/grouping.c",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#include \u003cwctype.h\u003e\n#define L_(Ch) L##Ch\n#define UCHAR_TYPE wint_t\n#define STRING_TYPE wchar_t\n```",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 32,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fc9d406a_7d8974ff",
        "filename": "src/system/libroot/posix/glibc/stdlib/grouping.c",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define L_(Ch) Ch\n#define UCHAR_TYPE unsigned char\n#define STRING_TYPE char\n```",
      "range": {
        "startLine": 34,
        "startChar": 0,
        "endLine": 36,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4e2e5aee_3eacb8c7",
        "filename": "src/system/libroot/posix/glibc/stdlib/grouping.c",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nconst STRING_TYPE*\n```",
      "range": {
        "startLine": 45,
        "startChar": 0,
        "endLine": 45,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "19a790df_f64b7a3e",
        "filename": "src/system/libroot/posix/glibc/stdlib/grouping.c",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n__correctly_grouped_prefixwc(const STRING_TYPE* begin, const STRING_TYPE* end, wchar_t thousands,\n```",
      "range": {
        "startLine": 47,
        "startChar": 0,
        "endLine": 48,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dbd72439_a7301a8e",
        "filename": "src/system/libroot/posix/glibc/stdlib/grouping.c",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n__correctly_grouped_prefixmb(const STRING_TYPE* begin, const STRING_TYPE* end,\n\tconst char* thousands,\n```",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 51,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aad10fb1_8ba1fb75",
        "filename": "src/system/libroot/posix/glibc/stdlib/grouping.c",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tconst char* grouping)\n```",
      "range": {
        "startLine": 53,
        "startChar": 0,
        "endLine": 53,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6b0fbcc1_d313a4c8",
        "filename": "src/system/libroot/posix/glibc/stdlib/grouping.c",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tsize_t thousands_len \u003d 1;\n```",
      "range": {
        "startLine": 56,
        "startChar": 0,
        "endLine": 56,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2a986626_aee63f6b",
        "filename": "src/system/libroot/posix/glibc/stdlib/grouping.c",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tsize_t thousands_len \u003d strlen(thousands);\n```",
      "range": {
        "startLine": 58,
        "startChar": 0,
        "endLine": 58,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2270fc36_5b5b916e",
        "filename": "src/system/libroot/posix/glibc/stdlib/grouping.c",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tif (grouping \u003d\u003d NULL)\n\t\treturn end;\n```",
      "range": {
        "startLine": 61,
        "startChar": 0,
        "endLine": 62,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8c025c72_dff7b7c2",
        "filename": "src/system/libroot/posix/glibc/stdlib/grouping.c",
        "patchSetId": 1
      },
      "lineNbr": 67,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\twhile (end - begin \u003e\u003d thousands_len) {\n\t\tconst STRING_TYPE* cp \u003d end - thousands_len;\n\t\tconst char* gp \u003d grouping;\n```",
      "range": {
        "startLine": 64,
        "startChar": 0,
        "endLine": 67,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "84e69b20_54608b3d",
        "filename": "src/system/libroot/posix/glibc/stdlib/grouping.c",
        "patchSetId": 1
      },
      "lineNbr": 71,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t/* Check first group.  */\n\t\twhile (cp \u003e\u003d begin) {\n```",
      "range": {
        "startLine": 69,
        "startChar": 0,
        "endLine": 71,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cd738936_a75806dd",
        "filename": "src/system/libroot/posix/glibc/stdlib/grouping.c",
        "patchSetId": 1
      },
      "lineNbr": 74,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\tif (*cp \u003d\u003d thousands)\n\t\t\t\tbreak;\n```",
      "range": {
        "startLine": 73,
        "startChar": 0,
        "endLine": 74,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4093900a_494150dd",
        "filename": "src/system/libroot/posix/glibc/stdlib/grouping.c",
        "patchSetId": 1
      },
      "lineNbr": 77,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\tif (memcmp(cp, thousands, thousands_len) \u003d\u003d 0)\n\t\t\t\tbreak;\n```",
      "range": {
        "startLine": 76,
        "startChar": 0,
        "endLine": 77,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ce7c62cc_5b8834ad",
        "filename": "src/system/libroot/posix/glibc/stdlib/grouping.c",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\t--cp;\n\t\t}\n\n\t\t/* We allow the representation to contain no grouping at all even if\n\t   the locale specifies we can have grouping.  */\n\t\tif (cp \u003c begin)\n\t\t\treturn end;\n\n\t\tif (end - cp \u003d\u003d (int)*gp + thousands_len) {\n\t\t\t/* This group matches the specification.  */\n\n\t\t\tconst STRING_TYPE* new_end;\n\n\t\t\tif (cp \u003c begin) {\n\t\t\t\t/* There is just one complete group.  We are done.  */\n\t\t\t\treturn end;\n\t\t\t}\n\n\t\t\t/* CP points to a thousands separator character.  The preceding\n\t\t\t   remainder of the string from BEGIN to NEW_END is the part we\n\t\t\t   will consider if there is a grouping error in this trailing\n\t\t\t   portion from CP to END.  */\n\t\t\tnew_end \u003d cp;\n\n\t\t\t/* Loop while the grouping is correct.  */\n\t\t\twhile (1) {\n\t\t\t\t/* Get the next grouping rule.  */\n\t\t\t\t++gp;\n\t\t\t\tif (*gp \u003d\u003d 0) {\n\t\t\t\t\t/* If end is reached use last rule.  */\n\t\t\t\t\t--gp;\n\t\t\t\t}\n\n\t\t\t\t/* Skip the thousands separator.  */\n\t\t\t\t--cp;\n\n\t\t\t\tif (*gp \u003d\u003d CHAR_MAX\n#if CHAR_MIN \u003c 0\n\t\t\t\t\t|| *gp \u003c 0\n#endif\n\t\t\t\t) {\n\t\t\t\t\t/* No more thousands separators are allowed to follow.  */\n\t\t\t\t\twhile (cp \u003e\u003d begin) {\n#ifdef USE_WIDE_CHAR\n\t\t\t\t\t\tif (*cp \u003d\u003d thousands)\n\t\t\t\t\t\t\tbreak;\n#else\n\t\t\t\t\t\tif (memcmp(cp, thousands, thousands_len) \u003d\u003d 0)\n\t\t\t\t\t\t\tbreak;\n#endif\n\t\t\t\t\t\t--cp;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (cp \u003c begin) {\n\t\t\t\t\t\t/* OK, only digits followed.  */\n\t\t\t\t\t\treturn end;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t/* Check the next group.  */\n\t\t\t\t\tconst STRING_TYPE* group_end \u003d cp;\n\n\t\t\t\t\twhile (cp \u003e\u003d begin) {\n#ifdef USE_WIDE_CHAR\n\t\t\t\t\t\tif (*cp \u003d\u003d thousands)\n\t\t\t\t\t\t\tbreak;\n#else\n\t\t\t\t\t\tif (memcmp(cp, thousands, thousands_len) \u003d\u003d 0)\n\t\t\t\t\t\t\tbreak;\n#endif\n\t\t\t\t\t\t--cp;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (cp \u003c begin \u0026\u0026 group_end - cp \u003c\u003d (int)*gp + thousands_len - 1) {\n\t\t\t\t\t\t/* Final group is correct.  */\n\t\t\t\t\t\treturn end;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (cp \u003c begin || group_end - cp !\u003d (int)*gp + thousands_len - 1) {\n\t\t\t\t\t\t/* Incorrect group.  Punt.  */\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/* The trailing portion of the string starting at NEW_END\n\t\t\t   contains a grouping error.  So we will look for a correctly\n\t\t\t   grouped number in the preceding portion instead.  */\n\t\t\tend \u003d new_end;\n\t\t} else {\n\t\t\t/* Even the first group was wrong; determine maximum shift.  */\n\t\t\tif (end - cp \u003e (int)*gp + thousands_len) {\n\t\t\t\tend \u003d cp + (int)*gp + thousands_len;\n\t\t\t} else if (cp \u003c begin) {\n\t\t\t\t/* This number does not fill the first group, but is correct.  */\n\t\t\t\treturn end;\n\t\t\t} else {\n\t\t\t\t/* CP points to a thousands separator character.  */\n\t\t\t\tend \u003d cp;\n\t\t\t}\n\t\t}\n```",
      "range": {
        "startLine": 79,
        "startChar": 0,
        "endLine": 79,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c62f9bdb_2dbe7c65",
        "filename": "src/system/libroot/posix/glibc/stdlib/grouping.c",
        "patchSetId": 1
      },
      "lineNbr": 184,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\treturn MAX(begin, end);\n```",
      "range": {
        "startLine": 82,
        "startChar": 0,
        "endLine": 184,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9b0d108b_ea95c973",
        "filename": "src/system/libroot/posix/glibc/stdlib/grouping.h",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nextern const wchar_t* __correctly_grouped_prefixwc(const wchar_t* begin, const wchar_t* end,\n\twchar_t thousands, const char* grouping);\n```",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 25,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7523b05f_827023dc",
        "filename": "src/system/libroot/posix/glibc/stdlib/grouping.h",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nextern const char* __correctly_grouped_prefixmb(const char* begin, const char* end,\n\tconst char* thousands, const char* grouping);\n```",
      "range": {
        "startLine": 27,
        "startChar": 0,
        "endLine": 30,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "14847916_8921afe4",
        "filename": "src/system/libroot/posix/glibc/stdlib/groupingwc.c",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define USE_WIDE_CHAR 1\n```",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 1,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c1029699_745040b8",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod.c",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define BUILD_DOUBLE 0\n```",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 22,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1c3ceae0_77c23f0b",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod.c",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define BUILD_DOUBLE 1\n```",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 24,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a8516f75_5f3f6ce5",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod.c",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#if __HAVE_FLOAT64 \u0026\u0026 !__HAVE_DISTINCT_FLOAT64\n#define strtof64 __hide_strtof64\n#define wcstof64 __hide_wcstof64\n```",
      "range": {
        "startLine": 28,
        "startChar": 0,
        "endLine": 30,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "001124e8_a007c818",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod.c",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#if __HAVE_FLOAT32X \u0026\u0026 !__HAVE_DISTINCT_FLOAT32X\n#define strtof32x __hide_strtof32x\n#define wcstof32x __hide_wcstof32x\n#endif\n```",
      "range": {
        "startLine": 32,
        "startChar": 0,
        "endLine": 35,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0ad53e1e_820fac21",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod.c",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (insert after):\n```c++\n#include \u003clocale/localeinfo.h\u003e\n```",
      "range": {
        "startLine": 37,
        "startChar": 0,
        "endLine": 37,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "188e3779_72cd5c45",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod.c",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` is to remove this line/these lines.",
      "range": {
        "startLine": 40,
        "startChar": 0,
        "endLine": 40,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0d09dac1_ae3cd0d4",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod.c",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#include \u003cmath_ldbl_opt.h\u003e\n#define FLOAT double\n#ifdef USE_WIDE_CHAR\n#define STRTOF wcstod\n#define STRTOF_L __wcstod_l\n#else\n#define STRTOF strtod\n#define STRTOF_L __strtod_l\n#endif\n```",
      "range": {
        "startLine": 44,
        "startChar": 0,
        "endLine": 52,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d3a1893f_4d323718",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod.c",
        "patchSetId": 1
      },
      "lineNbr": 67,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\n\nINTERNAL(STRTOF)(const STRING_TYPE* nptr, STRING_TYPE** endptr, int group)\n```",
      "range": {
        "startLine": 67,
        "startChar": 0,
        "endLine": 67,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "caca4d15_69fa489d",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod.c",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\treturn INTERNAL(STRTOF_L)(nptr, endptr, group, _NL_CURRENT_LOCALE);\n```",
      "range": {
        "startLine": 69,
        "startChar": 0,
        "endLine": 69,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "272eab6e_8492b2de",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod.c",
        "patchSetId": 1
      },
      "lineNbr": 72,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\n\nlibc_hidden_def(INTERNAL(STRTOF))\n```",
      "range": {
        "startLine": 72,
        "startChar": 0,
        "endLine": 72,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8e16d4e1_bf6b00e8",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod.c",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tFLOAT\n```",
      "range": {
        "startLine": 76,
        "startChar": 0,
        "endLine": 76,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6f13941b_8315e574",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod.c",
        "patchSetId": 1
      },
      "lineNbr": 78,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tweak_function\n```",
      "range": {
        "startLine": 78,
        "startChar": 0,
        "endLine": 78,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b3345484_4b7caa34",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod.c",
        "patchSetId": 1
      },
      "lineNbr": 80,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tSTRTOF(const STRING_TYPE* nptr, STRING_TYPE** endptr)\n```",
      "range": {
        "startLine": 80,
        "startChar": 0,
        "endLine": 80,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a57e8a84_0935c06c",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod.c",
        "patchSetId": 1
      },
      "lineNbr": 82,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\treturn INTERNAL(STRTOF_L)(nptr, endptr, 0, _NL_CURRENT_LOCALE);\n```",
      "range": {
        "startLine": 82,
        "startChar": 0,
        "endLine": 82,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8d784d33_0d346e71",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod.c",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nlibc_hidden_def(STRTOF)\n```",
      "range": {
        "startLine": 85,
        "startChar": 0,
        "endLine": 85,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "559fb15e_15dfbd60",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod.c",
        "patchSetId": 1
      },
      "lineNbr": 97,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#if LONG_DOUBLE_COMPAT(libc, GLIBC_2_0)\n#ifdef USE_WIDE_CHAR\n\tcompat_symbol(libc, wcstod, wcstold, GLIBC_2_0);\ncompat_symbol(libc, __wcstod_internal, __wcstold_internal, GLIBC_2_0);\n#else\n\tcompat_symbol(libc, strtod, strtold, GLIBC_2_0);\ncompat_symbol(libc, __strtod_internal, __strtold_internal, GLIBC_2_0);\n#endif\n#endif\n```",
      "range": {
        "startLine": 89,
        "startChar": 0,
        "endLine": 97,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "94ce66f6_bb4a1f60",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod.c",
        "patchSetId": 1
      },
      "lineNbr": 118,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#if __HAVE_FLOAT64 \u0026\u0026 !__HAVE_DISTINCT_FLOAT64\n#undef strtof64\n#undef wcstof64\n#ifdef USE_WIDE_CHAR\n\n\nweak_alias(wcstod, wcstof64)\n#else\n\n\nweak_alias(strtod, strtof64)\n```",
      "range": {
        "startLine": 101,
        "startChar": 0,
        "endLine": 118,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3e8b9ebf_10a29717",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod.c",
        "patchSetId": 1
      },
      "lineNbr": 119,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (insert after):\n```c++\n#endif\n#if __HAVE_FLOAT32X \u0026\u0026 !__HAVE_DISTINCT_FLOAT32X\n#undef strtof32x\n#undef wcstof32x\n#ifdef USE_WIDE_CHAR\n\tweak_alias(wcstod, wcstof32x)\n#else\n\tweak_alias(strtod, strtof32x)\n#endif\n#endif\n#endif\n```",
      "range": {
        "startLine": 119,
        "startChar": 0,
        "endLine": 119,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "07c2f091_6f4cad8d",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod_l.c",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define BUILD_DOUBLE 0\n#else\n#define BUILD_DOUBLE 1\n```",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 24,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "28c39870_700b71a5",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod_l.c",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#if __HAVE_FLOAT64 \u0026\u0026 !__HAVE_DISTINCT_FLOAT64\n#define strtof64_l __hide_strtof64_l\n#define wcstof64_l __hide_wcstof64_l\n#endif\n#if __HAVE_FLOAT32X \u0026\u0026 !__HAVE_DISTINCT_FLOAT32X\n#define strtof32x_l __hide_strtof32x_l\n#define wcstof32x_l __hide_wcstof32x_l\n#endif\n```",
      "range": {
        "startLine": 28,
        "startChar": 0,
        "endLine": 35,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "acad8e63_f82a2daf",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod_l.c",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nextern double ____strtod_l_internal(const char*, char**, int, locale_t);\n```",
      "range": {
        "startLine": 40,
        "startChar": 0,
        "endLine": 40,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2818a4e1_70079daf",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod_l.c",
        "patchSetId": 1
      },
      "lineNbr": 59,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#include \u003cmath_ldbl_opt.h\u003e\n#define FLOAT double\n#define FLT DBL\n#ifdef USE_WIDE_CHAR\n#define STRTOF wcstod_l\n#define __STRTOF __wcstod_l\n#define STRTOF_NAN __wcstod_nan\n#else\n#define STRTOF strtod_l\n#define __STRTOF __strtod_l\n#define STRTOF_NAN __strtod_nan\n#endif\n#define MPN2FLOAT __mpn_construct_double\n#define FLOAT_HUGE_VAL HUGE_VAL\n```",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 59,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6f3b9866_ed531f17",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod_l.c",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (insert after):\n```c++\n#include \"../locale/localeinfo.h\"\n```",
      "range": {
        "startLine": 62,
        "startChar": 0,
        "endLine": 62,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4ce9c9f6_a0e1b1df",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod_l.c",
        "patchSetId": 1
      },
      "lineNbr": 67,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` is to remove this line/these lines.",
      "range": {
        "startLine": 66,
        "startChar": 0,
        "endLine": 67,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8264d54d_382ecc7e",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod_l.c",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (insert after):\n```c++\n#include \u003cmath.h\u003e\n#include \u003crounding-mode.h\u003e\n#include \u003cstdint.h\u003e\n```",
      "range": {
        "startLine": 69,
        "startChar": 0,
        "endLine": 69,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "70dee414_d943e360",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod_l.c",
        "patchSetId": 1
      },
      "lineNbr": 73,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` is to remove this line/these lines.",
      "range": {
        "startLine": 72,
        "startChar": 0,
        "endLine": 73,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5fa1103a_4e3f9f83",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod_l.c",
        "patchSetId": 1
      },
      "lineNbr": 80,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (insert after):\n```c++\n#include \"fpioconst.h\"\n#include \"gmp-impl.h\"\n#include \"longlong.h\"\n```",
      "range": {
        "startLine": 80,
        "startChar": 0,
        "endLine": 80,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "99ff3343_7a967b9f",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod_l.c",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` is to remove this line/these lines.",
      "range": {
        "startLine": 83,
        "startChar": 0,
        "endLine": 85,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fd6f1209_8ef9c872",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod_l.c",
        "patchSetId": 1
      },
      "lineNbr": 97,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define _NL_CURRENT(category, item) (current-\u003evalues[_NL_ITEM_INDEX(item)].string)\n```",
      "range": {
        "startLine": 96,
        "startChar": 0,
        "endLine": 97,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3d30a61b_d22d43eb",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod_l.c",
        "patchSetId": 1
      },
      "lineNbr": 100,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define _NL_CURRENT_WORD(category, item) ((uint32_t)current-\u003evalues[_NL_ITEM_INDEX(item)].word)\n```",
      "range": {
        "startLine": 99,
        "startChar": 0,
        "endLine": 100,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0d50ee33_4e516296",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod_l.c",
        "patchSetId": 1
      },
      "lineNbr": 116,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#include \u003cwchar.h\u003e\n#endif\n\n#ifdef USE_WIDE_CHAR\n#include \u003cwctype.h\u003e\n#define STRING_TYPE wchar_t\n#define CHAR_TYPE wint_t\n#define L_(Ch) L##Ch\n#define ISSPACE(Ch) iswspace_l((Ch), loc)\n#define ISDIGIT(Ch) iswdigit_l((Ch), loc)\n#define ISXDIGIT(Ch) iswxdigit_l((Ch), loc)\n#define TOLOWER(Ch) towlower_l((Ch), loc)\n#define TOLOWER_C(Ch) towlower_l((Ch), _nl_C_locobj_ptr)\n```",
      "range": {
        "startLine": 104,
        "startChar": 0,
        "endLine": 116,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b1ebdedc_1e5f8c26",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod_l.c",
        "patchSetId": 1
      },
      "lineNbr": 131,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define STRNCASECMP(S1, S2, N) __wcsncasecmp_l((S1), (S2), (N), _nl_C_locobj_ptr)\n#else\n#define STRING_TYPE char\n#define CHAR_TYPE char\n#define L_(Ch) Ch\n#define ISSPACE(Ch) isspace_l((Ch), loc)\n#define ISDIGIT(Ch) isdigit_l((Ch), loc)\n#define ISXDIGIT(Ch) isxdigit_l((Ch), loc)\n#define TOLOWER(Ch) tolower_l((Ch), loc)\n#define TOLOWER_C(Ch) tolower_l((Ch), _nl_C_locobj_ptr)\n#define STRNCASECMP(S1, S2, N) strncasecmp_l((S1), (S2), (N), _nl_C_locobj_ptr)\n```",
      "range": {
        "startLine": 119,
        "startChar": 0,
        "endLine": 131,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d3dfd9a1_468ec4f5",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod_l.c",
        "patchSetId": 1
      },
      "lineNbr": 143,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define MANT_DIG PASTE(FLT, _MANT_DIG)\n#define DIG PASTE(FLT, _DIG)\n#define MAX_EXP PASTE(FLT, _MAX_EXP)\n#define MIN_EXP PASTE(FLT, _MIN_EXP)\n#define MAX_10_EXP PASTE(FLT, _MAX_10_EXP)\n#define MIN_10_EXP PASTE(FLT, _MIN_10_EXP)\n#define MAX_VALUE PASTE(FLT, _MAX)\n#define MIN_VALUE PASTE(FLT, _MIN)\n```",
      "range": {
        "startLine": 136,
        "startChar": 0,
        "endLine": 143,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4f1cbfac_ef114f13",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod_l.c",
        "patchSetId": 1
      },
      "lineNbr": 147,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define PASTE(a, b) PASTE1(a, b)\n#define PASTE1(a, b) a##b\n```",
      "range": {
        "startLine": 146,
        "startChar": 0,
        "endLine": 147,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2bfc1fb3_4f8dabf5",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod_l.c",
        "patchSetId": 1
      },
      "lineNbr": 151,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nextern FLOAT MPN2FLOAT(mp_srcptr mpn, int exponent, int negative);\n```",
      "range": {
        "startLine": 151,
        "startChar": 0,
        "endLine": 151,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aea02b63_91ff5612",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod_l.c",
        "patchSetId": 1
      },
      "lineNbr": 161,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#if BITS_PER_MP_LIMB \u003d\u003d 32\n#define MAX_DIG_PER_LIMB 9\n#define MAX_FAC_PER_LIMB 1000000000UL\n#elif BITS_PER_MP_LIMB \u003d\u003d 64\n#define MAX_DIG_PER_LIMB 19\n#define MAX_FAC_PER_LIMB 10000000000000000000ULL\n#else\n#error \"mp_limb_t size \" BITS_PER_MP_LIMB \"not accounted for\"\n```",
      "range": {
        "startLine": 154,
        "startChar": 0,
        "endLine": 161,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "178f07a5_8ac0dbeb",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod_l.c",
        "patchSetId": 1
      },
      "lineNbr": 175,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#ifndef howmany\n#define howmany(x, y) (((x) + ((y)-1)) / (y))\n#endif\n#define SWAP(x, y) \\\n\t({ \\\n\t\ttypeof(x) _tmp \u003d x; \\\n\t\tx \u003d y; \\\n\t\ty \u003d _tmp; \\\n\t})\n\n#define RETURN_LIMB_SIZE howmany(MANT_DIG, BITS_PER_MP_LIMB)\n\n#define RETURN(val, end) \\\n\tdo { \\\n\t\tif (endptr !\u003d NULL) \\\n\t\t\t*endptr \u003d (STRING_TYPE*)(end); \\\n\t\treturn val; \\\n\t} while (0)\n```",
      "range": {
        "startLine": 166,
        "startChar": 0,
        "endLine": 175,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "75b3badd_c6211a12",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod_l.c",
        "patchSetId": 1
      },
      "lineNbr": 182,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define MPNSIZE (howmany(1 + ((MANT_DIG - MIN_EXP + 2) * 10) / 3, BITS_PER_MP_LIMB) + 2)\n```",
      "range": {
        "startLine": 181,
        "startChar": 0,
        "endLine": 182,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d6b56d2d_6034e82c",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod_l.c",
        "patchSetId": 1
      },
      "lineNbr": 184,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define MPN_VAR(name) \\\n\tmp_limb_t name[MPNSIZE]; \\\n\tmp_size_t name##size\n```",
      "range": {
        "startLine": 184,
        "startChar": 0,
        "endLine": 184,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "049762c4_e2a8ab0e",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod_l.c",
        "patchSetId": 1
      },
      "lineNbr": 187,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define MPN_ASSIGN(dst, src) memcpy(dst, src, (dst##size \u003d src##size) * sizeof(mp_limb_t))\n```",
      "range": {
        "startLine": 186,
        "startChar": 0,
        "endLine": 187,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2008f18d_3a971c79",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod_l.c",
        "patchSetId": 1
      },
      "lineNbr": 193,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\noverflow_value(int negative)\n```",
      "range": {
        "startLine": 193,
        "startChar": 0,
        "endLine": 193,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "072bbd74_0378833c",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod_l.c",
        "patchSetId": 1
      },
      "lineNbr": 199,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tFLOAT result;\n\t__set_errno(ERANGE);\n\tresult \u003d math_narrow_eval((negative ? -MAX_VALUE : MAX_VALUE) * MAX_VALUE);\n\treturn result;\n```",
      "range": {
        "startLine": 195,
        "startChar": 0,
        "endLine": 199,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "82ad2678_df405206",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod_l.c",
        "patchSetId": 1
      },
      "lineNbr": 206,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nunderflow_value(int negative)\n```",
      "range": {
        "startLine": 206,
        "startChar": 0,
        "endLine": 206,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2d9884da_0a77fa15",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod_l.c",
        "patchSetId": 1
      },
      "lineNbr": 212,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tFLOAT result;\n\t__set_errno(ERANGE);\n\tresult \u003d math_narrow_eval((negative ? -MIN_VALUE : MIN_VALUE) * MIN_VALUE);\n\treturn result;\n```",
      "range": {
        "startLine": 208,
        "startChar": 0,
        "endLine": 212,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2fb9045f_2bf6f577",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod_l.c",
        "patchSetId": 1
      },
      "lineNbr": 220,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nround_and_return(mp_limb_t* retval, intmax_t exponent, int negative, mp_limb_t round_limb,\n\tmp_size_t round_bit, int more_bits)\n```",
      "range": {
        "startLine": 219,
        "startChar": 0,
        "endLine": 220,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "201e9c38_94a01221",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod_l.c",
        "patchSetId": 1
      },
      "lineNbr": 238,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tint mode \u003d get_rounding_mode();\n\n\tif (exponent \u003c MIN_EXP - 1) {\n\t\tmp_size_t shift;\n\t\tbool is_tiny, old_half_bit;\n\t\tif (exponent \u003c MIN_EXP - 1 - MANT_DIG)\n\t\t\treturn underflow_value(negative);\n\n\t\tshift \u003d MIN_EXP - 1 - exponent;\n\t\tis_tiny \u003d true;\n\t\told_half_bit \u003d (round_limb \u0026 (((mp_limb_t)1) \u003c\u003c round_bit)) !\u003d 0;\n\n\t\tmore_bits |\u003d (round_limb \u0026 ((((mp_limb_t)1) \u003c\u003c round_bit) - 1)) !\u003d 0;\n\t\tif (shift \u003d\u003d MANT_DIG)\n\t\t/* This is a special case to handle the very seldom case where\n\t\t   the mantissa will be empty after the shift.  */\n\t\t{\n\t\t\tint i;\n\n\t\t\tround_limb \u003d retval[RETURN_LIMB_SIZE - 1];\n\t\t\tround_bit \u003d (MANT_DIG - 1) % BITS_PER_MP_LIMB;\n\t\t\tfor (i \u003d 0; i \u003c RETURN_LIMB_SIZE - 1; ++i)\n\t\t\t\tmore_bits |\u003d retval[i] !\u003d 0;\n\t\t\tMPN_ZERO(retval, RETURN_LIMB_SIZE);\n\t\t} else if (shift \u003e\u003d BITS_PER_MP_LIMB) {\n\t\t\tint i;\n\n\t\t\tround_limb \u003d retval[(shift - 1) / BITS_PER_MP_LIMB];\n\t\t\tround_bit \u003d (shift - 1) % BITS_PER_MP_LIMB;\n\t\t\tfor (i \u003d 0; i \u003c (shift - 1) / BITS_PER_MP_LIMB; ++i)\n\t\t\t\tmore_bits |\u003d retval[i] !\u003d 0;\n\t\t\tmore_bits |\u003d ((round_limb \u0026 ((((mp_limb_t)1) \u003c\u003c round_bit) - 1)) !\u003d 0);\n\n\t\t\t/* __mpn_rshift requires 0 \u003c shift \u003c BITS_PER_MP_LIMB.  */\n\t\t\tif ((shift % BITS_PER_MP_LIMB) !\u003d 0) {\n\t\t\t\t(void)__mpn_rshift(retval, \u0026retval[shift / BITS_PER_MP_LIMB],\n\t\t\t\t\tRETURN_LIMB_SIZE - (shift / BITS_PER_MP_LIMB), shift % BITS_PER_MP_LIMB);\n\t\t\t} else {\n\t\t\t\tfor (i \u003d 0; i \u003c RETURN_LIMB_SIZE - (shift / BITS_PER_MP_LIMB); i++)\n\t\t\t\t\tretval[i] \u003d retval[i + (shift / BITS_PER_MP_LIMB)];\n\t\t\t}\n\t\t\tMPN_ZERO(\u0026retval[RETURN_LIMB_SIZE - (shift / BITS_PER_MP_LIMB)],\n\t\t\t\tshift / BITS_PER_MP_LIMB);\n\t\t} else if (shift \u003e 0) {\n\t\t\tif (TININESS_AFTER_ROUNDING \u0026\u0026 shift \u003d\u003d 1) {\n\t\t\t\t/* Whether the result counts as tiny depends on whether,\n\t\t\t   after rounding to the normal precision, it still has\n\t\t\t   a subnormal exponent.  */\n\t\t\t\tmp_limb_t retval_normal[RETURN_LIMB_SIZE];\n\t\t\t\tif (round_away(negative, (retval[0] \u0026 1) !\u003d 0,\n\t\t\t\t\t\t(round_limb \u0026 (((mp_limb_t)1) \u003c\u003c round_bit)) !\u003d 0,\n\t\t\t\t\t\t(more_bits || ((round_limb \u0026 ((((mp_limb_t)1) \u003c\u003c round_bit) - 1)) !\u003d 0)),\n\t\t\t\t\t\tmode)) {\n\t\t\t\t\tmp_limb_t cy \u003d __mpn_add_1(retval_normal, retval, RETURN_LIMB_SIZE, 1);\n\n\t\t\t\t\tif (((MANT_DIG % BITS_PER_MP_LIMB) \u003d\u003d 0 \u0026\u0026 cy)\n\t\t\t\t\t\t|| ((MANT_DIG % BITS_PER_MP_LIMB) !\u003d 0\n\t\t\t\t\t\t\t\u0026\u0026 ((retval_normal[RETURN_LIMB_SIZE - 1]\n\t\t\t\t\t\t\t\t\t\u0026 (((mp_limb_t)1) \u003c\u003c (MANT_DIG % BITS_PER_MP_LIMB)))\n\t\t\t\t\t\t\t\t!\u003d 0))) {\n\t\t\t\t\t\tis_tiny \u003d false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tround_limb \u003d retval[0];\n\t\t\tround_bit \u003d shift - 1;\n\t\t\t(void)__mpn_rshift(retval, retval, RETURN_LIMB_SIZE, shift);\n\t\t}\n\t\tmore_bits |\u003d old_half_bit;\n\t\t/* This is a hook for the m68k long double format, where the\n\t   exponent bias is the same for normalized and denormalized\n\t   numbers.  */\n#ifndef DENORM_EXP\n#define DENORM_EXP (MIN_EXP - 2)\n#endif\n\t\texponent \u003d DENORM_EXP;\n\t\tif (is_tiny\n\t\t\t\u0026\u0026 ((round_limb \u0026 (((mp_limb_t)1) \u003c\u003c round_bit)) !\u003d 0 || more_bits\n\t\t\t\t|| (round_limb \u0026 ((((mp_limb_t)1) \u003c\u003c round_bit) - 1)) !\u003d 0)) {\n\t\t\tFLOAT force_underflow;\n\t\t\t__set_errno(ERANGE);\n\t\t\tforce_underflow \u003d MIN_VALUE * MIN_VALUE;\n\t\t\tmath_force_eval(force_underflow);\n\t\t}\n\t}\n\n\tif (exponent \u003e\u003d MAX_EXP)\n\t\tgoto overflow;\n\n```",
      "range": {
        "startLine": 222,
        "startChar": 0,
        "endLine": 238,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fea04659_ff7fafc1",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod_l.c",
        "patchSetId": 1
      },
      "lineNbr": 368,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\tbool half_bit \u003d (round_limb \u0026 (((mp_limb_t)1) \u003c\u003c round_bit)) !\u003d 0;\n\t\tbool more_bits_nonzero\n\t\t\t\u003d (more_bits || (round_limb \u0026 ((((mp_limb_t)1) \u003c\u003c round_bit) - 1)) !\u003d 0);\n\t\tif (round_away(negative, (retval[0] \u0026 1) !\u003d 0, half_bit, more_bits_nonzero, mode)) {\n\t\t\tmp_limb_t cy \u003d __mpn_add_1(retval, retval, RETURN_LIMB_SIZE, 1);\n\n\t\t\tif (((MANT_DIG % BITS_PER_MP_LIMB) \u003d\u003d 0 \u0026\u0026 cy)\n\t\t\t\t|| ((MANT_DIG % BITS_PER_MP_LIMB) !\u003d 0\n\t\t\t\t\t\u0026\u0026 (retval[RETURN_LIMB_SIZE - 1]\n\t\t\t\t\t\t   \u0026 (((mp_limb_t)1) \u003c\u003c (MANT_DIG % BITS_PER_MP_LIMB)))\n\t\t\t\t\t\t!\u003d 0)) {\n\t\t\t\t++exponent;\n\t\t\t\t(void)__mpn_rshift(retval, retval, RETURN_LIMB_SIZE, 1);\n\t\t\t\tretval[RETURN_LIMB_SIZE - 1] |\u003d ((mp_limb_t)1)\n\t\t\t\t\t\u003c\u003c ((MANT_DIG - 1) % BITS_PER_MP_LIMB);\n\t\t\t} else if (exponent \u003d\u003d DENORM_EXP\n\t\t\t\t\u0026\u0026 (retval[RETURN_LIMB_SIZE - 1]\n\t\t\t\t\t   \u0026 (((mp_limb_t)1) \u003c\u003c ((MANT_DIG - 1) % BITS_PER_MP_LIMB)))\n\t\t\t\t\t!\u003d 0) {\n\t\t\t\t/* The number was denormalized but now normalized.  */\n\t\t\t\texponent \u003d MIN_EXP - 1;\n\t\t\t}\n\t\t}\n\n\t\tif (exponent \u003e\u003d MAX_EXP) {\n\t\toverflow:\n\t\t\treturn overflow_value(negative);\n\t\t}\n\n\t\tif (half_bit || more_bits_nonzero) {\n\t\t\tFLOAT force_inexact \u003d (FLOAT)1 + MIN_VALUE;\n\t\t\tmath_force_eval(force_inexact);\n\t\t}\n\t\treturn MPN2FLOAT(retval, exponent, negative);\n\t}\n```",
      "range": {
        "startLine": 240,
        "startChar": 0,
        "endLine": 368,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a59fbde9_14ec0469",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod_l.c",
        "patchSetId": 1
      },
      "lineNbr": 379,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nstatic const STRING_TYPE*\nstr_to_mpn(const STRING_TYPE* str, int digcnt, mp_limb_t* n, mp_size_t* nsize, intmax_t* exponent\n```",
      "range": {
        "startLine": 377,
        "startChar": 0,
        "endLine": 379,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "305e4528_9f9796c4",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod_l.c",
        "patchSetId": 1
      },
      "lineNbr": 384,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t,\n\tconst char* decimal, size_t decimal_len, const char* thousands\n#endif\n\n)\n```",
      "range": {
        "startLine": 381,
        "startChar": 0,
        "endLine": 384,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "830887d1_9d88e819",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod_l.c",
        "patchSetId": 1
      },
      "lineNbr": 470,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t/* Number of digits for actual limb.  */\n\tint cnt \u003d 0;\n\tmp_limb_t low \u003d 0;\n\tmp_limb_t start;\n\n\t*nsize \u003d 0;\n\tassert(digcnt \u003e 0);\n\tdo {\n\t\tif (cnt \u003d\u003d MAX_DIG_PER_LIMB) {\n\t\t\tif (*nsize \u003d\u003d 0) {\n\t\t\t\tn[0] \u003d low;\n\t\t\t\t*nsize \u003d 1;\n\t\t\t} else {\n\t\t\t\tmp_limb_t cy;\n\t\t\t\tcy \u003d __mpn_mul_1(n, n, *nsize, MAX_FAC_PER_LIMB);\n\t\t\t\tcy +\u003d __mpn_add_1(n, n, *nsize, low);\n\t\t\t\tif (cy !\u003d 0) {\n\t\t\t\t\tassert(*nsize \u003c MPNSIZE);\n\t\t\t\t\tn[*nsize] \u003d cy;\n\t\t\t\t\t++(*nsize);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcnt \u003d 0;\n\t\t\tlow \u003d 0;\n\t\t}\n\n\t\t/* There might be thousands separators or radix characters in\n\t   the string.  But these all can be ignored because we know the\n\t   format of the number is correct and we have an exact number\n\t   of characters to read.  */\n#ifdef USE_WIDE_CHAR\n\t\tif (*str \u003c L\u00270\u0027 || *str \u003e L\u00279\u0027)\n\t\t\t++str;\n#else\n\t\tif (*str \u003c \u00270\u0027 || *str \u003e \u00279\u0027) {\n\t\t\tint inner \u003d 0;\n\t\t\tif (thousands !\u003d NULL \u0026\u0026 *str \u003d\u003d *thousands \u0026\u0026 ({\n\t\t\t\t\tfor (inner \u003d 1; thousands[inner] !\u003d \u0027\\0\u0027; ++inner) {\n\t\t\t\t\t\tif (thousands[inner] !\u003d str[inner])\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tthousands[inner] \u003d\u003d \u0027\\0\u0027;\n\t\t\t\t})) {\n\t\t\t\tstr +\u003d inner;\n\t\t\t} else {\n\t\t\t\tstr +\u003d decimal_len;\n\t\t\t}\n\t\t}\n#endif\n\t\tlow \u003d low * 10 + *str++ - L_(\u00270\u0027);\n\t\t++cnt;\n\t} while (--digcnt \u003e 0);\n\n\tif (*exponent \u003e 0 \u0026\u0026 *exponent \u003c\u003d MAX_DIG_PER_LIMB - cnt) {\n\t\tlow *\u003d _tens_in_limb[*exponent];\n\t\tstart \u003d _tens_in_limb[cnt + *exponent];\n\t\t*exponent \u003d 0;\n\t} else {\n\t\tstart \u003d _tens_in_limb[cnt];\n\t}\n\n\tif (*nsize \u003d\u003d 0) {\n\t\tn[0] \u003d low;\n\t\t*nsize \u003d 1;\n\t} else {\n\t\tmp_limb_t cy;\n\t\tcy \u003d __mpn_mul_1(n, n, *nsize, start);\n\t\tcy +\u003d __mpn_add_1(n, n, *nsize, low);\n\t\tif (cy !\u003d 0) {\n\t\t\tassert(*nsize \u003c MPNSIZE);\n\t\t\tn[(*nsize)++] \u003d cy;\n\t\t}\n\t}\n\n\treturn str;\n```",
      "range": {
        "startLine": 386,
        "startChar": 0,
        "endLine": 470,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b55fc065_dd0cf9a1",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod_l.c",
        "patchSetId": 1
      },
      "lineNbr": 500,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tdo { \\\n\t\tmp_limb_t* __ptr \u003d (ptr); \\\n\t\tif (__builtin_constant_p(count) \u0026\u0026 count \u003d\u003d BITS_PER_MP_LIMB) { \\\n\t\t\tmp_size_t i; \\\n\t\t\tfor (i \u003d (size)-1; i \u003e 0; --i) \\\n\t\t\t\t__ptr[i] \u003d __ptr[i - 1]; \\\n\t\t\t__ptr[0] \u003d (limb); \\\n\t\t} else { \\\n\t\t\t/* We assume count \u003e 0 \u0026\u0026 count \u003c BITS_PER_MP_LIMB here.  */ \\\n\t\t\tunsigned int __count \u003d (count); \\\n\t\t\t(void)__mpn_lshift(__ptr, __ptr, size, __count); \\\n\t\t\t__ptr[0] |\u003d (limb) \u003e\u003e (BITS_PER_MP_LIMB - __count); \\\n\t\t} \\\n\t} while (0)\n```",
      "range": {
        "startLine": 482,
        "startChar": 0,
        "endLine": 500,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5d8575f5_721f2684",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod_l.c",
        "patchSetId": 1
      },
      "lineNbr": 506,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define ____STRTOF_INTERNAL INTERNAL(__STRTOF)\n```",
      "range": {
        "startLine": 506,
        "startChar": 0,
        "endLine": 506,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "99bb58f8_76545c7e",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod_l.c",
        "patchSetId": 1
      },
      "lineNbr": 520,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\n\n____STRTOF_INTERNAL(const STRING_TYPE* nptr, STRING_TYPE** endptr, int group, locale_t loc)\n```",
      "range": {
        "startLine": 519,
        "startChar": 0,
        "endLine": 520,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "18ef3765_c4fc5042",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod_l.c",
        "patchSetId": 1
      },
      "lineNbr": 548,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tint negative; /* The sign of the number.  */\n\tMPN_VAR(num); /* MP representation of the number.  */\n\tintmax_t exponent; /* Exponent of the number.  */\n\n\t/* Numbers starting `0X\u0027 or `0x\u0027 have to be processed with base 16.  */\n\tint base \u003d 10;\n\n\t/* When we have to compute fractional digits we form a fraction with a\n\t   second multi-precision number (and we sometimes need a second for\n\t   temporary results).  */\n\tMPN_VAR(den);\n\n\t/* Representation for the return value.  */\n\tmp_limb_t retval[RETURN_LIMB_SIZE];\n\t/* Number of bits currently in result value.  */\n\tint bits;\n\n\t/* Running pointer after the last character processed in the string.  */\n\tconst STRING_TYPE *cp, *tp;\n\t/* Start of significant part of the number.  */\n\tconst STRING_TYPE *startp, *start_of_digits;\n\t/* Points at the character following the integer and fractional digits.  */\n\tconst STRING_TYPE* expp;\n\t/* Total number of digit and number of digits in integer part.  */\n\tsize_t dig_no, int_no, lead_zero;\n\t/* Contains the last character read.  */\n\tCHAR_TYPE c;\n```",
      "range": {
        "startLine": 522,
        "startChar": 0,
        "endLine": 548,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0a400f63_5cdd71a7",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod_l.c",
        "patchSetId": 1
      },
      "lineNbr": 572,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\ttypedef unsigned int wint_t;\n#endif\n\t/* The radix character of the current locale.  */\n#ifdef USE_WIDE_CHAR\n\twchar_t decimal;\n#else\n\tconst char* decimal;\n\tsize_t decimal_len;\n#endif\n\t/* The thousands character of the current locale.  */\n#ifdef USE_WIDE_CHAR\n\twchar_t thousands \u003d L\u0027\\0\u0027;\n#else\n\tconst char* thousands \u003d NULL;\n#endif\n\t/* The numeric grouping specification of the current locale,\n\t   in the format described in \u003clocale.h\u003e.  */\n\tconst char* grouping;\n\t/* Used in several places.  */\n\tint cnt;\n```",
      "range": {
        "startLine": 553,
        "startChar": 0,
        "endLine": 572,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "10758a9a_fc73c358",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod_l.c",
        "patchSetId": 1
      },
      "lineNbr": 583,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tstruct __locale_data* current \u003d loc-\u003e__locales[LC_NUMERIC];\n#endif\n\n\tif (__glibc_unlikely(group)) {\n\t\tgrouping \u003d _NL_CURRENT(LC_NUMERIC, GROUPING);\n\t\tif (*grouping \u003c\u003d 0 || *grouping \u003d\u003d CHAR_MAX) {\n\t\t\tgrouping \u003d NULL;\n\t\t} else {\n\t\t\t/* Figure out the thousands separator character.  */\n#ifdef USE_WIDE_CHAR\n\t\t\tthousands \u003d _NL_CURRENT_WORD(LC_NUMERIC, _NL_NUMERIC_THOUSANDS_SEP_WC);\n\t\t\tif (thousands \u003d\u003d L\u0027\\0\u0027)\n\t\t\t\tgrouping \u003d NULL;\n#else\n\t\t\tthousands \u003d _NL_CURRENT(LC_NUMERIC, THOUSANDS_SEP);\n\t\t\tif (*thousands \u003d\u003d \u0027\\0\u0027) {\n\t\t\t\tthousands \u003d NULL;\n\t\t\t\tgrouping \u003d NULL;\n\t\t\t}\n#endif\n\t\t}\n\t} else {\n\t\tgrouping \u003d NULL;\n\t}\n\n\t/* Find the locale\u0027s decimal point character.  */\n#ifdef USE_WIDE_CHAR\n\tdecimal \u003d _NL_CURRENT_WORD(LC_NUMERIC, _NL_NUMERIC_DECIMAL_POINT_WC);\n\tassert(decimal !\u003d L\u0027\\0\u0027);\n#define decimal_len 1\n#else\n\tdecimal \u003d _NL_CURRENT(LC_NUMERIC, DECIMAL_POINT);\n\tdecimal_len \u003d strlen(decimal);\n\tassert(decimal_len \u003e 0);\n#endif\n\n\t/* Prepare number representation.  */\n\texponent \u003d 0;\n\tnegative \u003d 0;\n\tbits \u003d 0;\n\n\t/* Parse string to get maximal legal prefix.  We need the number of\n\t   characters of the integer part, the fractional part and the exponent.  */\n\tcp \u003d nptr - 1;\n\t/* Ignore leading white space.  */\n\tdo {\n\t\tc \u003d *++cp;\n\t} while (ISSPACE(c));\n\n\t/* Get sign of the result.  */\n\tif (c \u003d\u003d L_(\u0027-\u0027)) {\n\t\tnegative \u003d 1;\n\t\tc \u003d *++cp;\n\t} else if (c \u003d\u003d L_(\u0027+\u0027)) {\n\t\tc \u003d *++cp;\n\t}\n\n\t/* Return 0.0 if no legal string is found.\n\t   No character is used even if a sign was found.  */\n#ifdef USE_WIDE_CHAR\n\tif (c \u003d\u003d (wint_t)decimal \u0026\u0026 (wint_t)cp[1] \u003e\u003d L\u00270\u0027 \u0026\u0026 (wint_t)cp[1] \u003c\u003d L\u00279\u0027) {\n\t\t/* We accept it.  This funny construct is here only to indent\n\t   the code correctly.  */\n\t}\n#else\n\tfor (cnt \u003d 0; decimal[cnt] !\u003d \u0027\\0\u0027; ++cnt) {\n\t\tif (cp[cnt] !\u003d decimal[cnt])\n\t\t\tbreak;\n\t}\n\tif (decimal[cnt] \u003d\u003d \u0027\\0\u0027 \u0026\u0026 cp[cnt] \u003e\u003d \u00270\u0027 \u0026\u0026 cp[cnt] \u003c\u003d \u00279\u0027) {\n\t\t/* We accept it.  This funny construct is here only to indent\n\t   the code correctly.  */\n\t}\n#endif\n\telse if (c \u003c L_(\u00270\u0027) || c \u003e L_(\u00279\u0027)) {\n#ifdef __HAIKU__\n\t\tlocale_t _nl_C_locobj_ptr \u003d __posix_locale_t();\n#endif\n\n\t\t/* Check for `INF\u0027 or `INFINITY\u0027.  */\n\t\tCHAR_TYPE lowc \u003d TOLOWER_C(c);\n\n\t\tif (lowc \u003d\u003d L_(\u0027i\u0027) \u0026\u0026 STRNCASECMP(cp, L_(\"inf\"), 3) \u003d\u003d 0) {\n\t\t\t/* Return +/- infinity.  */\n\t\t\tif (endptr !\u003d NULL)\n\t\t\t\t*endptr \u003d (STRING_TYPE*)(cp + (STRNCASECMP(cp + 3, L_(\"inity\"), 5) \u003d\u003d 0 ? 8 : 3));\n\n\t\t\treturn negative ? -FLOAT_HUGE_VAL : FLOAT_HUGE_VAL;\n\t\t}\n\n\t\tif (lowc \u003d\u003d L_(\u0027n\u0027) \u0026\u0026 STRNCASECMP(cp, L_(\"nan\"), 3) \u003d\u003d 0) {\n\t\t\t/* Return NaN.  */\n\t\t\tFLOAT retval \u003d NAN;\n\n\t\t\tcp +\u003d 3;\n\n\t\t\t/* Match `(n-char-sequence-digit)\u0027.  */\n\t\t\tif (*cp \u003d\u003d L_(\u0027(\u0027)) {\n\t\t\t\tconst STRING_TYPE* startp \u003d cp;\n\t\t\t\tSTRING_TYPE* endp;\n\t\t\t\tretval \u003d STRTOF_NAN(cp + 1, \u0026endp, L_(\u0027)\u0027));\n\t\t\t\tif (*endp \u003d\u003d L_(\u0027)\u0027)) {\n\t\t\t\t\t/* Consume the closing parenthesis.  */\n\t\t\t\t\tcp \u003d endp + 1;\n\t\t\t\t} else {\n\t\t\t\t\t/* Only match the NAN part.  */\n\t\t\t\t\tcp \u003d startp;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (endptr !\u003d NULL)\n\t\t\t\t*endptr \u003d (STRING_TYPE*)cp;\n\n\t\t\treturn negative ? -retval : retval;\n\t\t}\n\n\t\t/* It is really a text we do not recognize.  */\n\t\tRETURN(0.0, nptr);\n\t}\n\n\t/* First look whether we are faced with a hexadecimal number.  */\n\tif (c \u003d\u003d L_(\u00270\u0027) \u0026\u0026 TOLOWER(cp[1]) \u003d\u003d L_(\u0027x\u0027)) {\n\t\t/* Okay, it is a hexa-decimal number.  Remember this and skip\n\t   the characters.  BTW: hexadecimal numbers must not be\n\t   grouped.  */\n\t\tbase \u003d 16;\n\t\tcp +\u003d 2;\n\t\tc \u003d *cp;\n\t\tgrouping \u003d NULL;\n\t}\n\n\t/* Record the start of the digits, in case we will check their grouping.  */\n\tstart_of_digits \u003d startp \u003d cp;\n\n\t/* Ignore leading zeroes.  This helps us to avoid useless computations.  */\n#ifdef USE_WIDE_CHAR\n\twhile (c \u003d\u003d L\u00270\u0027 || ((wint_t)thousands !\u003d L\u0027\\0\u0027 \u0026\u0026 c \u003d\u003d (wint_t)thousands))\n\t\tc \u003d *++cp;\n#else\n\tif (__glibc_likely(thousands \u003d\u003d NULL)) {\n\t\twhile (c \u003d\u003d \u00270\u0027)\n\t\t\tc \u003d *++cp;\n\t} else {\n\t\t/* We also have the multibyte thousands string.  */\n\t\twhile (1) {\n\t\t\tif (c !\u003d \u00270\u0027) {\n\t\t\t\tfor (cnt \u003d 0; thousands[cnt] !\u003d \u0027\\0\u0027; ++cnt) {\n\t\t\t\t\tif (thousands[cnt] !\u003d cp[cnt])\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (thousands[cnt] !\u003d \u0027\\0\u0027)\n\t\t\t\t\tbreak;\n\t\t\t\tcp +\u003d cnt - 1;\n\t\t\t}\n\t\t\tc \u003d *++cp;\n\t\t}\n\t}\n#endif\n\n```",
      "range": {
        "startLine": 575,
        "startChar": 0,
        "endLine": 583,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8344f68e_e9f26ed2",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod_l.c",
        "patchSetId": 1
      },
      "lineNbr": 665,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t/* If no other digit but a \u00270\u0027 is found the result is 0.0.\n\t\t   Return current read pointer.  */\n\t\tCHAR_TYPE lowc \u003d TOLOWER(c);\n\t\tif (!((c \u003e\u003d L_(\u00270\u0027) \u0026\u0026 c \u003c\u003d L_(\u00279\u0027)) || (base \u003d\u003d 16 \u0026\u0026 lowc \u003e\u003d L_(\u0027a\u0027) \u0026\u0026 lowc \u003c\u003d L_(\u0027f\u0027))\n\t\t\t\t|| (\n#ifdef USE_WIDE_CHAR\n\t\t\t\t\tc \u003d\u003d (wint_t)decimal\n#else\n\t\t\t\t\t({\n\t\t\t\t\t\tfor (cnt \u003d 0; decimal[cnt] !\u003d \u0027\\0\u0027; ++cnt)\n\t\t\t\t\t\t\tif (decimal[cnt] !\u003d cp[cnt])\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdecimal[cnt] \u003d\u003d \u0027\\0\u0027;\n\t\t\t\t\t})\n#endif\n\t\t\t\t\t/* \u00270x.\u0027 alone is not a valid hexadecimal number.\n\t\t\t\t\t   \u0027.\u0027 alone is not valid either, but that has been checked\n\t\t\t\t\t   already earlier.  */\n\t\t\t\t\t\u0026\u0026 (base !\u003d 16 || cp !\u003d start_of_digits\n\t\t\t\t\t\t|| (cp[decimal_len] \u003e\u003d L_(\u00270\u0027) \u0026\u0026 cp[decimal_len] \u003c\u003d L_(\u00279\u0027)) || ({\n\t\t\t\t\t\t\t   CHAR_TYPE lo \u003d TOLOWER(cp[decimal_len]);\n\t\t\t\t\t\t\t   lo \u003e\u003d L_(\u0027a\u0027) \u0026\u0026 lo \u003c\u003d L_(\u0027f\u0027);\n\t\t\t\t\t\t   })))\n\t\t\t\t|| (base \u003d\u003d 16 \u0026\u0026 (cp !\u003d start_of_digits \u0026\u0026 lowc \u003d\u003d L_(\u0027p\u0027)))\n\t\t\t\t|| (base !\u003d 16 \u0026\u0026 lowc \u003d\u003d L_(\u0027e\u0027)))) {\n#ifdef USE_WIDE_CHAR\n\t\t\ttp \u003d __correctly_grouped_prefixwc(start_of_digits, cp, thousands, grouping);\n#else\n\t\t\ttp \u003d __correctly_grouped_prefixmb(start_of_digits, cp, thousands, grouping);\n#endif\n\t\t\t/* If TP is at the start of the digits, there was no correctly\n\t\t   grouped prefix of the string; so no number found.  */\n\t\t\tRETURN(negative ? -0.0 : 0.0,\n\t\t\t\ttp \u003d\u003d start_of_digits ? (base \u003d\u003d 16 ? cp - 1 : nptr) : tp);\n\t\t}\n\n\t\t/* Remember first significant digit and read following characters until the\n\t\t   decimal point, exponent character or any non-FP number character.  */\n\t\tstartp \u003d cp;\n\t\tdig_no \u003d 0;\n\t\twhile (1) {\n\t\t\tif ((c \u003e\u003d L_(\u00270\u0027) \u0026\u0026 c \u003c\u003d L_(\u00279\u0027)) || (base \u003d\u003d 16 \u0026\u0026 ({\n\t\t\t\t\tCHAR_TYPE lo \u003d TOLOWER(c);\n\t\t\t\t\tlo \u003e\u003d L_(\u0027a\u0027) \u0026\u0026 lo \u003c\u003d L_(\u0027f\u0027);\n\t\t\t\t}))) {\n\t\t\t\t++dig_no;\n\t\t\t} else {\n#ifdef USE_WIDE_CHAR\n\t\t\t\tif (__builtin_expect((wint_t)thousands \u003d\u003d L\u0027\\0\u0027, 1) || c !\u003d (wint_t)thousands) {\n\t\t\t\t\t/* Not a digit or separator: end of the integer part.  */\n\t\t\t\t\tbreak;\n\t\t\t\t}\n#else\n\t\t\t\tif (__glibc_likely(thousands \u003d\u003d NULL)) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\tfor (cnt \u003d 0; thousands[cnt] !\u003d \u0027\\0\u0027; ++cnt) {\n\t\t\t\t\t\tif (thousands[cnt] !\u003d cp[cnt])\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (thousands[cnt] !\u003d \u0027\\0\u0027)\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcp +\u003d cnt - 1;\n\t\t\t\t}\n#endif\n\t\t\t}\n\t\t\tc \u003d *++cp;\n\t\t}\n\n\t\tif (__builtin_expect(grouping !\u003d NULL, 0) \u0026\u0026 cp \u003e start_of_digits) {\n\t\t\t/* Check the grouping of the digits.  */\n#ifdef USE_WIDE_CHAR\n\t\t\ttp \u003d __correctly_grouped_prefixwc(start_of_digits, cp, thousands, grouping);\n#else\n\t\t\ttp \u003d __correctly_grouped_prefixmb(start_of_digits, cp, thousands, grouping);\n#endif\n\t\t\tif (cp !\u003d tp) {\n\t\t\t\t/* Less than the entire string was correctly grouped.  */\n\n\t\t\t\tif (tp \u003d\u003d start_of_digits) {\n\t\t\t\t\t/* No valid group of numbers at all: no valid number.  */\n\t\t\t\t\tRETURN(0.0, nptr);\n\t\t\t\t}\n\n\t\t\t\tif (tp \u003c startp) {\n\t\t\t\t\t/* The number is validly grouped, but consists\n\t\t\t\t\t   only of zeroes.  The whole value is zero.  */\n\t\t\t\t\tRETURN(negative ? -0.0 : 0.0, tp);\n\t\t\t\t}\n\n\t\t\t\t/* Recompute DIG_NO so we won\u0027t read more digits than\n\t\t\t\t   are properly grouped.  */\n\t\t\t\tcp \u003d tp;\n\t\t\t\tdig_no \u003d 0;\n\t\t\t\tfor (tp \u003d startp; tp \u003c cp; ++tp) {\n\t\t\t\t\tif (*tp \u003e\u003d L_(\u00270\u0027) \u0026\u0026 *tp \u003c\u003d L_(\u00279\u0027))\n\t\t\t\t\t\t++dig_no;\n\t\t\t\t}\n\n\t\t\t\tint_no \u003d dig_no;\n\t\t\t\tlead_zero \u003d 0;\n\n\t\t\t\tgoto number_parsed;\n\t\t\t}\n\t\t}\n\n\t\t/* We have the number of digits in the integer part.  Whether these\n\t\t   are all or any is really a fractional digit will be decided\n\t\t   later.  */\n\t\tint_no \u003d dig_no;\n\t\tlead_zero \u003d int_no \u003d\u003d 0 ? (size_t)-1 : 0;\n\n\t\t/* Read the fractional digits.  A special case are the \u0027american\n\t\t   style\u0027 numbers like `16.\u0027 i.e. with decimal point but without\n\t\t   trailing digits.  */\n\t\tif (\n#ifdef USE_WIDE_CHAR\n\t\t\tc \u003d\u003d (wint_t)decimal\n#else\n\t\t\t({\n\t\t\t\tfor (cnt \u003d 0; decimal[cnt] !\u003d \u0027\\0\u0027; ++cnt)\n\t\t\t\t\tif (decimal[cnt] !\u003d cp[cnt])\n\t\t\t\t\t\tbreak;\n\t\t\t\tdecimal[cnt] \u003d\u003d \u0027\\0\u0027;\n\t\t\t})\n#endif\n\t\t) {\n\t\t\tcp +\u003d decimal_len;\n\t\t\tc \u003d *cp;\n\t\t\twhile ((c \u003e\u003d L_(\u00270\u0027) \u0026\u0026 c \u003c\u003d L_(\u00279\u0027)) || (base \u003d\u003d 16 \u0026\u0026 ({\n\t\t\t\tCHAR_TYPE lo \u003d TOLOWER(c);\n\t\t\t\tlo \u003e\u003d L_(\u0027a\u0027) \u0026\u0026 lo \u003c\u003d L_(\u0027f\u0027);\n\t\t\t}))) {\n\t\t\t\tif (c !\u003d L_(\u00270\u0027) \u0026\u0026 lead_zero \u003d\u003d (size_t)-1)\n\t\t\t\t\tlead_zero \u003d dig_no - int_no;\n\t\t\t\t++dig_no;\n\t\t\t\tc \u003d *++cp;\n\t\t\t}\n\t\t}\n\t\tassert(dig_no \u003c\u003d (uintmax_t)INTMAX_MAX);\n\n\t\t/* Remember start of exponent (if any).  */\n\t\texpp \u003d cp;\n\n\t\t/* Read exponent.  */\n\t\tlowc \u003d TOLOWER(c);\n\t\tif ((base \u003d\u003d 16 \u0026\u0026 lowc \u003d\u003d L_(\u0027p\u0027)) || (base !\u003d 16 \u0026\u0026 lowc \u003d\u003d L_(\u0027e\u0027))) {\n\t\t\tint exp_negative \u003d 0;\n\n\t\t\tc \u003d *++cp;\n\t\t\tif (c \u003d\u003d L_(\u0027-\u0027)) {\n\t\t\t\texp_negative \u003d 1;\n\t\t\t\tc \u003d *++cp;\n\t\t\t} else if (c \u003d\u003d L_(\u0027+\u0027)) {\n\t\t\t\tc \u003d *++cp;\n\t\t\t}\n\n\t\t\tif (c \u003e\u003d L_(\u00270\u0027) \u0026\u0026 c \u003c\u003d L_(\u00279\u0027)) {\n\t\t\t\tintmax_t exp_limit;\n\n\t\t\t\t/* Get the exponent limit. */\n\t\t\t\tif (base \u003d\u003d 16) {\n\t\t\t\t\tif (exp_negative) {\n\t\t\t\t\t\tassert(int_no \u003c\u003d (uintmax_t)(INTMAX_MAX + MIN_EXP - MANT_DIG) / 4);\n\t\t\t\t\t\texp_limit \u003d -MIN_EXP + MANT_DIG + 4 * (intmax_t)int_no;\n\t\t\t\t\t} else if (int_no) {\n\t\t\t\t\t\tassert(lead_zero \u003d\u003d 0 \u0026\u0026 int_no \u003c\u003d (uintmax_t)INTMAX_MAX / 4);\n\t\t\t\t\t\texp_limit \u003d MAX_EXP - 4 * (intmax_t)int_no + 3;\n\t\t\t\t\t} else if (lead_zero \u003d\u003d (size_t)-1) {\n\t\t\t\t\t\t/* The number is zero and this limit is\n\t\t\t\t\t   arbitrary.  */\n\t\t\t\t\t\texp_limit \u003d MAX_EXP + 3;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tassert(lead_zero \u003c\u003d (uintmax_t)(INTMAX_MAX - MAX_EXP - 3) / 4);\n\t\t\t\t\t\texp_limit \u003d (MAX_EXP + 4 * (intmax_t)lead_zero + 3);\n\t\t\t\t\t}\n\t\t\t\t} else if (exp_negative) {\n\t\t\t\t\tassert(int_no \u003c\u003d (uintmax_t)(INTMAX_MAX + MIN_10_EXP - MANT_DIG));\n\t\t\t\t\texp_limit \u003d -MIN_10_EXP + MANT_DIG + (intmax_t)int_no;\n\t\t\t\t} else if (int_no) {\n\t\t\t\t\tassert(lead_zero \u003d\u003d 0 \u0026\u0026 int_no \u003c\u003d (uintmax_t)INTMAX_MAX);\n\t\t\t\t\texp_limit \u003d MAX_10_EXP - (intmax_t)int_no + 1;\n\t\t\t\t} else if (lead_zero \u003d\u003d (size_t)-1) {\n\t\t\t\t\t/* The number is zero and this limit is\n\t\t\t\t   arbitrary.  */\n\t\t\t\t\texp_limit \u003d MAX_10_EXP + 1;\n\t\t\t\t} else {\n\t\t\t\t\tassert(lead_zero \u003c\u003d (uintmax_t)(INTMAX_MAX - MAX_10_EXP - 1));\n\t\t\t\t\texp_limit \u003d MAX_10_EXP + (intmax_t)lead_zero + 1;\n\t\t\t\t}\n\n\t\t\t\tif (exp_limit \u003c 0)\n\t\t\t\t\texp_limit \u003d 0;\n\n\t\t\t\tdo {\n\t\t\t\t\tif (__builtin_expect(\n\t\t\t\t\t\t\t(exponent \u003e exp_limit / 10\n\t\t\t\t\t\t\t\t|| (exponent \u003d\u003d exp_limit / 10 \u0026\u0026 c - L_(\u00270\u0027) \u003e exp_limit % 10)),\n\t\t\t\t\t\t\t0))\n\t\t\t\t\t/* The exponent is too large/small to represent a valid\n\t\t\t\t\t   number.  */\n\t\t\t\t\t{\n\t\t\t\t\t\tFLOAT result;\n\n\t\t\t\t\t\t/* We have to take care for special situation: a joker\n\t\t\t\t\t\t   might have written \"0.0e100000\" which is in fact\n\t\t\t\t\t\t   zero.  */\n\t\t\t\t\t\tif (lead_zero \u003d\u003d (size_t)-1) {\n\t\t\t\t\t\t\tresult \u003d negative ? -0.0 : 0.0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t/* Overflow or underflow.  */\n\t\t\t\t\t\t\tresult \u003d (exp_negative ? underflow_value(negative)\n\t\t\t\t\t\t\t\t\t\t\t\t   : overflow_value(negative));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/* Accept all following digits as part of the exponent.  */\n\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\t++cp;\n\t\t\t\t\t\t} while (*cp \u003e\u003d L_(\u00270\u0027) \u0026\u0026 *cp \u003c\u003d L_(\u00279\u0027));\n\n\t\t\t\t\t\tRETURN(result, cp);\n\t\t\t\t\t\t/* NOTREACHED */\n\t\t\t\t\t}\n\n\t\t\t\t\texponent *\u003d 10;\n\t\t\t\t\texponent +\u003d c - L_(\u00270\u0027);\n\n\t\t\t\t\tc \u003d *++cp;\n\t\t\t\t} while (c \u003e\u003d L_(\u00270\u0027) \u0026\u0026 c \u003c\u003d L_(\u00279\u0027));\n\n\t\t\t\tif (exp_negative)\n\t\t\t\t\texponent \u003d -exponent;\n\t\t\t} else {\n\t\t\t\tcp \u003d expp;\n\t\t\t}\n\t\t}\n\n\t\t/* We don\u0027t want to have to work with trailing zeroes after the radix.  */\n\t\tif (dig_no \u003e int_no) {\n\t\t\twhile (expp[-1] \u003d\u003d L_(\u00270\u0027)) {\n\t\t\t\t--expp;\n\t\t\t\t--dig_no;\n\t\t\t}\n\t\t\tassert(dig_no \u003e\u003d int_no);\n\t\t}\n\n\t\tif (dig_no \u003d\u003d int_no \u0026\u0026 dig_no \u003e 0 \u0026\u0026 exponent \u003c 0) {\n\t\t\tdo {\n\t\t\t\twhile (!(base \u003d\u003d 16 ? ISXDIGIT(expp[-1]) : ISDIGIT(expp[-1])))\n\t\t\t\t\t--expp;\n\n\t\t\t\tif (expp[-1] !\u003d L_(\u00270\u0027))\n\t\t\t\t\tbreak;\n\n\t\t\t\t--expp;\n\t\t\t\t--dig_no;\n\t\t\t\t--int_no;\n\t\t\t\texponent +\u003d base \u003d\u003d 16 ? 4 : 1;\n\t\t\t} while (dig_no \u003e 0 \u0026\u0026 exponent \u003c 0);\n\t\t}\n\t}\n\nnumber_parsed:\n\n\t/* The whole string is parsed.  Store the address of the next character.  */\n\tif (endptr)\n\t\t*endptr \u003d (STRING_TYPE*)cp;\n\n\tif (dig_no \u003d\u003d 0)\n\t\treturn negative ? -0.0 : 0.0;\n\n\tif (lead_zero) {\n\t\t/* Find the decimal point */\n#ifdef USE_WIDE_CHAR\n\t\twhile (*startp !\u003d decimal)\n\t\t\t++startp;\n#else\n\t\twhile (1) {\n\t\t\tif (*startp \u003d\u003d decimal[0]) {\n\t\t\t\tfor (cnt \u003d 1; decimal[cnt] !\u003d \u0027\\0\u0027; ++cnt) {\n\t\t\t\t\tif (decimal[cnt] !\u003d startp[cnt])\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (decimal[cnt] \u003d\u003d \u0027\\0\u0027)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\t++startp;\n\t\t}\n#endif\n\t\tstartp +\u003d lead_zero + decimal_len;\n\t\tassert(lead_zero \u003c\u003d (base \u003d\u003d 16 ? (uintmax_t)INTMAX_MAX / 4 : (uintmax_t)INTMAX_MAX));\n\t\tassert(lead_zero \u003c\u003d (base \u003d\u003d 16 ? ((uintmax_t)exponent - (uintmax_t)INTMAX_MIN) / 4\n\t\t\t\t\t\t\t\t\t\t: ((uintmax_t)exponent - (uintmax_t)INTMAX_MIN)));\n\t\texponent -\u003d base \u003d\u003d 16 ? 4 * (intmax_t)lead_zero : (intmax_t)lead_zero;\n\t\tdig_no -\u003d lead_zero;\n\t}\n\n\t/* If the BASE is 16 we can use a simpler algorithm.  */\n\tif (base \u003d\u003d 16) {\n\t\tstatic const int nbits[16] \u003d {0, 1, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4};\n\t\tint idx \u003d (MANT_DIG - 1) / BITS_PER_MP_LIMB;\n\t\tint pos \u003d (MANT_DIG - 1) % BITS_PER_MP_LIMB;\n\t\tmp_limb_t val;\n\n\t\twhile (!ISXDIGIT(*startp))\n\t\t\t++startp;\n\t\twhile (*startp \u003d\u003d L_(\u00270\u0027))\n\t\t\t++startp;\n\t\tif (ISDIGIT(*startp))\n\t\t\tval \u003d *startp++ - L_(\u00270\u0027);\n\t\telse\n\t\t\tval \u003d 10 + TOLOWER(*startp++) - L_(\u0027a\u0027);\n\t\tbits \u003d nbits[val];\n\t\t/* We cannot have a leading zero.  */\n\t\tassert(bits !\u003d 0);\n\n\t\tif (pos + 1 \u003e\u003d 4 || pos + 1 \u003e\u003d bits) {\n\t\t\t/* We don\u0027t have to care for wrapping.  This is the normal\n\t\t\t   case so we add the first clause in the `if\u0027 expression as\n\t\t\t   an optimization.  It is a compile-time constant and so does\n\t\t\t   not cost anything.  */\n\t\t\tretval[idx] \u003d val \u003c\u003c (pos - bits + 1);\n\t\t\tpos -\u003d bits;\n\t\t} else {\n\t\t\tretval[idx--] \u003d val \u003e\u003e (bits - pos - 1);\n\t\t\tretval[idx] \u003d val \u003c\u003c (BITS_PER_MP_LIMB - (bits - pos - 1));\n\t\t\tpos \u003d BITS_PER_MP_LIMB - 1 - (bits - pos - 1);\n\t\t}\n\n\t\t/* Adjust the exponent for the bits we are shifting in.  */\n\t\tassert(int_no \u003c\u003d (uintmax_t)(exponent \u003c 0 ? (INTMAX_MAX - bits + 1) / 4\n\t\t\t\t\t\t\t\t\t\t\t\t  : (INTMAX_MAX - exponent - bits + 1) / 4));\n\t\texponent +\u003d bits - 1 + ((intmax_t)int_no - 1) * 4;\n\n\t\twhile (--dig_no \u003e 0 \u0026\u0026 idx \u003e\u003d 0) {\n\t\t\tif (!ISXDIGIT(*startp))\n\t\t\t\tstartp +\u003d decimal_len;\n\t\t\tif (ISDIGIT(*startp))\n\t\t\t\tval \u003d *startp++ - L_(\u00270\u0027);\n\t\t\telse\n\t\t\t\tval \u003d 10 + TOLOWER(*startp++) - L_(\u0027a\u0027);\n\n\t\t\tif (pos + 1 \u003e\u003d 4) {\n\t\t\t\tretval[idx] |\u003d val \u003c\u003c (pos - 4 + 1);\n\t\t\t\tpos -\u003d 4;\n\t\t\t} else {\n\t\t\t\tretval[idx--] |\u003d val \u003e\u003e (4 - pos - 1);\n\t\t\t\tval \u003c\u003c\u003d BITS_PER_MP_LIMB - (4 - pos - 1);\n\t\t\t\tif (idx \u003c 0) {\n\t\t\t\t\tint rest_nonzero \u003d 0;\n\t\t\t\t\twhile (--dig_no \u003e 0) {\n\t\t\t\t\t\tif (*startp !\u003d L_(\u00270\u0027)) {\n\t\t\t\t\t\t\trest_nonzero \u003d 1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstartp++;\n\t\t\t\t\t}\n\t\t\t\t\treturn round_and_return(retval, exponent, negative, val, BITS_PER_MP_LIMB - 1,\n\t\t\t\t\t\trest_nonzero);\n\t\t\t\t}\n\n\t\t\t\tretval[idx] \u003d val;\n\t\t\t\tpos \u003d BITS_PER_MP_LIMB - 1 - (4 - pos - 1);\n\t\t\t}\n\t\t}\n\n\t\t/* We ran out of digits.  */\n\t\tMPN_ZERO(retval, idx);\n\n\t\treturn round_and_return(retval, exponent, negative, 0, 0, 0);\n\t}\n\n\t/* Now we have the number of digits in total and the integer digits as well\n\t   as the exponent and its sign.  We can decide whether the read digits are\n\t   really integer digits or belong to the fractional part; i.e. we normalize\n\t   123e-2 to 1.23.  */\n```",
      "range": {
        "startLine": 585,
        "startChar": 0,
        "endLine": 665,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "786bb1db_b4a46b01",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod_l.c",
        "patchSetId": 1
      },
      "lineNbr": 676,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\tintmax_t incr \u003d (exponent \u003c 0 ? MAX(-(intmax_t)int_no, exponent)\n\t\t\t\t\t\t\t\t\t  : MIN((intmax_t)dig_no - (intmax_t)int_no, exponent));\n\t\tint_no +\u003d incr;\n\t\texponent -\u003d incr;\n\t}\n\n\tif (__glibc_unlikely(exponent \u003e MAX_10_EXP + 1 - (intmax_t)int_no))\n\t\treturn overflow_value(negative);\n\n\t/* 10^(MIN_10_EXP-1) is not normal.  Thus, 10^(MIN_10_EXP-1) /\n\t   2^MANT_DIG is below half the least subnormal, so anything with a\n\t   base-10 exponent less than the base-10 exponent (which is\n\t   MIN_10_EXP - 1 - ceil(MANT_DIG*log10(2))) of that value\n\t   underflows.  DIG is floor((MANT_DIG-1)log10(2)), so an exponent\n\t   below MIN_10_EXP - (DIG + 3) underflows.  But EXPONENT is\n\t   actually an exponent multiplied only by a fractional part, not an\n\t   integer part, so an exponent below MIN_10_EXP - (DIG + 2)\n\t   underflows.  */\n\tif (__glibc_unlikely(exponent \u003c MIN_10_EXP - (DIG + 2)))\n\t\treturn underflow_value(negative);\n\n\tif (int_no \u003e 0) {\n\t\t/* Read the integer part as a multi-precision number to NUM.  */\n\t\tstartp \u003d str_to_mpn(startp, int_no, num, \u0026numsize, \u0026exponent\n#ifndef USE_WIDE_CHAR\n\t\t\t,\n\t\t\tdecimal, decimal_len, thousands\n#endif\n\t\t);\n\n\t\tif (exponent \u003e 0) {\n\t\t\t/* We now multiply the gained number by the given power of ten.  */\n\t\t\tmp_limb_t* psrc \u003d num;\n\t\t\tmp_limb_t* pdest \u003d den;\n\t\t\tint expbit \u003d 1;\n\t\t\tconst struct mp_power* ttab \u003d \u0026_fpioconst_pow10[0];\n\n\t\t\tdo {\n\t\t\t\tif ((exponent \u0026 expbit) !\u003d 0) {\n\t\t\t\t\tsize_t size \u003d ttab-\u003earraysize - _FPIO_CONST_OFFSET;\n\t\t\t\t\tmp_limb_t cy;\n\t\t\t\t\texponent ^\u003d expbit;\n\n\t\t\t\t\t/* FIXME: not the whole multiplication has to be\n\t\t\t\t\t   done.  If we have the needed number of bits we\n\t\t\t\t\t   only need the information whether more non-zero\n\t\t\t\t\t   bits follow.  */\n\t\t\t\t\tif (numsize \u003e\u003d ttab-\u003earraysize - _FPIO_CONST_OFFSET) {\n\t\t\t\t\t\tcy \u003d __mpn_mul(pdest, psrc, numsize,\n\t\t\t\t\t\t\t\u0026__tens[ttab-\u003earrayoff + _FPIO_CONST_OFFSET], size);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcy \u003d __mpn_mul(pdest, \u0026__tens[ttab-\u003earrayoff + _FPIO_CONST_OFFSET], size,\n\t\t\t\t\t\t\tpsrc, numsize);\n\t\t\t\t\t}\n\t\t\t\t\tnumsize +\u003d size;\n\t\t\t\t\tif (cy \u003d\u003d 0)\n\t\t\t\t\t\t--numsize;\n\t\t\t\t\t(void)SWAP(psrc, pdest);\n\t\t\t\t}\n\t\t\t\texpbit \u003c\u003c\u003d 1;\n\t\t\t\t++ttab;\n\t\t\t} while (exponent !\u003d 0);\n\n\t\t\tif (psrc \u003d\u003d den)\n\t\t\t\tmemcpy(num, den, numsize * sizeof(mp_limb_t));\n\t\t}\n\n\t\t/* Determine how many bits of the result we already have.  */\n\t\tcount_leading_zeros(bits, num[numsize - 1]);\n\t\tbits \u003d numsize * BITS_PER_MP_LIMB - bits;\n\n\t\t/* Now we know the exponent of the number in base two.\n\t   Check it against the maximum possible exponent.  */\n\t\tif (__glibc_unlikely(bits \u003e MAX_EXP))\n\t\t\treturn overflow_value(negative);\n\n\t\t/* We have already the first BITS bits of the result.  Together with\n\t   the information whether more non-zero bits follow this is enough\n\t   to determine the result.  */\n\t\tif (bits \u003e MANT_DIG) {\n\t\t\tint i;\n\t\t\tconst mp_size_t least_idx \u003d (bits - MANT_DIG) / BITS_PER_MP_LIMB;\n\t\t\tconst mp_size_t least_bit \u003d (bits - MANT_DIG) % BITS_PER_MP_LIMB;\n\t\t\tconst mp_size_t round_idx \u003d least_bit \u003d\u003d 0 ? least_idx - 1 : least_idx;\n\t\t\tconst mp_size_t round_bit \u003d least_bit \u003d\u003d 0 ? BITS_PER_MP_LIMB - 1 : least_bit - 1;\n\n\t\t\tif (least_bit \u003d\u003d 0) {\n\t\t\t\tmemcpy(retval, \u0026num[least_idx], RETURN_LIMB_SIZE * sizeof(mp_limb_t));\n\t\t\t} else {\n\t\t\t\tfor (i \u003d least_idx; i \u003c numsize - 1; ++i) {\n\t\t\t\t\tretval[i - least_idx]\n\t\t\t\t\t\t\u003d (num[i] \u003e\u003e least_bit) | (num[i + 1] \u003c\u003c (BITS_PER_MP_LIMB - least_bit));\n\t\t\t\t}\n\t\t\t\tif (i - least_idx \u003c RETURN_LIMB_SIZE)\n\t\t\t\t\tretval[RETURN_LIMB_SIZE - 1] \u003d num[i] \u003e\u003e least_bit;\n\t\t\t}\n\n\t\t\t/* Check whether any limb beside the ones in RETVAL are non-zero.  */\n\t\t\tfor (i \u003d 0; num[i] \u003d\u003d 0; ++i)\n\t\t\t\t;\n\n\t\t\treturn round_and_return(retval, bits - 1, negative, num[round_idx], round_bit,\n\t\t\t\tint_no \u003c dig_no || i \u003c round_idx);\n\t\t\t/* NOTREACHED */\n\t\t} else if (dig_no \u003d\u003d int_no) {\n\t\t\tconst mp_size_t target_bit \u003d (MANT_DIG - 1) % BITS_PER_MP_LIMB;\n\t\t\tconst mp_size_t is_bit \u003d (bits - 1) % BITS_PER_MP_LIMB;\n\n\t\t\tif (target_bit \u003d\u003d is_bit) {\n\t\t\t\tmemcpy(\u0026retval[RETURN_LIMB_SIZE - numsize], num, numsize * sizeof(mp_limb_t));\n\t\t\t\t/* FIXME: the following loop can be avoided if we assume a\n\t\t\t   maximal MANT_DIG value.  */\n\t\t\t\tMPN_ZERO(retval, RETURN_LIMB_SIZE - numsize);\n\t\t\t} else if (target_bit \u003e is_bit) {\n\t\t\t\t(void)__mpn_lshift(\u0026retval[RETURN_LIMB_SIZE - numsize], num, numsize,\n\t\t\t\t\ttarget_bit - is_bit);\n\t\t\t\t/* FIXME: the following loop can be avoided if we assume a\n\t\t\t   maximal MANT_DIG value.  */\n\t\t\t\tMPN_ZERO(retval, RETURN_LIMB_SIZE - numsize);\n\t\t\t} else {\n\t\t\t\tmp_limb_t cy;\n\t\t\t\tassert(numsize \u003c RETURN_LIMB_SIZE);\n\n\t\t\t\tcy \u003d __mpn_rshift(\u0026retval[RETURN_LIMB_SIZE - numsize], num, numsize,\n\t\t\t\t\tis_bit - target_bit);\n\t\t\t\tretval[RETURN_LIMB_SIZE - numsize - 1] \u003d cy;\n\t\t\t\t/* FIXME: the following loop can be avoided if we assume a\n\t\t\t   maximal MANT_DIG value.  */\n\t\t\t\tMPN_ZERO(retval, RETURN_LIMB_SIZE - numsize - 1);\n\t\t\t}\n\n\t\t\treturn round_and_return(retval, bits - 1, negative, 0, 0, 0);\n\t\t\t/* NOTREACHED */\n\t\t}\n\n\t\t/* Store the bits we already have.  */\n\t\tmemcpy(retval, num, numsize * sizeof(mp_limb_t));\n#if RETURN_LIMB_SIZE \u003e 1\n\t\tif (numsize \u003c RETURN_LIMB_SIZE)\n#if RETURN_LIMB_SIZE \u003d\u003d 2\n\t\t\tretval[numsize] \u003d 0;\n#else\n\t\t\tMPN_ZERO(retval + numsize, RETURN_LIMB_SIZE - numsize);\n#endif\n#endif\n\t}\n\n\t/* We have to compute at least some of the fractional digits.  */\n```",
      "range": {
        "startLine": 667,
        "startChar": 0,
        "endLine": 676,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "485a49f5_db17a841",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod_l.c",
        "patchSetId": 1
      },
      "lineNbr": 1167,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t/* We construct a fraction and the result of the division gives us\n\t\t   the needed digits.  The denominator is 1.0 multiplied by the\n\t\t   exponent of the lowest digit; i.e. 0.123 gives 123 / 1000 and\n\t\t   123e-6 gives 123 / 1000000.  */\n\n\t\tint expbit;\n\t\tint neg_exp;\n\t\tint more_bits;\n\t\tint need_frac_digits;\n\t\tmp_limb_t cy;\n\t\tmp_limb_t* psrc \u003d den;\n\t\tmp_limb_t* pdest \u003d num;\n\t\tconst struct mp_power* ttab \u003d \u0026_fpioconst_pow10[0];\n\n\t\tassert(dig_no \u003e int_no \u0026\u0026 exponent \u003c\u003d 0 \u0026\u0026 exponent \u003e\u003d MIN_10_EXP - (DIG + 2));\n\n\t\t/* We need to compute MANT_DIG - BITS fractional bits that lie\n\t\t   within the mantissa of the result, the following bit for\n\t\t   rounding, and to know whether any subsequent bit is 0.\n\t\t   Computing a bit with value 2^-n means looking at n digits after\n\t\t   the decimal point.  */\n\t\tif (bits \u003e 0) {\n\t\t\t/* The bits required are those immediately after the point.  */\n\t\t\tassert(int_no \u003e 0 \u0026\u0026 exponent \u003d\u003d 0);\n\t\t\tneed_frac_digits \u003d 1 + MANT_DIG - bits;\n\t\t} else {\n\t\t\tint neg_exp_2;\n\t\t\t/* The number is in the form .123eEXPONENT.  */\n\t\t\tassert(int_no \u003d\u003d 0 \u0026\u0026 *startp !\u003d L_(\u00270\u0027));\n\t\t\t/* The number is at least 10^(EXPONENT-1), and 10^3 \u003c\n\t\t\t   2^10.  */\n\t\t\tneg_exp_2 \u003d ((1 - exponent) * 10) / 3 + 1;\n\t\t\t/* The number is at least 2^-NEG_EXP_2.  We need up to\n\t\t\t   MANT_DIG bits following that bit.  */\n\t\t\tneed_frac_digits \u003d neg_exp_2 + MANT_DIG;\n\t\t\t/* However, we never need bits beyond 1/4 ulp of the smallest\n\t\t\t   representable value.  (That 1/4 ulp bit is only needed to\n\t\t\t   determine tinyness on machines where tinyness is determined\n\t\t\t   after rounding.)  */\n\t\t\tif (need_frac_digits \u003e MANT_DIG - MIN_EXP + 2)\n\t\t\t\tneed_frac_digits \u003d MANT_DIG - MIN_EXP + 2;\n\t\t\t/* At this point, NEED_FRAC_DIGITS is the total number of\n\t\t\t   digits needed after the point, but some of those may be\n\t\t\t   leading 0s.  */\n\t\t\tneed_frac_digits +\u003d exponent;\n\t\t\t/* Any cases underflowing enough that none of the fractional\n\t\t\t   digits are needed should have been caught earlier (such\n\t\t\t   cases are on the order of 10^-n or smaller where 2^-n is\n\t\t\t   the least subnormal).  */\n\t\t\tassert(need_frac_digits \u003e 0);\n\t\t}\n\n\t\tif (need_frac_digits \u003e (intmax_t)dig_no - (intmax_t)int_no)\n\t\t\tneed_frac_digits \u003d (intmax_t)dig_no - (intmax_t)int_no;\n\n\t\tif ((intmax_t)dig_no \u003e (intmax_t)int_no + need_frac_digits) {\n\t\t\tdig_no \u003d int_no + need_frac_digits;\n\t\t\tmore_bits \u003d 1;\n\t\t} else {\n\t\t\tmore_bits \u003d 0;\n\t\t}\n\n\t\tneg_exp \u003d (intmax_t)dig_no - (intmax_t)int_no - exponent;\n\n\t\t/* Construct the denominator.  */\n\t\tdensize \u003d 0;\n\t\texpbit \u003d 1;\n\t\tdo {\n\t\t\tif ((neg_exp \u0026 expbit) !\u003d 0) {\n\t\t\t\tmp_limb_t cy;\n\t\t\t\tneg_exp ^\u003d expbit;\n\n\t\t\t\tif (densize \u003d\u003d 0) {\n\t\t\t\t\tdensize \u003d ttab-\u003earraysize - _FPIO_CONST_OFFSET;\n\t\t\t\t\tmemcpy(psrc, \u0026__tens[ttab-\u003earrayoff + _FPIO_CONST_OFFSET],\n\t\t\t\t\t\tdensize * sizeof(mp_limb_t));\n\t\t\t\t} else {\n\t\t\t\t\tcy \u003d __mpn_mul(pdest, \u0026__tens[ttab-\u003earrayoff + _FPIO_CONST_OFFSET],\n\t\t\t\t\t\tttab-\u003earraysize - _FPIO_CONST_OFFSET, psrc, densize);\n\t\t\t\t\tdensize +\u003d ttab-\u003earraysize - _FPIO_CONST_OFFSET;\n\t\t\t\t\tif (cy \u003d\u003d 0)\n\t\t\t\t\t\t--densize;\n\t\t\t\t\t(void)SWAP(psrc, pdest);\n\t\t\t\t}\n\t\t\t}\n\t\t\texpbit \u003c\u003c\u003d 1;\n\t\t\t++ttab;\n\t\t} while (neg_exp !\u003d 0);\n\n\t\tif (psrc \u003d\u003d num)\n\t\t\tmemcpy(den, num, densize * sizeof(mp_limb_t));\n\n\t\t/* Read the fractional digits from the string.  */\n\t\t(void)str_to_mpn(startp, dig_no - int_no, num, \u0026numsize, \u0026exponent\n#ifndef USE_WIDE_CHAR\n\t\t\t,\n\t\t\tdecimal, decimal_len, thousands\n#endif\n\t\t);\n\n\t\t/* We now have to shift both numbers so that the highest bit in the\n\t\t   denominator is set.  In the same process we copy the numerator to\n\t\t   a high place in the array so that the division constructs the wanted\n\t\t   digits.  This is done by a \"quasi fix point\" number representation.\n\n\t\t   num:   ddddddddddd . 0000000000000000000000\n\t\t\t  |--- m ---|\n\t\t   den:                            ddddddddddd      n \u003e\u003d m\n\t\t\t\t\t\t   |--- n ---|\n\t\t */\n\n\t\tcount_leading_zeros(cnt, den[densize - 1]);\n\n\t\tif (cnt \u003e 0) {\n\t\t\t/* Don\u0027t call `mpn_shift\u0027 with a count of zero since the specification\n\t\t\t   does not allow this.  */\n\t\t\t(void)__mpn_lshift(den, den, densize, cnt);\n\t\t\tcy \u003d __mpn_lshift(num, num, numsize, cnt);\n\t\t\tif (cy !\u003d 0)\n\t\t\t\tnum[numsize++] \u003d cy;\n\t\t}\n\n\t\t/* Now we are ready for the division.  But it is not necessary to\n\t\t   do a full multi-precision division because we only need a small\n\t\t   number of bits for the result.  So we do not use __mpn_divmod\n\t\t   here but instead do the division here by hand and stop whenever\n\t\t   the needed number of bits is reached.  The code itself comes\n\t\t   from the GNU MP Library by Torbj\\\"orn Granlund.  */\n\n\t\texponent \u003d bits;\n\n\t\tswitch (densize) {\n\t\t\tcase 1:\n```",
      "range": {
        "startLine": 678,
        "startChar": 0,
        "endLine": 1167,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "760a7a55_0f38c544",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod_l.c",
        "patchSetId": 1
      },
      "lineNbr": 1596,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\t\tmp_limb_t d, n, quot;\n\t\t\t\tint used \u003d 0;\n\n\t\t\t\tn \u003d num[0];\n\t\t\t\td \u003d den[0];\n\t\t\t\tassert(numsize \u003d\u003d 1 \u0026\u0026 n \u003c d);\n\n\t\t\t\tdo {\n\t\t\t\t\tudiv_qrnnd(quot, n, n, 0, d);\n\n#define got_limb \\\n\tif (bits \u003d\u003d 0) { \\\n\t\tint cnt; \\\n\t\tif (quot \u003d\u003d 0) \\\n\t\t\tcnt \u003d BITS_PER_MP_LIMB; \\\n\t\telse \\\n\t\t\tcount_leading_zeros(cnt, quot); \\\n\t\texponent -\u003d cnt; \\\n\t\tif (BITS_PER_MP_LIMB - cnt \u003e MANT_DIG) { \\\n\t\t\tused \u003d MANT_DIG + cnt; \\\n\t\t\tretval[0] \u003d quot \u003e\u003e (BITS_PER_MP_LIMB - used); \\\n\t\t\tbits \u003d MANT_DIG + 1; \\\n\t\t} else { \\\n\t\t\t/* Note that we only clear the second element.  */ \\\n\t\t\t/* The conditional is determined at compile time.  */ \\\n\t\t\tif (RETURN_LIMB_SIZE \u003e 1) \\\n\t\t\t\tretval[1] \u003d 0; \\\n\t\t\tretval[0] \u003d quot; \\\n\t\t\tbits \u003d -cnt; \\\n\t\t} \\\n\t} else if (bits + BITS_PER_MP_LIMB \u003c\u003d MANT_DIG) \\\n\t\t__mpn_lshift_1(retval, RETURN_LIMB_SIZE, BITS_PER_MP_LIMB, quot); \\\n\telse { \\\n\t\tused \u003d MANT_DIG - bits; \\\n\t\tif (used \u003e 0) \\\n\t\t\t__mpn_lshift_1(retval, RETURN_LIMB_SIZE, used, quot); \\\n\t} \\\n\tbits +\u003d BITS_PER_MP_LIMB\n\n\t\t\t\t\tgot_limb;\n\t\t\t\t} while (bits \u003c\u003d MANT_DIG);\n\n\t\t\t\treturn round_and_return(retval, exponent - 1, negative, quot,\n\t\t\t\t\tBITS_PER_MP_LIMB - 1 - used, more_bits || n !\u003d 0);\n\t\t\t}\n\t\t\tcase 2:\n```",
      "range": {
        "startLine": 1169,
        "startChar": 0,
        "endLine": 1596,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c89e315a_9d8039ce",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod_l.c",
        "patchSetId": 1
      },
      "lineNbr": 1690,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\t\tmp_limb_t d0, d1, n0, n1;\n\t\t\t\tmp_limb_t quot \u003d 0;\n\t\t\t\tint used \u003d 0;\n\n\t\t\t\td0 \u003d den[0];\n\t\t\t\td1 \u003d den[1];\n\n\t\t\t\tif (numsize \u003c densize) {\n\t\t\t\t\tif (num[0] \u003e\u003d d1) {\n\t\t\t\t\t\t/* The numerator of the number occupies fewer bits than\n\t\t\t\t\t\t   the denominator but the one limb is bigger than the\n\t\t\t\t\t\t   high limb of the numerator.  */\n\t\t\t\t\t\tn1 \u003d 0;\n\t\t\t\t\t\tn0 \u003d num[0];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (bits \u003c\u003d 0) {\n\t\t\t\t\t\t\texponent -\u003d BITS_PER_MP_LIMB;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (bits + BITS_PER_MP_LIMB \u003c\u003d MANT_DIG) {\n\t\t\t\t\t\t\t\t__mpn_lshift_1(retval, RETURN_LIMB_SIZE, BITS_PER_MP_LIMB, 0);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tused \u003d MANT_DIG - bits;\n\t\t\t\t\t\t\t\tif (used \u003e 0)\n\t\t\t\t\t\t\t\t\t__mpn_lshift_1(retval, RETURN_LIMB_SIZE, used, 0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbits +\u003d BITS_PER_MP_LIMB;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tn1 \u003d num[0];\n\t\t\t\t\t\tn0 \u003d 0;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tn1 \u003d num[1];\n\t\t\t\t\tn0 \u003d num[0];\n\t\t\t\t}\n\n\t\t\t\twhile (bits \u003c\u003d MANT_DIG) {\n\t\t\t\t\tmp_limb_t r;\n\n\t\t\t\t\tif (n1 \u003d\u003d d1) {\n\t\t\t\t\t\t/* QUOT should be either 111..111 or 111..110.  We need\n\t\t\t\t\t\t   special treatment of this rare case as normal division\n\t\t\t\t\t\t   would give overflow.  */\n\t\t\t\t\t\tquot \u003d ~(mp_limb_t)0;\n\n\t\t\t\t\t\tr \u003d n0 + d1;\n\t\t\t\t\t\tif (r \u003c d1) /* Carry in the addition?  */\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tadd_ssaaaa(n1, n0, r - d0, 0, 0, d0);\n\t\t\t\t\t\t\tgoto have_quot;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tn1 \u003d d0 - (d0 !\u003d 0);\n\t\t\t\t\t\tn0 \u003d -d0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tudiv_qrnnd(quot, r, n1, n0, d1);\n\t\t\t\t\t\tumul_ppmm(n1, n0, d0, quot);\n\t\t\t\t\t}\n\n\t\t\t\tq_test:\n\t\t\t\t\tif (n1 \u003e r || (n1 \u003d\u003d r \u0026\u0026 n0 \u003e 0)) {\n\t\t\t\t\t\t/* The estimated QUOT was too large.  */\n\t\t\t\t\t\t--quot;\n\n\t\t\t\t\t\tsub_ddmmss(n1, n0, n1, n0, 0, d0);\n\t\t\t\t\t\tr +\u003d d1;\n\t\t\t\t\t\tif (r \u003e\u003d d1) /* If not carry, test QUOT again.  */\n\t\t\t\t\t\t\tgoto q_test;\n\t\t\t\t\t}\n\t\t\t\t\tsub_ddmmss(n1, n0, r, 0, n1, n0);\n\n\t\t\t\thave_quot:\n\t\t\t\t\tgot_limb;\n\t\t\t\t}\n\n\t\t\t\treturn round_and_return(retval, exponent - 1, negative, quot,\n\t\t\t\t\tBITS_PER_MP_LIMB - 1 - used, more_bits || n1 !\u003d 0 || n0 !\u003d 0);\n\t\t\t}\n\t\t\tdefault:\n\t\t\t{\n\t\t\t\tint i;\n\t\t\t\tmp_limb_t cy, dX, d1, n0, n1;\n\t\t\t\tmp_limb_t quot \u003d 0;\n\t\t\t\tint used \u003d 0;\n\n\t\t\t\tdX \u003d den[densize - 1];\n\t\t\t\td1 \u003d den[densize - 2];\n\n\t\t\t\t/* The division does not work if the upper limb of the two-limb\n\t\t\t\t   numerator is greater than or equal to the denominator.  */\n\t\t\t\tif (__mpn_cmp(num, \u0026den[densize - numsize], numsize) \u003e\u003d 0)\n\t\t\t\t\tnum[numsize++] \u003d 0;\n\n\t\t\t\tif (numsize \u003c densize) {\n\t\t\t\t\tmp_size_t empty \u003d densize - numsize;\n\t\t\t\t\tint i;\n\n\t\t\t\t\tif (bits \u003c\u003d 0) {\n\t\t\t\t\t\texponent -\u003d empty * BITS_PER_MP_LIMB;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (bits + empty * BITS_PER_MP_LIMB \u003c\u003d MANT_DIG) {\n\t\t\t\t\t\t\t/* We make a difference here because the compiler\n\t\t\t\t\t\t   cannot optimize the `else\u0027 case that good and\n\t\t\t\t\t\t   this reflects all currently used FLOAT types\n\t\t\t\t\t\t   and GMP implementations.  */\n```",
      "range": {
        "startLine": 1598,
        "startChar": 0,
        "endLine": 1690,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "14cb037e_c9f15c27",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod_l.c",
        "patchSetId": 1
      },
      "lineNbr": 1791,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\t\t\t\t\tassert(empty \u003d\u003d 1);\n\t\t\t\t\t\t\t__mpn_lshift_1(retval, RETURN_LIMB_SIZE, BITS_PER_MP_LIMB, 0);\n#else\n\t\t\t\t\t\t\tfor (i \u003d RETURN_LIMB_SIZE - 1; i \u003e\u003d empty; --i)\n\t\t\t\t\t\t\t\tretval[i] \u003d retval[i - empty];\n\t\t\t\t\t\t\twhile (i \u003e\u003d 0)\n\t\t\t\t\t\t\t\tretval[i--] \u003d 0;\n#endif\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tused \u003d MANT_DIG - bits;\n\t\t\t\t\t\t\tif (used \u003e\u003d BITS_PER_MP_LIMB) {\n\t\t\t\t\t\t\t\tint i;\n\t\t\t\t\t\t\t\t(void)__mpn_lshift(\u0026retval[used / BITS_PER_MP_LIMB], retval,\n\t\t\t\t\t\t\t\t\t(RETURN_LIMB_SIZE - used / BITS_PER_MP_LIMB),\n\t\t\t\t\t\t\t\t\tused % BITS_PER_MP_LIMB);\n\t\t\t\t\t\t\t\tfor (i \u003d used / BITS_PER_MP_LIMB - 1; i \u003e\u003d 0; --i)\n\t\t\t\t\t\t\t\t\tretval[i] \u003d 0;\n\t\t\t\t\t\t\t} else if (used \u003e 0) {\n\t\t\t\t\t\t\t\t__mpn_lshift_1(retval, RETURN_LIMB_SIZE, used, 0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbits +\u003d empty * BITS_PER_MP_LIMB;\n\t\t\t\t\t}\n\t\t\t\t\tfor (i \u003d numsize; i \u003e 0; --i)\n\t\t\t\t\t\tnum[i + empty] \u003d num[i - 1];\n\t\t\t\t\tMPN_ZERO(num, empty + 1);\n\t\t\t\t} else {\n\t\t\t\t\tint i;\n\t\t\t\t\tassert(numsize \u003d\u003d densize);\n\t\t\t\t\tfor (i \u003d numsize; i \u003e 0; --i)\n\t\t\t\t\t\tnum[i] \u003d num[i - 1];\n\t\t\t\t\tnum[0] \u003d 0;\n\t\t\t\t}\n\n\t\t\t\tden[densize] \u003d 0;\n\t\t\t\tn0 \u003d num[densize];\n\n\t\t\t\twhile (bits \u003c\u003d MANT_DIG) {\n\t\t\t\t\tif (n0 \u003d\u003d dX) {\n\t\t\t\t\t\t/* This might over-estimate QUOT, but it\u0027s probably not\n\t\t\t\t\t\t   worth the extra code here to find out.  */\n\t\t\t\t\t\tquot \u003d ~(mp_limb_t)0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmp_limb_t r;\n\n\t\t\t\t\t\tudiv_qrnnd(quot, r, n0, num[densize - 1], dX);\n\t\t\t\t\t\tumul_ppmm(n1, n0, d1, quot);\n\n\t\t\t\t\t\twhile (n1 \u003e r || (n1 \u003d\u003d r \u0026\u0026 n0 \u003e num[densize - 2])) {\n\t\t\t\t\t\t\t--quot;\n\t\t\t\t\t\t\tr +\u003d dX;\n\t\t\t\t\t\t\tif (r \u003c dX) /* I.e. \"carry in previous addition?\" */\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tn1 -\u003d n0 \u003c d1;\n\t\t\t\t\t\t\tn0 -\u003d d1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t/* Possible optimization: We already have (q * n0) and (1 * n1)\n\t\t\t\t   after the calculation of QUOT.  Taking advantage of this, we\n\t\t\t\t   could make this loop make two iterations less.  */\n\n\t\t\t\t\tcy \u003d __mpn_submul_1(num, den, densize + 1, quot);\n\n\t\t\t\t\tif (num[densize] !\u003d cy) {\n\t\t\t\t\t\tcy \u003d __mpn_add_n(num, num, den, densize);\n\t\t\t\t\t\tassert(cy !\u003d 0);\n\t\t\t\t\t\t--quot;\n\t\t\t\t\t}\n\t\t\t\t\tn0 \u003d num[densize] \u003d num[densize - 1];\n\t\t\t\t\tfor (i \u003d densize - 1; i \u003e 0; --i)\n\t\t\t\t\t\tnum[i] \u003d num[i - 1];\n\t\t\t\t\tnum[0] \u003d 0;\n\n\t\t\t\t\tgot_limb;\n\t\t\t\t}\n\n\t\t\t\tfor (i \u003d densize; i \u003e\u003d 0 \u0026\u0026 num[i] \u003d\u003d 0; --i)\n\t\t\t\t\t;\n\t\t\t\treturn round_and_return(retval, exponent - 1, negative, quot,\n\t\t\t\t\tBITS_PER_MP_LIMB - 1 - used, more_bits || i \u003e\u003d 0);\n\t\t\t}\n\t\t}\n\t}\n\n\t/* NOTREACHED */\n```",
      "range": {
        "startLine": 1692,
        "startChar": 0,
        "endLine": 1791,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c2ba2f68_ff74a057",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod_l.c",
        "patchSetId": 1
      },
      "lineNbr": 1799,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\n\nlibc_hidden_def(____STRTOF_INTERNAL)\n#endif\n\n\t/* External user entry point.  */\n\n\tFLOAT\n```",
      "range": {
        "startLine": 1794,
        "startChar": 0,
        "endLine": 1799,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5e5e0375_82b44f7c",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod_l.c",
        "patchSetId": 1
      },
      "lineNbr": 1803,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tweak_function\n#endif\n\t__STRTOF(const STRING_TYPE* nptr, STRING_TYPE** endptr, locale_t loc)\n```",
      "range": {
        "startLine": 1801,
        "startChar": 0,
        "endLine": 1803,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ba42bc65_7056f02e",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod_l.c",
        "patchSetId": 1
      },
      "lineNbr": 1805,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\treturn ____STRTOF_INTERNAL(nptr, endptr, 0, loc);\n```",
      "range": {
        "startLine": 1805,
        "startChar": 0,
        "endLine": 1805,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "72c2b103_eb6d3647",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod_l.c",
        "patchSetId": 1
      },
      "lineNbr": 1809,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nlibc_hidden_def(__STRTOF) libc_hidden_ver(__STRTOF, STRTOF)\n```",
      "range": {
        "startLine": 1808,
        "startChar": 0,
        "endLine": 1809,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ef952213_31939899",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod_l.c",
        "patchSetId": 1
      },
      "lineNbr": 1812,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tweak_alias(__STRTOF, STRTOF)\n```",
      "range": {
        "startLine": 1812,
        "startChar": 0,
        "endLine": 1812,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8ed06eb2_b74e4aa4",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod_l.c",
        "patchSetId": 1
      },
      "lineNbr": 1829,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#if LONG_DOUBLE_COMPAT(libc, GLIBC_2_1)\n#ifdef USE_WIDE_CHAR\n\t\tcompat_symbol(libc, __wcstod_l, __wcstold_l, GLIBC_2_1);\n#else\n\t\tcompat_symbol(libc, __strtod_l, __strtold_l, GLIBC_2_1);\n#endif\n#endif\n#if LONG_DOUBLE_COMPAT(libc, GLIBC_2_3)\n#ifdef USE_WIDE_CHAR\ncompat_symbol(libc, wcstod_l, wcstold_l, GLIBC_2_3);\n#else\ncompat_symbol(libc, strtod_l, strtold_l, GLIBC_2_3);\n#endif\n#endif\n```",
      "range": {
        "startLine": 1816,
        "startChar": 0,
        "endLine": 1829,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fdb57f15_b6664d63",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod_l.c",
        "patchSetId": 1
      },
      "lineNbr": 1851,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#if __HAVE_FLOAT64 \u0026\u0026 !__HAVE_DISTINCT_FLOAT64\n#undef strtof64_l\n#undef wcstof64_l\n#ifdef USE_WIDE_CHAR\n\n\nweak_alias(wcstod_l, wcstof64_l)\n#else\n\n\nweak_alias(strtod_l, strtof64_l)\n#endif\n#endif\n#if __HAVE_FLOAT32X \u0026\u0026 !__HAVE_DISTINCT_FLOAT32X\n#undef strtof32x_l\n#undef wcstof32x_l\n#ifdef USE_WIDE_CHAR\n\tweak_alias(wcstod_l, wcstof32x_l)\n#else\n\tweak_alias(strtod_l, strtof32x_l)\n#endif\n#endif\n#endif\n```",
      "range": {
        "startLine": 1833,
        "startChar": 0,
        "endLine": 1851,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "80e590fa_07aecb0f",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod_nan.c",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (insert after):\n```c++\n#include \u003cmath-type-macros-double.h\u003e\n```",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 19,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7380a9a0_9b3a04aa",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod_nan.c",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` is to remove this line/these lines.",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 21,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "174aaefe_5c8477f4",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod_nan_main.c",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\n\nSTRTOD_NAN(const STRING_TYPE* str, STRING_TYPE** endptr, STRING_TYPE endc)\n```",
      "range": {
        "startLine": 34,
        "startChar": 0,
        "endLine": 34,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "40d5a6b5_fc053cff",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod_nan_main.c",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tFLOAT retval;\n\tSTRING_TYPE* endp;\n\tint save_errno;\n\tunsigned long long int mant;\n\tconst STRING_TYPE* cp \u003d str;\n```",
      "range": {
        "startLine": 36,
        "startChar": 0,
        "endLine": 40,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "217e55d1_2cf5bf44",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod_nan_main.c",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\twhile ((*cp \u003e\u003d L_(\u00270\u0027) \u0026\u0026 *cp \u003c\u003d L_(\u00279\u0027)) || (*cp \u003e\u003d L_(\u0027A\u0027) \u0026\u0026 *cp \u003c\u003d L_(\u0027Z\u0027))\n\t\t|| (*cp \u003e\u003d L_(\u0027a\u0027) \u0026\u0026 *cp \u003c\u003d L_(\u0027z\u0027)) || *cp \u003d\u003d L_(\u0027_\u0027)) {\n\t\t++cp;\n\t}\n```",
      "range": {
        "startLine": 42,
        "startChar": 0,
        "endLine": 46,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a3ed174d_b8385efc",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod_nan_main.c",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tretval \u003d NAN;\n\tif (*cp !\u003d endc)\n\t\tgoto out;\n```",
      "range": {
        "startLine": 48,
        "startChar": 0,
        "endLine": 50,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0d2f90df_d17baec1",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod_nan_main.c",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t/* This is a system-dependent way to specify the bitmask used for\n\t   the NaN.  We expect it to be a number which is put in the\n\t   mantissa of the number.  */\n```",
      "range": {
        "startLine": 52,
        "startChar": 0,
        "endLine": 54,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "193261dc_d1038be5",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod_nan_main.c",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tsave_errno \u003d errno;\n\tmant \u003d STRTOULL(str, \u0026endp, 0);\n\t__set_errno(save_errno);\n\tif (endp \u003d\u003d cp)\n\t\tSET_NAN_PAYLOAD(retval, mant);\n```",
      "range": {
        "startLine": 56,
        "startChar": 0,
        "endLine": 60,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "326f2de8_6f75c82b",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod_nan_main.c",
        "patchSetId": 1
      },
      "lineNbr": 65,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nout:\n\tif (endptr !\u003d NULL)\n\t\t*endptr \u003d (STRING_TYPE*)cp;\n\treturn retval;\n```",
      "range": {
        "startLine": 62,
        "startChar": 0,
        "endLine": 65,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a6bbaf6e_d767d0c6",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod_nan_main.c",
        "patchSetId": 1
      },
      "lineNbr": 67,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\n\nlibc_hidden_def(STRTOD_NAN)\n```",
      "range": {
        "startLine": 67,
        "startChar": 0,
        "endLine": 67,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aaf77fb3_1085850a",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod_nan_narrow.h",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nunsigned long long __strtoull_l(const char* nptr, char** endptr, int base, locale_t locale);\n```",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 23,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "056fae9e_c90a4b43",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod_nan_narrow.h",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define STRTOULL(S, E, B) ____strtoull_l_internal((S), (E), (B), 0, false, _nl_C_locobj_ptr)\n```",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 27,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "24b8408b_104cf6be",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod_nan_wide.h",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nextern unsigned long long int ____wcstoull_l_internal(const wchar_t*, wchar_t**, int, int, uint8_t,\n\tlocale_t);\n#define STRTOULL(S, E, B) ____wcstoull_l_internal((S), (E), (B), 0, 0, __posix_locale_t())\n```",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 27,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eabe6a84_bfbe77a6",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtod_nan_wide.h",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define STRTOULL(S, E, B) ____wcstoull_l_internal((S), (E), (B), 0, false, _nl_C_locobj_ptr)\n```",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 30,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9fe9e5ad_017f32bc",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtof.c",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define strtof32 __hide_strtof32\n#define wcstof32 __hide_wcstof32\n```",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 26,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f28b5067_e41f0449",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtof.c",
        "patchSetId": 1
      },
      "lineNbr": 33,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define STRTOF wcstof\n#define STRTOF_L __wcstof_l\n```",
      "range": {
        "startLine": 32,
        "startChar": 0,
        "endLine": 33,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cfacf0f1_a2fe5fe0",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtof.c",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define STRTOF_L __strtof_l\n```",
      "range": {
        "startLine": 36,
        "startChar": 0,
        "endLine": 36,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7daf37f8_c1f33cff",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtof.c",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#undef strtof32\n#undef wcstof32\n#ifdef USE_WIDE_CHAR\n\n\nweak_alias(wcstof, wcstof32)\n#else\n\n\nweak_alias(strtof, strtof32)\n```",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 49,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7458ade1_8f2e2023",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtof.c",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (insert after):\n```c++\n#endif\n```",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 50,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a7d06c49_fb51beb7",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtof_l.c",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define strtof32_l __hide_strtof32_l\n#define wcstof32_l __hide_wcstof32_l\n```",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 23,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "768a1763_6f169202",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtof_l.c",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nextern float ____strtof_l_internal(const char*, char**, int, locale_t);\n```",
      "range": {
        "startLine": 28,
        "startChar": 0,
        "endLine": 28,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "16e80e58_3114b2d0",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtof_l.c",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define FLOAT float\n#define FLT FLT\n```",
      "range": {
        "startLine": 30,
        "startChar": 0,
        "endLine": 31,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7e7e780b_c99fa31b",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtof_l.c",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define STRTOF wcstof_l\n#define __STRTOF __wcstof_l\n#define STRTOF_NAN __wcstof_nan\n```",
      "range": {
        "startLine": 33,
        "startChar": 0,
        "endLine": 35,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0ccdf447_d5d780ef",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtof_l.c",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define STRTOF strtof_l\n#define __STRTOF __strtof_l\n#define STRTOF_NAN __strtof_nan\n```",
      "range": {
        "startLine": 37,
        "startChar": 0,
        "endLine": 39,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5fb41049_143ba0ec",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtof_l.c",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define MPN2FLOAT __mpn_construct_float\n#define FLOAT_HUGE_VAL HUGE_VALF\n```",
      "range": {
        "startLine": 41,
        "startChar": 0,
        "endLine": 42,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b537c2d9_b95cb9d6",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtof_l.c",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#undef strtof32_l\n#undef wcstof32_l\n#ifdef USE_WIDE_CHAR\n\n\nweak_alias(wcstof_l, wcstof32_l)\n#else\n\n\nweak_alias(strtof_l, strtof32_l)\n```",
      "range": {
        "startLine": 47,
        "startChar": 0,
        "endLine": 53,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a967a5b1_d6d3ab1e",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtof_l.c",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (insert after):\n```c++\n#endif\n```",
      "range": {
        "startLine": 54,
        "startChar": 0,
        "endLine": 54,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1f5333c0_72a47800",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtof_nan.c",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (insert after):\n```c++\n#include \u003cmath-type-macros-float.h\u003e\n```",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 19,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f222bbb0_c397f37b",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtof_nan.c",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` is to remove this line/these lines.",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 21,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "967d540d_a7b0016f",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtol.c",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (insert after):\n```c++\n#include \u003clocale/localeinfo.h\u003e\n#include \u003cstdbool.h\u003e\n```",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 21,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "69d3c583_2771f0ac",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtol.c",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` is to remove this line/these lines.",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 23,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bf1d813b_82ac10f7",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtol.c",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` is to remove this line/these lines.",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 25,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d4955bed_4cc21e36",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtol.c",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#ifdef USE_WIDE_CHAR\n#ifdef QUAD\n#define strtol wcstoull\n#define __strtol_l __wcstoull_l\n#define __isoc23_strtol __isoc23_wcstoull\n```",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 39,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "827299f0_3d3ecff0",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtol.c",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define strtol wcstoul\n#define __strtol_l __wcstoul_l\n#define __isoc23_strtol __isoc23_wcstoul\n```",
      "range": {
        "startLine": 41,
        "startChar": 0,
        "endLine": 43,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "76125744_afe7c697",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtol.c",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#ifdef QUAD\n#define strtol strtoull\n#define __strtol_l __strtoull_l\n#define __isoc23_strtol __isoc23_strtoull\n```",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 49,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d5a74972_ef559583",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtol.c",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define strtol strtoul\n#define __strtol_l __strtoul_l\n#define __isoc23_strtol __isoc23_strtoul\n```",
      "range": {
        "startLine": 51,
        "startChar": 0,
        "endLine": 53,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7a1f6fef_6dc4de0d",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtol.c",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#ifdef USE_WIDE_CHAR\n#ifdef QUAD\n#define strtol wcstoll\n#define __strtol_l __wcstoll_l\n#define __isoc23_strtol __isoc23_wcstoll\n```",
      "range": {
        "startLine": 57,
        "startChar": 0,
        "endLine": 61,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2266b670_3930c157",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtol.c",
        "patchSetId": 1
      },
      "lineNbr": 65,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define strtol wcstol\n#define __strtol_l __wcstol_l\n#define __isoc23_strtol __isoc23_wcstol\n```",
      "range": {
        "startLine": 63,
        "startChar": 0,
        "endLine": 65,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ca004c30_728f8c81",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtol.c",
        "patchSetId": 1
      },
      "lineNbr": 71,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#ifdef QUAD\n#define strtol strtoll\n#define __strtol_l __strtoll_l\n#define __isoc23_strtol __isoc23_strtoll\n```",
      "range": {
        "startLine": 68,
        "startChar": 0,
        "endLine": 71,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ac16f9d7_e5aa5b54",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtol.c",
        "patchSetId": 1
      },
      "lineNbr": 87,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define STRING_TYPE wchar_t\n```",
      "range": {
        "startLine": 87,
        "startChar": 0,
        "endLine": 87,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "df22092e_b89e4a0e",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtol.c",
        "patchSetId": 1
      },
      "lineNbr": 89,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define STRING_TYPE char\n```",
      "range": {
        "startLine": 89,
        "startChar": 0,
        "endLine": 89,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fc6238b0_dc177835",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtol.c",
        "patchSetId": 1
      },
      "lineNbr": 98,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define SYM__(X) SYM__1(X)\n#define SYM__1(X) __##X\n#define __strtol SYM__(strtol)\n```",
      "range": {
        "startLine": 96,
        "startChar": 0,
        "endLine": 98,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f122686b_7de7ce40",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtol.c",
        "patchSetId": 1
      },
      "lineNbr": 102,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nextern INT INTERNAL(__strtol_l)(const STRING_TYPE*, STRING_TYPE**, int, int, bool, locale_t);\n```",
      "range": {
        "startLine": 101,
        "startChar": 0,
        "endLine": 102,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "27b10edc_67cb071d",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtol.c",
        "patchSetId": 1
      },
      "lineNbr": 107,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nINTERNAL(strtol)(const STRING_TYPE* nptr, STRING_TYPE** endptr, int base, int group)\n```",
      "range": {
        "startLine": 106,
        "startChar": 0,
        "endLine": 107,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "387498c1_dfaec7ab",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtol.c",
        "patchSetId": 1
      },
      "lineNbr": 110,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\treturn INTERNAL(__strtol_l)(nptr, endptr, base, group, false, _NL_CURRENT_LOCALE);\n```",
      "range": {
        "startLine": 109,
        "startChar": 0,
        "endLine": 110,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a6bb67bf_e8ad1514",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtol.c",
        "patchSetId": 1
      },
      "lineNbr": 112,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` is to remove this line/these lines.",
      "range": {
        "startLine": 112,
        "startChar": 0,
        "endLine": 112,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "46434da1_156d1823",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtol.c",
        "patchSetId": 1
      },
      "lineNbr": 116,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nlibc_hidden_def(INTERNAL(strtol))\n\n\n\tINT __strtol(const STRING_TYPE* nptr, STRING_TYPE** endptr, int base)\n```",
      "range": {
        "startLine": 115,
        "startChar": 0,
        "endLine": 116,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "584b5046_0e4c9b30",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtol.c",
        "patchSetId": 1
      },
      "lineNbr": 119,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\treturn INTERNAL(__strtol_l)(nptr, endptr, base, 0, false, _NL_CURRENT_LOCALE);\n```",
      "range": {
        "startLine": 118,
        "startChar": 0,
        "endLine": 119,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "97de9afd_4fbe6fb9",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtol.c",
        "patchSetId": 1
      },
      "lineNbr": 122,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\n\nweak_alias(__strtol, strtol) libc_hidden_weak(strtol)\n```",
      "range": {
        "startLine": 121,
        "startChar": 0,
        "endLine": 122,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4d0c9c9b_dee90d18",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtol.c",
        "patchSetId": 1
      },
      "lineNbr": 126,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tINT __isoc23_strtol(const STRING_TYPE* nptr, STRING_TYPE** endptr, int base)\n```",
      "range": {
        "startLine": 125,
        "startChar": 0,
        "endLine": 126,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d9a0be7a_8bdce0e1",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtol.c",
        "patchSetId": 1
      },
      "lineNbr": 129,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\treturn INTERNAL(__strtol_l)(nptr, endptr, base, 0, true, _NL_CURRENT_LOCALE);\n```",
      "range": {
        "startLine": 128,
        "startChar": 0,
        "endLine": 129,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "71aabe4c_ecbd4de9",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtol.c",
        "patchSetId": 1
      },
      "lineNbr": 131,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\n\nlibc_hidden_def(__isoc23_strtol)\n```",
      "range": {
        "startLine": 131,
        "startChar": 0,
        "endLine": 131,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8339e9ae_48c1836c",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtol_l.c",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#include \u003cconfig.h\u003e\n```",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 24,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bb48b031_e21b7690",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtol_l.c",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define USE_NUMBER_GROUPING\n#define HAVE_LIMITS_H\n```",
      "range": {
        "startLine": 28,
        "startChar": 0,
        "endLine": 29,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e294c6b9_c46d0240",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtol_l.c",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define __set_errno(Val) errno \u003d (Val)\n```",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 35,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "066e52e8_749f53f2",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtol_l.c",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#include \u003climits.h\u003e\n#endif\n\n#include \u003cbits/wordsize.h\u003e\n#include \u003clocale.h\u003e\n#include \u003cstdbool.h\u003e\n```",
      "range": {
        "startLine": 39,
        "startChar": 0,
        "endLine": 41,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "42f0cfa5_cf57ac87",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtol_l.c",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (insert after):\n```c++\n#include \u003cstdint.h\u003e\n```",
      "range": {
        "startLine": 42,
        "startChar": 0,
        "endLine": 42,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "744838c3_1cdfa89f",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtol_l.c",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` is to remove this line/these lines.",
      "range": {
        "startLine": 45,
        "startChar": 0,
        "endLine": 48,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "564e92f4_f2556ae4",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtol_l.c",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#include \"../locale/localeinfo.h\"\n```",
      "range": {
        "startLine": 51,
        "startChar": 0,
        "endLine": 51,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "520455ad_dd06d9fe",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtol_l.c",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define UNSIGNED 0\n#define INT LONG int\n#else\n#define INT unsigned LONG int\n```",
      "range": {
        "startLine": 57,
        "startChar": 0,
        "endLine": 60,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6aeeaad5_2fdde933",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtol_l.c",
        "patchSetId": 1
      },
      "lineNbr": 99,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#ifdef USE_WIDE_CHAR\n#ifdef QUAD\n#define strtol_l wcstoull_l\n#define __isoc23_strtol_l __isoc23_wcstoull_l\n#else\n#define strtol_l wcstoul_l\n#define __isoc23_strtol_l __isoc23_wcstoul_l\n#endif\n#else\n#ifdef QUAD\n#define strtol_l strtoull_l\n#define __isoc23_strtol_l __isoc23_strtoull_l\n#else\n#define strtol_l strtoul_l\n#define __isoc23_strtol_l __isoc23_strtoul_l\n#endif\n#endif\n#else\n#ifdef USE_WIDE_CHAR\n#ifdef QUAD\n#define strtol_l wcstoll_l\n#define __isoc23_strtol_l __isoc23_wcstoll_l\n#else\n#define strtol_l wcstol_l\n#define __isoc23_strtol_l __isoc23_wcstol_l\n#endif\n#else\n#ifdef QUAD\n#define strtol_l strtoll_l\n#define __isoc23_strtol_l __isoc23_strtoll_l\n#else\n#define strtol_l strtol_l\n#define __isoc23_strtol_l __isoc23_strtol_l\n#endif\n#endif\n```",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 99,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "110fd048_db592bc9",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtol_l.c",
        "patchSetId": 1
      },
      "lineNbr": 125,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define LONG long long\n#define STRTOL_LONG_MIN LONG_LONG_MIN\n#define STRTOL_LONG_MAX LONG_LONG_MAX\n#define STRTOL_ULONG_MAX ULONG_LONG_MAX\n#else\n#define LONG long\n\n#ifndef ULONG_MAX\n#define ULONG_MAX ((unsigned long int)~(unsigned long int)0)\n#endif\n#ifndef LONG_MAX\n#define LONG_MAX ((long int)(ULONG_MAX \u003e\u003e 1))\n#endif\n#define STRTOL_LONG_MIN LONG_MIN\n#define STRTOL_LONG_MAX LONG_MAX\n#define STRTOL_ULONG_MAX ULONG_MAX\n```",
      "range": {
        "startLine": 110,
        "startChar": 0,
        "endLine": 125,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0787840d_58d0d99e",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtol_l.c",
        "patchSetId": 1
      },
      "lineNbr": 136,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define _NL_CURRENT(category, item) (current-\u003evalues[_NL_ITEM_INDEX(item)].string)\n```",
      "range": {
        "startLine": 135,
        "startChar": 0,
        "endLine": 136,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "96b7969e_9213ce64",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtol_l.c",
        "patchSetId": 1
      },
      "lineNbr": 139,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define _NL_CURRENT_WORD(category, item) ((uint32_t)current-\u003evalues[_NL_ITEM_INDEX(item)].word)\n```",
      "range": {
        "startLine": 138,
        "startChar": 0,
        "endLine": 139,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b9496060_210428fb",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtol_l.c",
        "patchSetId": 1
      },
      "lineNbr": 166,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#include \u003cwchar.h\u003e\n#endif\n\n#ifdef USE_WIDE_CHAR\n#include \u003cwctype.h\u003e\n#define L_(Ch) L##Ch\n#define UCHAR_TYPE wint_t\n#define STRING_TYPE wchar_t\n#define ISSPACE(Ch) iswspace_l((Ch), loc)\n#define ISALPHA(Ch) iswalpha_l((Ch), _nl_C_locobj_ptr)\n#define TOUPPER(Ch) towupper_l((Ch), _nl_C_locobj_ptr)\n#else\n#if defined _LIBC || defined STDC_HEADERS || (!defined isascii \u0026\u0026 !defined HAVE_ISASCII)\n#define IN_CTYPE_DOMAIN(c) 1\n#else\n#define IN_CTYPE_DOMAIN(c) isascii(c)\n#endif\n#define L_(Ch) Ch\n#define UCHAR_TYPE unsigned char\n#define STRING_TYPE char\n#define ISSPACE(Ch) isspace_l((Ch), loc)\n#define ISALPHA(Ch) isalpha_l((Ch), _nl_C_locobj_ptr)\n#define TOUPPER(Ch) toupper_l((Ch), _nl_C_locobj_ptr)\n```",
      "range": {
        "startLine": 143,
        "startChar": 0,
        "endLine": 166,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c0a7dfac_2497331b",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtol_l.c",
        "patchSetId": 1
      },
      "lineNbr": 175,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#include \"grouping.h\"\n```",
      "range": {
        "startLine": 175,
        "startChar": 0,
        "endLine": 175,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c99c05a7_08a6ef14",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtol_l.c",
        "patchSetId": 1
      },
      "lineNbr": 213,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define DEF(TYPE, NAME) \\\n\tconst TYPE NAME[] attribute_hidden \u003d {F(2), F(3), F(4), F(5), F(6), F(7), F(8), F(9), F(10), \\\n\t\tF(11), F(12), F(13), F(14), F(15), F(16), F(17), F(18), F(19), F(20), F(21), F(22), F(23), \\\n\t\tF(24), F(25), F(26), F(27), F(28), F(29), F(30), F(31), F(32), F(33), F(34), F(35), F(36)}\n\n#if !UNSIGNED \u0026\u0026 !defined(USE_WIDE_CHAR) \u0026\u0026 !defined(QUAD)\n#define F(X) ULONG_MAX / X\nDEF(unsigned long, __strtol_ul_max_tab);\n#undef F\n#define F(X) ULONG_MAX % X\nDEF(unsigned char, __strtol_ul_rem_tab);\n#undef F\n#endif\n#if !UNSIGNED \u0026\u0026 !defined(USE_WIDE_CHAR) \u0026\u0026 defined(QUAD) \u0026\u0026 __WORDSIZE \u003d\u003d 32\n#define F(X) ULONG_LONG_MAX / X\nDEF(unsigned long long, __strtol_ull_max_tab);\n#undef F\n#define F(X) ULONG_LONG_MAX % X\nDEF(unsigned char, __strtol_ull_rem_tab);\n#undef F\n```",
      "range": {
        "startLine": 189,
        "startChar": 0,
        "endLine": 213,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8482b55e_c74c0ca7",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtol_l.c",
        "patchSetId": 1
      },
      "lineNbr": 219,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define jmax_tab __strtol_ul_max_tab\n```",
      "range": {
        "startLine": 219,
        "startChar": 0,
        "endLine": 219,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1f39251a_9d4fffe4",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtol_l.c",
        "patchSetId": 1
      },
      "lineNbr": 225,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define cutoff_tab __strtol_ull_max_tab\n#define cutlim_tab __strtol_ull_rem_tab\n#else\n#define cutoff_tab __strtol_ul_max_tab\n#define cutlim_tab __strtol_ul_rem_tab\n```",
      "range": {
        "startLine": 221,
        "startChar": 0,
        "endLine": 225,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c5ccc3cd_42582557",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtol_l.c",
        "patchSetId": 1
      },
      "lineNbr": 240,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nINTERNAL(__strtol_l)(const STRING_TYPE* nptr, STRING_TYPE** endptr, int base, int group,\n\tbool bin_cst, locale_t loc)\n```",
      "range": {
        "startLine": 239,
        "startChar": 0,
        "endLine": 240,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4452ba9f_7c40ac45",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtol_l.c",
        "patchSetId": 1
      },
      "lineNbr": 249,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tint negative;\n\tunsigned LONG int cutoff;\n\tunsigned int cutlim;\n\tunsigned LONG int i;\n\tconst STRING_TYPE* s;\n\tUCHAR_TYPE c;\n\tconst STRING_TYPE *save, *end;\n\tint overflow;\n```",
      "range": {
        "startLine": 242,
        "startChar": 0,
        "endLine": 249,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4e68ee0d_7df32133",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtol_l.c",
        "patchSetId": 1
      },
      "lineNbr": 251,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tsize_t cnt;\n```",
      "range": {
        "startLine": 251,
        "startChar": 0,
        "endLine": 251,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9bae77d7_4fb25109",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtol_l.c",
        "patchSetId": 1
      },
      "lineNbr": 346,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tlocale_t _nl_C_locobj_ptr \u003d __posix_locale_t();\n#else\n\tstruct __locale_data* current \u003d loc-\u003e__locales[LC_NUMERIC];\n#endif\n\t/* The thousands character of the current locale.  */\n#ifdef USE_WIDE_CHAR\n\twchar_t thousands \u003d L\u0027\\0\u0027;\n#else\n\tconst char* thousands \u003d NULL;\n\tsize_t thousands_len \u003d 0;\n#endif\n\t/* The numeric grouping specification of the current locale,\n\t   in the format described in \u003clocale.h\u003e.  */\n\tconst char* grouping;\n\n\tif (__glibc_unlikely(group)) {\n\t\tgrouping \u003d _NL_CURRENT(LC_NUMERIC, GROUPING);\n\t\tif (*grouping \u003c\u003d 0 || *grouping \u003d\u003d CHAR_MAX) {\n\t\t\tgrouping \u003d NULL;\n\t\t} else {\n\t\t\t/* Figure out the thousands separator character.  */\n#ifdef USE_WIDE_CHAR\n#ifdef _LIBC\n\t\t\tthousands \u003d _NL_CURRENT_WORD(LC_NUMERIC, _NL_NUMERIC_THOUSANDS_SEP_WC);\n#endif\n\t\t\tif (thousands \u003d\u003d L\u0027\\0\u0027)\n\t\t\t\tgrouping \u003d NULL;\n#else\n#ifdef _LIBC\n\t\t\tthousands \u003d _NL_CURRENT(LC_NUMERIC, THOUSANDS_SEP);\n#endif\n\t\t\tif (*thousands \u003d\u003d \u0027\\0\u0027) {\n\t\t\t\tthousands \u003d NULL;\n\t\t\t\tgrouping \u003d NULL;\n\t\t\t}\n#endif\n\t\t}\n\t} else {\n\t\tgrouping \u003d NULL;\n\t}\n#endif\n\n\tif (base \u003c 0 || base \u003d\u003d 1 || base \u003e 36) {\n\t\t__set_errno(EINVAL);\n\t\treturn 0;\n\t}\n\n\tsave \u003d s \u003d nptr;\n\n\t/* Skip white space.  */\n\twhile (ISSPACE(*s))\n\t\t++s;\n\tif (__glibc_unlikely(*s \u003d\u003d L_(\u0027\\0\u0027)))\n\t\tgoto noconv;\n\n\t/* Check for a sign.  */\n\tnegative \u003d 0;\n\tif (*s \u003d\u003d L_(\u0027-\u0027)) {\n\t\tnegative \u003d 1;\n\t\t++s;\n\t} else if (*s \u003d\u003d L_(\u0027+\u0027)) {\n\t\t++s;\n\t}\n\n\t/* Recognize number prefix and if BASE is zero, figure it out ourselves.  */\n\tif (*s \u003d\u003d L_(\u00270\u0027)) {\n\t\tif ((base \u003d\u003d 0 || base \u003d\u003d 16) \u0026\u0026 TOUPPER(s[1]) \u003d\u003d L_(\u0027X\u0027)) {\n\t\t\ts +\u003d 2;\n\t\t\tbase \u003d 16;\n\t\t} else if (bin_cst \u0026\u0026 (base \u003d\u003d 0 || base \u003d\u003d 2) \u0026\u0026 TOUPPER(s[1]) \u003d\u003d L_(\u0027B\u0027)) {\n\t\t\ts +\u003d 2;\n\t\t\tbase \u003d 2;\n\t\t} else if (base \u003d\u003d 0) {\n\t\t\tbase \u003d 8;\n\t\t}\n\t} else if (base \u003d\u003d 0) {\n\t\tbase \u003d 10;\n\t}\n\n\t/* Save the pointer so we can check later if anything happened.  */\n\tsave \u003d s;\n```",
      "range": {
        "startLine": 256,
        "startChar": 0,
        "endLine": 346,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "db37573d_4f87251c",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtol_l.c",
        "patchSetId": 1
      },
      "lineNbr": 413,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tif (base !\u003d 10)\n\t\tgrouping \u003d NULL;\n\n\tif (__glibc_unlikely(grouping !\u003d NULL)) {\n#ifndef USE_WIDE_CHAR\n\t\tthousands_len \u003d strlen(thousands);\n#endif\n\n\t\t/* Find the end of the digit string and check its grouping.  */\n\t\tend \u003d s;\n\t\tif (\n#ifdef USE_WIDE_CHAR\n\t\t\t*s !\u003d thousands\n#else\n\t\t\t({\n\t\t\t\tfor (cnt \u003d 0; cnt \u003c thousands_len; ++cnt)\n\t\t\t\t\tif (thousands[cnt] !\u003d end[cnt])\n\t\t\t\t\t\tbreak;\n\t\t\t\tcnt \u003c thousands_len;\n\t\t\t})\n#endif\n\t\t) {\n\t\t\tfor (c \u003d *end; c !\u003d L_(\u0027\\0\u0027); c \u003d *++end) {\n\t\t\t\tif (((STRING_TYPE)c \u003c L_(\u00270\u0027) || (STRING_TYPE)c \u003e L_(\u00279\u0027))\n#ifdef USE_WIDE_CHAR\n\t\t\t\t\t\u0026\u0026 (wchar_t)c !\u003d thousands\n#else\n\t\t\t\t\t\u0026\u0026 ({\n\t\t\t\t\t\t   for (cnt \u003d 0; cnt \u003c thousands_len; ++cnt)\n\t\t\t\t\t\t\t   if (thousands[cnt] !\u003d end[cnt])\n\t\t\t\t\t\t\t\t   break;\n\t\t\t\t\t\t   cnt \u003c thousands_len;\n\t\t\t\t\t   })\n#endif\n\t\t\t\t\t\u0026\u0026 (!ISALPHA(c) || (int)(TOUPPER(c) - L_(\u0027A\u0027) + 10) \u003e\u003d base))\n\t\t\t\t\tbreak;\n\t\t\t}\n\n#ifdef USE_WIDE_CHAR\n\t\t\tend \u003d __correctly_grouped_prefixwc(s, end, thousands, grouping);\n#else\n\t\t\tend \u003d __correctly_grouped_prefixmb(s, end, thousands, grouping);\n#endif\n\t\t}\n\t} else\n#endif\n\t\tend \u003d NULL;\n\n\t/* Avoid runtime division; lookup cutoff and limit.  */\n\tcutoff \u003d cutoff_tab[base - 2];\n\tcutlim \u003d cutlim_tab[base - 2];\n\n\toverflow \u003d 0;\n\ti \u003d 0;\n\tc \u003d *s;\n\tif (sizeof(long int) !\u003d sizeof(LONG int)) {\n\t\tunsigned long int j \u003d 0;\n\t\tunsigned long int jmax \u003d jmax_tab[base - 2];\n\n\t\tfor (; c !\u003d L_(\u0027\\0\u0027); c \u003d *++s) {\n\t\t\tif (s \u003d\u003d end)\n\t\t\t\tbreak;\n\t\t\tif (c \u003e\u003d L_(\u00270\u0027) \u0026\u0026 c \u003c\u003d L_(\u00279\u0027)) {\n\t\t\t\tc -\u003d L_(\u00270\u0027);\n\t\t\t}\n```",
      "range": {
        "startLine": 349,
        "startChar": 0,
        "endLine": 413,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "59215290_278979c3",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtol_l.c",
        "patchSetId": 1
      },
      "lineNbr": 427,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#ifdef USE_WIDE_CHAR\n\t\t\telse if (grouping \u0026\u0026 (wchar_t)c \u003d\u003d thousands) {\n\t\t\t\tcontinue;\n\t\t\t}\n#else\n\t\t\telse if (thousands_len) {\n\t\t\t\tfor (cnt \u003d 0; cnt \u003c thousands_len; ++cnt) {\n\t\t\t\t\tif (thousands[cnt] !\u003d s[cnt])\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (cnt \u003d\u003d thousands_len) {\n\t\t\t\t\ts +\u003d thousands_len - 1;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (ISALPHA(c))\n\t\t\t\t\tc \u003d TOUPPER(c) - L_(\u0027A\u0027) + 10;\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t}\n#endif\n#endif\n\t\t\telse if (ISALPHA(c)) {\n\t\t\t\tc \u003d TOUPPER(c) - L_(\u0027A\u0027) + 10;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ((int)c \u003e\u003d base) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t/* Note that we never can have an overflow.  */\n\t\t\telse if (j \u003e\u003d jmax) {\n\t\t\t\t/* We have an overflow.  Now use the long representation.  */\n\t\t\t\ti \u003d (unsigned LONG int)j;\n\t\t\t\tgoto use_long;\n\t\t\t} else {\n\t\t\t\tj \u003d j * (unsigned long int)base + c;\n\t\t\t}\n```",
      "range": {
        "startLine": 415,
        "startChar": 0,
        "endLine": 427,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "460ba8f9_a0d1d60a",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtol_l.c",
        "patchSetId": 1
      },
      "lineNbr": 461,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\n\t\ti \u003d (unsigned LONG int)j;\n\t} else {\n\t\tfor (; c !\u003d L_(\u0027\\0\u0027); c \u003d *++s) {\n\t\t\tif (s \u003d\u003d end)\n\t\t\t\tbreak;\n\t\t\tif (c \u003e\u003d L_(\u00270\u0027) \u0026\u0026 c \u003c\u003d L_(\u00279\u0027)) {\n\t\t\t\tc -\u003d L_(\u00270\u0027);\n\t\t\t}\n```",
      "range": {
        "startLine": 429,
        "startChar": 0,
        "endLine": 461,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "16db6df4_2e724497",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtol_l.c",
        "patchSetId": 1
      },
      "lineNbr": 508,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#ifdef USE_WIDE_CHAR\n\t\t\telse if (grouping \u0026\u0026 (wchar_t)c \u003d\u003d thousands) {\n\t\t\t\tcontinue;\n\t\t\t}\n#else\n\t\t\telse if (thousands_len) {\n\t\t\t\tfor (cnt \u003d 0; cnt \u003c thousands_len; ++cnt) {\n\t\t\t\t\tif (thousands[cnt] !\u003d s[cnt])\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (cnt \u003d\u003d thousands_len) {\n\t\t\t\t\ts +\u003d thousands_len - 1;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (ISALPHA(c))\n\t\t\t\t\tc \u003d TOUPPER(c) - L_(\u0027A\u0027) + 10;\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t}\n#endif\n#endif\n\t\t\telse if (ISALPHA(c)) {\n\t\t\t\tc \u003d TOUPPER(c) - L_(\u0027A\u0027) + 10;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ((int)c \u003e\u003d base)\n\t\t\t\tbreak;\n\t\t\t/* Check for overflow.  */\n\t\t\tif (i \u003e cutoff || (i \u003d\u003d cutoff \u0026\u0026 c \u003e cutlim)) {\n\t\t\t\toverflow \u003d 1;\n\t\t\t} else {\n\t\t\tuse_long:\n\t\t\t\ti *\u003d (unsigned LONG int)base;\n\t\t\t\ti +\u003d c;\n\t\t\t}\n\t\t}\n\t}\n\n\t/* Check if anything actually happened.  */\n\tif (s \u003d\u003d save)\n\t\tgoto noconv;\n\n\t/* Store in ENDPTR the address of one character\n\t   past the last character we converted.  */\n\tif (endptr !\u003d NULL)\n\t\t*endptr \u003d (STRING_TYPE*)s;\n```",
      "range": {
        "startLine": 463,
        "startChar": 0,
        "endLine": 508,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a879e406_f00f89f5",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtol_l.c",
        "patchSetId": 1
      },
      "lineNbr": 522,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t/* Check for a value that is within the range of\n\t   `unsigned LONG int\u0027, but outside the range of `LONG int\u0027.  */\n\tif (overflow \u003d\u003d 0\n\t\t\u0026\u0026 i \u003e (negative ? -((unsigned LONG int)(STRTOL_LONG_MIN + 1)) + 1\n\t\t\t\t\t\t : (unsigned LONG int)STRTOL_LONG_MAX)) {\n\t\toverflow \u003d 1;\n\t}\n#endif\n\n\tif (__glibc_unlikely(overflow)) {\n\t\t__set_errno(ERANGE);\n```",
      "range": {
        "startLine": 511,
        "startChar": 0,
        "endLine": 522,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0ae2f6a4_07fd8ca0",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtol_l.c",
        "patchSetId": 1
      },
      "lineNbr": 531,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\treturn STRTOL_ULONG_MAX;\n#else\n\t\treturn negative ? STRTOL_LONG_MIN : STRTOL_LONG_MAX;\n#endif\n\t}\n\n\t/* Return the result of the appropriate sign.  */\n\treturn negative ? -i : i;\n```",
      "range": {
        "startLine": 524,
        "startChar": 0,
        "endLine": 531,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5e740f97_01380658",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtol_l.c",
        "patchSetId": 1
      },
      "lineNbr": 552,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t/* We must handle a special case here: the base is 0 or 16 and the\n\t   first two characters are \u00270\u0027 and \u0027x\u0027, but the rest are no\n\t   hexadecimal digits.  Likewise when the base is 0 or 2 and the\n\t   first two characters are \u00270\u0027 and \u0027b\u0027, but the rest are no binary\n\t   digits.  This is no error case.  We return 0 and ENDPTR points to\n\t   the \u0027x\u0027 or \u0027b\u0027.  */\n\tif (endptr !\u003d NULL) {\n\t\tif (save - nptr \u003e\u003d 2\n\t\t\t\u0026\u0026 (TOUPPER(save[-1]) \u003d\u003d L_(\u0027X\u0027) || (bin_cst \u0026\u0026 TOUPPER(save[-1]) \u003d\u003d L_(\u0027B\u0027)))\n\t\t\t\u0026\u0026 save[-2] \u003d\u003d L_(\u00270\u0027)) {\n\t\t\t*endptr \u003d (STRING_TYPE*)\u0026save[-1];\n\t\t} else {\n\t\t\t/*  There was no number to convert.  */\n\t\t\t*endptr \u003d (STRING_TYPE*)nptr;\n\t\t}\n\t}\n\n\treturn 0L;\n```",
      "range": {
        "startLine": 534,
        "startChar": 0,
        "endLine": 552,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6424904e_60a38232",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtol_l.c",
        "patchSetId": 1
      },
      "lineNbr": 555,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nlibc_hidden_def(INTERNAL(__strtol_l))\n```",
      "range": {
        "startLine": 555,
        "startChar": 0,
        "endLine": 555,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "78807836_af699afd",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtol_l.c",
        "patchSetId": 1
      },
      "lineNbr": 564,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t/* Prototype.  */\n\textern INT __strtol_l(const STRING_TYPE* nptr, STRING_TYPE** endptr, int base);\n```",
      "range": {
        "startLine": 562,
        "startChar": 0,
        "endLine": 564,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1252cf6e_7ab61c54",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtol_l.c",
        "patchSetId": 1
      },
      "lineNbr": 573,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tweak_function\n#endif\n\t__strtol_l(const STRING_TYPE* nptr, STRING_TYPE** endptr, int base, locale_t loc)\n```",
      "range": {
        "startLine": 570,
        "startChar": 0,
        "endLine": 573,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ef17e08d_51fddfe7",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtol_l.c",
        "patchSetId": 1
      },
      "lineNbr": 575,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\treturn INTERNAL(__strtol_l)(nptr, endptr, base, 0, false, loc);\n```",
      "range": {
        "startLine": 575,
        "startChar": 0,
        "endLine": 575,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "89927c35_44dbe95d",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtol_l.c",
        "patchSetId": 1
      },
      "lineNbr": 577,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\n\nlibc_hidden_def(__strtol_l)\n```",
      "range": {
        "startLine": 577,
        "startChar": 0,
        "endLine": 577,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "df536d59_0b750937",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtol_l.c",
        "patchSetId": 1
      },
      "lineNbr": 583,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tweak_alias(__strtol_l, strtol_l)\n\n\t\tINT __isoc23_strtol_l(const STRING_TYPE* nptr, STRING_TYPE** endptr, int base, locale_t loc)\n```",
      "range": {
        "startLine": 579,
        "startChar": 0,
        "endLine": 583,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2dd26de6_56f0fc49",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtol_l.c",
        "patchSetId": 1
      },
      "lineNbr": 585,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\treturn INTERNAL(__strtol_l)(nptr, endptr, base, 0, true, loc);\n```",
      "range": {
        "startLine": 585,
        "startChar": 0,
        "endLine": 585,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eed4d953_7c09f904",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtol_l.c",
        "patchSetId": 1
      },
      "lineNbr": 588,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\n\nlibc_hidden_def(__isoc23_strtol_l)\n#endif\n```",
      "range": {
        "startLine": 587,
        "startChar": 0,
        "endLine": 588,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1e3141fc_3afd27f1",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtold.c",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n// #include \u003cbits/long-double.h\u003e\n```",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 23,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c17864ab_2a44abab",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtold.c",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define strtof128 __hide_strtof128\n#define wcstof128 __hide_wcstof128\n```",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 27,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c3f3c61a_ec3aff7b",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtold.c",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define strtof64x __hide_strtof64x\n#define wcstof64x __hide_wcstof64x\n```",
      "range": {
        "startLine": 30,
        "startChar": 0,
        "endLine": 31,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "01950819_6eafa146",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtold.c",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#include \u003cwchar.h\u003e\n#define NEW(x) NEW1(x)\n#define NEW1(x) __new_##x\nlong double ____new_strtold_internal(const char*, char**, int);\nlong double __new_strtold(const char*, char**);\nlong double ____new_wcstold_internal(const wchar_t*, wchar_t**, int);\nlong double __new_wcstold(const wchar_t*, wchar_t**);\nlibc_hidden_proto(____new_strtold_internal) libc_hidden_proto(____new_wcstold_internal)\n\tlibc_hidden_proto(__new_strtold) libc_hidden_proto(__new_wcstold)\n```",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 45,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f028e579_b77341f3",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtold.c",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define NEW(x) x\n```",
      "range": {
        "startLine": 47,
        "startChar": 0,
        "endLine": 47,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bb1dab66_9f49e55c",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtold.c",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define FLOAT long double\n#define FLT LDBL\n```",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 51,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ece8f126_51e50c18",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtold.c",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define STRTOF NEW(wcstold)\n#define STRTOF_L __wcstold_l\n```",
      "range": {
        "startLine": 53,
        "startChar": 0,
        "endLine": 54,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ef0614ec_2c761c10",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtold.c",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define STRTOF NEW(strtold)\n#define STRTOF_L __strtold_l\n```",
      "range": {
        "startLine": 56,
        "startChar": 0,
        "endLine": 57,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "66dba414_6418d37d",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtold.c",
        "patchSetId": 1
      },
      "lineNbr": 72,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#include \u003cmath_ldbl_opt.h\u003e\n#ifdef USE_WIDE_CHAR\n\t\tlong_double_symbol(libc, __new_wcstold, wcstold);\nlong_double_symbol(libc, ____new_wcstold_internal, __wcstold_internal);\n\n\nlibc_hidden_ver(____new_wcstold_internal, __wcstold_internal)\n#else\n\t\tlong_double_symbol(libc, __new_strtold, strtold);\nlong_double_symbol(libc, ____new_strtold_internal, __strtold_internal);\n\n\nlibc_hidden_ver(____new_strtold_internal, __strtold_internal)\n#endif\n```",
      "range": {
        "startLine": 63,
        "startChar": 0,
        "endLine": 72,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "36c38ad7_c8916ab6",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtold.c",
        "patchSetId": 1
      },
      "lineNbr": 82,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#undef strtof128\n#undef wcstof128\n#ifdef USE_WIDE_CHAR\n\tweak_alias(NEW(wcstold), wcstof128)\n#else\n\tweak_alias(NEW(strtold), strtof128)\n#endif\n```",
      "range": {
        "startLine": 76,
        "startChar": 0,
        "endLine": 82,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6a1c4e54_8aad0aa7",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtold.c",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#undef strtof64x\n#undef wcstof64x\n#ifdef USE_WIDE_CHAR\n\t\tweak_alias(NEW(wcstold), wcstof64x)\n#else\n\t\tweak_alias(NEW(strtold), strtof64x)\n```",
      "range": {
        "startLine": 86,
        "startChar": 0,
        "endLine": 92,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "923c6321_8caf1990",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtold.c",
        "patchSetId": 1
      },
      "lineNbr": 93,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (insert after):\n```c++\n#endif\n```",
      "range": {
        "startLine": 93,
        "startChar": 0,
        "endLine": 93,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ae469407_2a57f355",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtold_l.c",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define STRING_TYPE wchar_t\n#define STRTOLD wcstold_l\n#define __STRTOLD __wcstold_l\n#define __STRTOD __wcstod_l\n```",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 26,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d45cd9e6_e56efd2d",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtold_l.c",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define STRING_TYPE char\n#define STRTOLD strtold_l\n#define __STRTOLD __strtold_l\n#define __STRTOD __strtod_l\n```",
      "range": {
        "startLine": 28,
        "startChar": 0,
        "endLine": 31,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "652e876b_c8d0f932",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtold_l.c",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nextern double INTERNAL(__STRTOD)(const STRING_TYPE*, STRING_TYPE**, int, locale_t);\n```",
      "range": {
        "startLine": 37,
        "startChar": 0,
        "endLine": 38,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "86e7f57d_c9ec9637",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtold_l.c",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nINTERNAL(__STRTOLD)(const STRING_TYPE* nptr, STRING_TYPE** endptr, int group, locale_t loc)\n```",
      "range": {
        "startLine": 42,
        "startChar": 0,
        "endLine": 43,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f40cdd6c_855818e0",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtold_l.c",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\treturn INTERNAL(__STRTOD)(nptr, endptr, group, loc);\n```",
      "range": {
        "startLine": 45,
        "startChar": 0,
        "endLine": 45,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8f11861f_1dbc6b20",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtold_l.c",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\n\nlibc_hidden_def(INTERNAL(__STRTOLD))\n```",
      "range": {
        "startLine": 48,
        "startChar": 0,
        "endLine": 48,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e67c40b3_3350435c",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtold_l.c",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tlong double weak_function __STRTOLD(const STRING_TYPE* nptr, STRING_TYPE** endptr, locale_t loc)\n```",
      "range": {
        "startLine": 51,
        "startChar": 0,
        "endLine": 53,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e8e8691c_45baeb02",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtold_l.c",
        "patchSetId": 1
      },
      "lineNbr": 55,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\treturn INTERNAL(__STRTOD)(nptr, endptr, 0, loc);\n```",
      "range": {
        "startLine": 55,
        "startChar": 0,
        "endLine": 55,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "990c184b_870ae26c",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtold_l.c",
        "patchSetId": 1
      },
      "lineNbr": 59,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\n\nlibc_hidden_def(__STRTOLD) libc_hidden_ver(__STRTOLD, STRTOLD)\n```",
      "range": {
        "startLine": 58,
        "startChar": 0,
        "endLine": 59,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "70fdc2ce_57f78bb6",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtold_l.c",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tweak_alias(__STRTOLD, STRTOLD)\n```",
      "range": {
        "startLine": 62,
        "startChar": 0,
        "endLine": 62,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c1368231_fc46c43a",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtoll.c",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define QUAD 1\n```",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 19,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c3c9d363_f5fa9365",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtoll.c",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#ifdef SHARED\n#include \u003cshlib-compat.h\u003e\n```",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 26,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ac516e4d_5aaf553a",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtoll.c",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#if SHLIB_COMPAT(libc, GLIBC_2_0, GLIBC_2_2)\ncompat_symbol(libc, __strtoll_internal, __strtoq_internal, GLIBC_2_0);\n#endif\n```",
      "range": {
        "startLine": 28,
        "startChar": 0,
        "endLine": 30,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1a57480c_6f5bbb8f",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtoll.c",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#endif\n\n\nweak_alias(strtoll, strtoq) weak_alias(strtoll, strtoimax)\n\tweak_alias(__isoc23_strtoll, __isoc23_strtoimax)\n```",
      "range": {
        "startLine": 32,
        "startChar": 0,
        "endLine": 35,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c04cbf73_ee90ddaa",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtoll_l.c",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define QUAD 1\n```",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 19,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c0c04c00_4fb87c4e",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtoll_l.c",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nextern long long int ____strtoll_l_internal(const char*, char**, int, int, bool, locale_t);\n```",
      "range": {
        "startLine": 27,
        "startChar": 0,
        "endLine": 28,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "efa908a5_0e8c708f",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtoul.c",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define UNSIGNED 1\n```",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 18,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "512f90ee_9c54b337",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtoul_l.c",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define UNSIGNED 1\n```",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 19,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1d268aaf_cd792599",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtoul_l.c",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nextern unsigned long int ____strtoul_l_internal(const char*, char**, int, int, bool, locale_t);\n```",
      "range": {
        "startLine": 27,
        "startChar": 0,
        "endLine": 28,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6eb7f274_62073a5e",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtoull.c",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define QUAD 1\n```",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 19,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a2cac0f0_30dcd04a",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtoull.c",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#ifdef SHARED\n#include \u003cshlib-compat.h\u003e\n```",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 26,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "01c9cb88_1ff88380",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtoull.c",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#if SHLIB_COMPAT(libc, GLIBC_2_0, GLIBC_2_2)\ncompat_symbol(libc, __strtoull_internal, __strtouq_internal, GLIBC_2_0);\n#endif\n```",
      "range": {
        "startLine": 28,
        "startChar": 0,
        "endLine": 30,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ce1de9a2_2b6448e0",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtoull.c",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#endif\n\n\nweak_alias(strtoull, strtouq) weak_alias(strtoull, strtoumax)\n\tweak_alias(__isoc23_strtoull, __isoc23_strtoumax)\n```",
      "range": {
        "startLine": 32,
        "startChar": 0,
        "endLine": 35,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "16ff5646_485ec8da",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtoull_l.c",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define QUAD 1\n#define UNSIGNED 1\n```",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 20,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "69110f23_ff66e60a",
        "filename": "src/system/libroot/posix/glibc/stdlib/strtoull_l.c",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nextern unsigned long long int ____strtoull_l_internal(const char*, char**, int, int, bool,\n\tlocale_t);\n```",
      "range": {
        "startLine": 28,
        "startChar": 0,
        "endLine": 30,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e52fd539_b5e1698c",
        "filename": "src/system/libroot/posix/glibc/stdlib/tens_in_limb.c",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#if BITS_PER_MP_LIMB \u003d\u003d 32\n#define MAX_DIG_PER_LIMB 9\n#define MAX_FAC_PER_LIMB 1000000000UL\n#elif BITS_PER_MP_LIMB \u003d\u003d 64\n#define MAX_DIG_PER_LIMB 19\n#define MAX_FAC_PER_LIMB 10000000000000000000ULL\n```",
      "range": {
        "startLine": 5,
        "startChar": 0,
        "endLine": 10,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1ab320e0_e9fb0a8b",
        "filename": "src/system/libroot/posix/glibc/stdlib/tens_in_limb.c",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#error \"mp_limb_t size \" BITS_PER_MP_LIMB \"not accounted for\"\n```",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 12,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ab369f7c_b3d411f9",
        "filename": "src/system/libroot/posix/glibc/stdlib/tens_in_limb.c",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nconst mp_limb_t _tens_in_limb[MAX_DIG_PER_LIMB + 1]\n\t\u003d {0, 10, 100, 1000, 10000, 100000L, 1000000L, 10000000L, 100000000L, 1000000000L\n```",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 21,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "06e60712_163269fb",
        "filename": "src/system/libroot/posix/glibc/stdlib/tens_in_limb.c",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t,\n\t\t10000000000ULL, 100000000000ULL, 1000000000000ULL, 10000000000000ULL, 100000000000000ULL,\n\t\t1000000000000000ULL, 10000000000000000ULL, 100000000000000000ULL, 1000000000000000000ULL,\n\t\t10000000000000000000ULL\n```",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 26,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9d3a0d56_89a07d7f",
        "filename": "src/system/libroot/posix/glibc/stdlib/tens_in_limb.c",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#error \"Need to expand tens_in_limb table to\" MAX_DIG_PER_LIMB\n```",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 29,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "33f7aa3c_783ace21",
        "filename": "src/system/libroot/posix/glibc/wcsmbs/wchar.h",
        "patchSetId": 1
      },
      "lineNbr": 266,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nextern float ____wcstof_l_internal(const wchar_t*, wchar_t**, int, locale_t);\nextern double ____wcstod_l_internal(const wchar_t*, wchar_t**, int, locale_t);\nextern long double ____wcstold_l_internal(const wchar_t*, wchar_t**, int, locale_t);\n```",
      "range": {
        "startLine": 261,
        "startChar": 0,
        "endLine": 266,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "82d5f84c_c1ded8fd",
        "filename": "src/system/libroot/posix/glibc/wcsmbs/wcstod.c",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (insert after):\n```c++\n#include \u003clocale.h\u003e\n```",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 17,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "66cbf70f_ef19d8ed",
        "filename": "src/system/libroot/posix/glibc/wcsmbs/wcstod.c",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` is to remove this line/these lines.",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 19,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f4a303dc_5053b9ff",
        "filename": "src/system/libroot/posix/glibc/wcsmbs/wcstod_l.c",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (insert after):\n```c++\n#include \u003clocale.h\u003e\n```",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 18,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8376c770_2bd528ba",
        "filename": "src/system/libroot/posix/glibc/wcsmbs/wcstod_l.c",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` is to remove this line/these lines.",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 20,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5bf99f76_44580b00",
        "filename": "src/system/libroot/posix/glibc/wcsmbs/wcstod_l.c",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define USE_WIDE_CHAR 1\n```",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 23,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b65bd0ce_e5d1c6ca",
        "filename": "src/system/libroot/posix/glibc/wcsmbs/wcstof.c",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (insert after):\n```c++\n#include \u003clocale.h\u003e\n```",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 17,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "249d77fc_f6cefd17",
        "filename": "src/system/libroot/posix/glibc/wcsmbs/wcstof.c",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` is to remove this line/these lines.",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 19,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1d0b4540_aac80936",
        "filename": "src/system/libroot/posix/glibc/wcsmbs/wcstof.c",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define USE_WIDE_CHAR 1\n```",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 21,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0897b336_edf31de0",
        "filename": "src/system/libroot/posix/glibc/wcsmbs/wcstof_l.c",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (insert after):\n```c++\n#include \u003clocale.h\u003e\n```",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 18,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "29bfd999_e1709dfe",
        "filename": "src/system/libroot/posix/glibc/wcsmbs/wcstof_l.c",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` is to remove this line/these lines.",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 20,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aa2874ef_1d89449b",
        "filename": "src/system/libroot/posix/glibc/wcsmbs/wcstof_l.c",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define USE_WIDE_CHAR 1\n```",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 23,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8df4474c_11cc382d",
        "filename": "src/system/libroot/posix/glibc/wcsmbs/wcstol_l.c",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (insert after):\n```c++\n#include \u003clocale.h\u003e\n```",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 22,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c133705b_de778b4e",
        "filename": "src/system/libroot/posix/glibc/wcsmbs/wcstol_l.c",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` is to remove this line/these lines.",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 24,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "76cd6564_44b0e67d",
        "filename": "src/system/libroot/posix/glibc/wcsmbs/wcstol_l.c",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define USE_WIDE_CHAR 1\n```",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 26,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "46b9124e_a31d3a60",
        "filename": "src/system/libroot/posix/glibc/wcsmbs/wcstold.c",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (insert after):\n```c++\n#include \u003clocale.h\u003e\n```",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 17,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6a78b14c_d9a0321e",
        "filename": "src/system/libroot/posix/glibc/wcsmbs/wcstold.c",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` is to remove this line/these lines.",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 19,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6650d3e8_26dc702c",
        "filename": "src/system/libroot/posix/glibc/wcsmbs/wcstold.c",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define USE_WIDE_CHAR 1\n```",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 21,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7b3b547e_f1ca10d8",
        "filename": "src/system/libroot/posix/glibc/wcsmbs/wcstold_l.c",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (insert after):\n```c++\n#include \u003clocale.h\u003e\n```",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 18,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b1970da2_499099ee",
        "filename": "src/system/libroot/posix/glibc/wcsmbs/wcstold_l.c",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` is to remove this line/these lines.",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 20,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "05c72653_a8f24a2e",
        "filename": "src/system/libroot/posix/glibc/wcsmbs/wcstold_l.c",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define USE_WIDE_CHAR 1\n```",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 22,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9e17b66d_29fe033d",
        "filename": "src/system/libroot/posix/glibc/wcsmbs/wcstold_nan.c",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#include \"../stdlib/strtod_nan_wide.h\"\n#include \u003cmath-type-macros-ldouble.h\u003e\n```",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 26,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2f18d0c4_a088ecfa",
        "filename": "src/system/libroot/posix/glibc/wcsmbs/wcstold_nan.c",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define STRTOD_NAN __wcstold_nan\n#include \"../stdlib/strtod_nan_main.c\"\n```",
      "range": {
        "startLine": 28,
        "startChar": 0,
        "endLine": 29,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b18d3a56_898ac66d",
        "filename": "src/system/libroot/posix/glibc/wcsmbs/wcstoll.c",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\nweak_alias(wcstoll, wcstoq)\n```",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 23,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "19ba1579_4b5e4f55",
        "filename": "src/system/libroot/posix/glibc/wcsmbs/wcstoll.c",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tweak_alias(wcstoll, wcstoimax) weak_alias(__isoc23_wcstoll, __isoc23_wcstoimax)\n```",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 26,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "acad416c_9833dbd6",
        "filename": "src/system/libroot/posix/glibc/wcsmbs/wcstoll_l.c",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (insert after):\n```c++\n#include \u003clocale.h\u003e\n```",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 22,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1bed4c2d_a0a8b543",
        "filename": "src/system/libroot/posix/glibc/wcsmbs/wcstoll_l.c",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` is to remove this line/these lines.",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 24,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1e0ad1d7_12343b64",
        "filename": "src/system/libroot/posix/glibc/wcsmbs/wcstoll_l.c",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define QUAD 1\n```",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 26,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e4e7c579_65978d2d",
        "filename": "src/system/libroot/posix/glibc/wcsmbs/wcstoul_l.c",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (insert after):\n```c++\n#include \u003clocale.h\u003e\n```",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 22,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "27ead04e_316fdd2d",
        "filename": "src/system/libroot/posix/glibc/wcsmbs/wcstoul_l.c",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` is to remove this line/these lines.",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 24,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e66dca4c_3c70c8a2",
        "filename": "src/system/libroot/posix/glibc/wcsmbs/wcstoul_l.c",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define UNSIGNED 1\n```",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 26,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5fdf7b1b_46e0e015",
        "filename": "src/system/libroot/posix/glibc/wcsmbs/wcstoull.c",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\nweak_alias(wcstoull, wcstouq)\n```",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 23,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0091ec2c_b3c435b1",
        "filename": "src/system/libroot/posix/glibc/wcsmbs/wcstoull.c",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tweak_alias(wcstoull, wcstoumax) weak_alias(__isoc23_wcstoull, __isoc23_wcstoumax)\n```",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 26,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "372d4f04_fd7473e3",
        "filename": "src/system/libroot/posix/glibc/wcsmbs/wcstoull_l.c",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (insert after):\n```c++\n#include \u003clocale.h\u003e\n```",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 22,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f1dec0fe_8da630b6",
        "filename": "src/system/libroot/posix/glibc/wcsmbs/wcstoull_l.c",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` is to remove this line/these lines.",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 24,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f91d3164_1cf35b1e",
        "filename": "src/system/libroot/posix/glibc/wcsmbs/wcstoull_l.c",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-26T19:40:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define UNSIGNED 1\n```",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 26,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e837cab0d2834e77cd4ab2d5696da008b43d7d6b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}