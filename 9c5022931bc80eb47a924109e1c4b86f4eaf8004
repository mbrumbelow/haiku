{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "6b6e4ac7_78cde850",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2022-07-26T20:40:17Z",
      "side": 1,
      "message": "Do we really need to do this? Why not just handle the case in uselocale() instead?",
      "revId": "9c5022931bc80eb47a924109e1c4b86f4eaf8004",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0151310f_51e450c8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000391
      },
      "writtenOn": "2022-07-27T00:48:32Z",
      "side": 1,
      "message": "- If we handle the case in uselocale, some code for retrieving the POSIX locale (in libroot-icu) will need to be duplicated to create our own C databridge.\n- Using `LocaleBackend::CreateBackend();` is possible, but it may fail (when libroot-icu cannot be detected), and POSIX does not allow the function to fail for a valid locale_t object.\n\n\nIn my opinion this is the best fix. It removes a lot of complicated NULL checking logic and removes special cases, making the code much simpler.",
      "parentUuid": "6b6e4ac7_78cde850",
      "revId": "9c5022931bc80eb47a924109e1c4b86f4eaf8004",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "83cfbc1f_4eddd8de",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2022-07-27T07:28:38Z",
      "side": 1,
      "message": "The code without backend is used when bootstrapping Haiku on a new architecture. In that situation, ICU is not available at all, and so there is fallback code to do everything \"manually\", for the C/POSIX locale only.\n\nThis code is complicated, yes, but there\u0027s a reason for that: ICU has to be optional.\n\nWhat are the implications of this change in that situation?",
      "parentUuid": "0151310f_51e450c8",
      "revId": "9c5022931bc80eb47a924109e1c4b86f4eaf8004",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4b88a080_96b67daa",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000391
      },
      "writtenOn": "2022-07-27T07:32:03Z",
      "side": 1,
      "message": "ICU is still optional.\n\nIt is only not optional when dealing with locale_t objects (stuff that I added in the last PR).\n\nUnless bootstrapping has been updated to use the locale_t API, then there\u0027s no reason anything would break.",
      "parentUuid": "83cfbc1f_4eddd8de",
      "revId": "9c5022931bc80eb47a924109e1c4b86f4eaf8004",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a88b908a_1cbe8d94",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000172
      },
      "writtenOn": "2022-07-27T12:01:26Z",
      "side": 1,
      "message": "Does it affect process startup speed?",
      "revId": "9c5022931bc80eb47a924109e1c4b86f4eaf8004",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c0f80c78_41e0d553",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000391
      },
      "writtenOn": "2022-07-27T12:42:39Z",
      "side": 1,
      "message": "It does NOT, when tested on a Haiku installation.\n\nTheoretically, it cannot affect process startup speed. The optimization that was removed only applies when a program creates a new locale_t object using the new newlocale or duplocale function that is set to the \"C\" locale.\n\nApps that do not rely on the locale_t API added in the last patch are unaffected by changes in these functions. libroot does not have any static locale_t object that I know of.",
      "parentUuid": "a88b908a_1cbe8d94",
      "revId": "9c5022931bc80eb47a924109e1c4b86f4eaf8004",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0e152fec_ecda3bf4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2022-07-27T16:24:57Z",
      "side": 1,
      "message": "I think there are some applications and libraries in the core bootstrap set that may use locale_t if it is available (e.g. coreutils.) Thus we need to have these APIs continue to function even if ICU is not available. So, let\u0027s add the necessary fallbacks to uselocale.\n\nWhat code do you refer to that needs to be duplicated? Can\u0027t we just shift it into libroot entirely?\n\nAnd, why or how would the function fail? I guess I don\u0027t see what the complexity here is.",
      "parentUuid": "4b88a080_96b67daa",
      "revId": "9c5022931bc80eb47a924109e1c4b86f4eaf8004",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}