{
  "comments": [
    {
      "key": {
        "uuid": "6c6db146_89a75659",
        "filename": "src/add-ons/kernel/file_systems/xfs/BPlusTree.cpp",
        "patchSetId": 22
      },
      "lineNbr": 286,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2021-06-12T15:12:38Z",
      "side": 1,
      "message": "I think you need an ArrayDeleter (which will use delete[] and not delete) here?",
      "revId": "f3a7e863c9c40792ada4b57abd16e5dc55d39024",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c7c8b59_5f302307",
        "filename": "src/add-ons/kernel/file_systems/xfs/BPlusTree.cpp",
        "patchSetId": 22
      },
      "lineNbr": 286,
      "author": {
        "id": 1000287
      },
      "writtenOn": "2021-06-13T03:25:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6c6db146_89a75659",
      "revId": "f3a7e863c9c40792ada4b57abd16e5dc55d39024",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7395b3d1_53b7e079",
        "filename": "src/add-ons/kernel/file_systems/xfs/BPlusTree.cpp",
        "patchSetId": 22
      },
      "lineNbr": 363,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2021-06-12T15:12:38Z",
      "side": 1,
      "message": "the previous code was deleting the extents here. Now it\u0027s not doing that. Is it intentional? Should they remain allocated in this case?",
      "revId": "f3a7e863c9c40792ada4b57abd16e5dc55d39024",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "62f587ae_0c7fc9fb",
        "filename": "src/add-ons/kernel/file_systems/xfs/BPlusTree.cpp",
        "patchSetId": 22
      },
      "lineNbr": 363,
      "author": {
        "id": 1000183
      },
      "writtenOn": "2021-06-12T15:15:22Z",
      "side": 1,
      "message": "They should definitely be deleted.\n\nI think Yi thought that .Detach() would delete extents.",
      "parentUuid": "7395b3d1_53b7e079",
      "revId": "f3a7e863c9c40792ada4b57abd16e5dc55d39024",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "94ddc372_301bdfc5",
        "filename": "src/add-ons/kernel/file_systems/xfs/BPlusTree.cpp",
        "patchSetId": 22
      },
      "lineNbr": 363,
      "author": {
        "id": 1000287
      },
      "writtenOn": "2021-06-13T03:25:59Z",
      "side": 1,
      "message": "I know we have to delete extents here (totally 4 situations, 3 before error return, and 1 before normal return). But I am not sure if I should call .somefuction() or it really \u0027auto\u0027 delete. If I should call it before return, why it is said to be \u0027auto\u0027...? A little strange...",
      "parentUuid": "62f587ae_0c7fc9fb",
      "revId": "f3a7e863c9c40792ada4b57abd16e5dc55d39024",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f679b4f0_c580fca6",
        "filename": "src/add-ons/kernel/file_systems/xfs/BPlusTree.cpp",
        "patchSetId": 22
      },
      "lineNbr": 363,
      "author": {
        "id": 1000183
      },
      "writtenOn": "2021-06-13T11:04:51Z",
      "side": 1,
      "message": "I am personally not familiar with this API. Could somebody else comment on this?",
      "parentUuid": "94ddc372_301bdfc5",
      "revId": "f3a7e863c9c40792ada4b57abd16e5dc55d39024",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9b4c1b3d_344c802e",
        "filename": "src/add-ons/kernel/file_systems/xfs/BPlusTree.cpp",
        "patchSetId": 22
      },
      "lineNbr": 363,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2021-06-13T13:41:36Z",
      "side": 1,
      "message": "It is auto delete. That\u0027s the point. You don\u0027t need to do anything if you want the memory to be released.\n\nWhat you did here is detach the pointer from the autodeleter, to tell the autodeleter \"don\u0027t delete the data after this, I want to keep it\". That\u0027s not what you want, so just remove this call.",
      "parentUuid": "f679b4f0_c580fca6",
      "revId": "f3a7e863c9c40792ada4b57abd16e5dc55d39024",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "57e0b564_01eeb41b",
        "filename": "src/add-ons/kernel/file_systems/xfs/BPlusTree.cpp",
        "patchSetId": 22
      },
      "lineNbr": 363,
      "author": {
        "id": 1000287
      },
      "writtenOn": "2021-06-13T15:35:00Z",
      "side": 1,
      "message": "So I think that\u0027s what I did in patchset 23. You could have a look to check if it is right~",
      "parentUuid": "9b4c1b3d_344c802e",
      "revId": "f3a7e863c9c40792ada4b57abd16e5dc55d39024",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "769c5dc5_67d4f03c",
        "filename": "src/add-ons/kernel/file_systems/xfs/BPlusTree.cpp",
        "patchSetId": 22
      },
      "lineNbr": 507,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2021-06-12T15:12:38Z",
      "side": 1,
      "message": "now that the method returns a status_t, you should check it here\n\n    status \u003d SearchMapInAllExtent(...)\n    if (status !\u003d B_OK)\n        return status;",
      "revId": "f3a7e863c9c40792ada4b57abd16e5dc55d39024",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "59696066_4d5d6f77",
        "filename": "src/add-ons/kernel/file_systems/xfs/BPlusTree.cpp",
        "patchSetId": 22
      },
      "lineNbr": 507,
      "author": {
        "id": 1000287
      },
      "writtenOn": "2021-06-13T03:25:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "769c5dc5_67d4f03c",
      "revId": "f3a7e863c9c40792ada4b57abd16e5dc55d39024",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff3f4f8b_a80c77a8",
        "filename": "src/add-ons/kernel/file_systems/xfs/BPlusTree.h",
        "patchSetId": 22
      },
      "lineNbr": 154,
      "author": {
        "id": 1000287
      },
      "writtenOn": "2021-06-12T13:46:41Z",
      "side": 1,
      "message": "It was already pointed out in next patchset so I also changed pathForLeaves -\u003e fPathForLeaves. All related places in BPlusTree.cpp have been updated. And have been tested using jam -q xfs/\"\u003cbuild\u003exfs_shell\"",
      "range": {
        "startLine": 153,
        "startChar": 3,
        "endLine": 154,
        "endChar": 43
      },
      "revId": "f3a7e863c9c40792ada4b57abd16e5dc55d39024",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc94e437_69179010",
        "filename": "src/add-ons/kernel/file_systems/xfs/BPlusTree.h",
        "patchSetId": 22
      },
      "lineNbr": 154,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2021-06-12T15:12:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ff3f4f8b_a80c77a8",
      "range": {
        "startLine": 153,
        "startChar": 3,
        "endLine": 154,
        "endChar": 43
      },
      "revId": "f3a7e863c9c40792ada4b57abd16e5dc55d39024",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": false
    }
  ]
}