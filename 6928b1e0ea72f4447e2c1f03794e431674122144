{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "8f1a4d6d_613c4eb9",
        "filename": "src/add-ons/kernel/file_systems/userlandfs/private/RequestAllocator.cpp",
        "patchSetId": 2
      },
      "lineNbr": 179,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-01-29T13:05:09Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nRequestAllocator::AllocateAddress(Address\u0026 address, int32 size, int32 align, void** data,\n\tbool deferredInit, int32 reserveForNextRequests)\n```",
      "range": {
        "startLine": 178,
        "startChar": 0,
        "endLine": 179,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "6928b1e0ea72f4447e2c1f03794e431674122144",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "88548daf_cd96956b",
        "filename": "src/add-ons/kernel/file_systems/userlandfs/private/RequestAllocator.cpp",
        "patchSetId": 2
      },
      "lineNbr": 276,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-01-29T13:05:09Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nRequestAllocator::AllocateData(Address\u0026 address, const void* data, int32 size, int32 align,\n\tbool deferredInit, int32 reserveForNextRequests)\n```",
      "range": {
        "startLine": 275,
        "startChar": 0,
        "endLine": 276,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "6928b1e0ea72f4447e2c1f03794e431674122144",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bbe2bc65_0b357db0",
        "filename": "src/add-ons/kernel/file_systems/userlandfs/private/RequestAllocator.cpp",
        "patchSetId": 2
      },
      "lineNbr": 282,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-01-29T13:05:09Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\terror \u003d AllocateAddress(address, size, align, \u0026destination, deferredInit,\n\t\t\treserveForNextRequests);\n```",
      "range": {
        "startLine": 281,
        "startChar": 0,
        "endLine": 282,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "6928b1e0ea72f4447e2c1f03794e431674122144",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e1f3a2c1_85823759",
        "filename": "src/add-ons/kernel/file_systems/userlandfs/private/Requests.cpp",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-01-29T13:05:09Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define _ADD_ADDRESS(_address, _flags) \\\n\tdo { \\\n\t\tif (*count \u003e\u003d MAX_REQUEST_ADDRESS_COUNT) \\\n\t\t\treturn B_BAD_VALUE; \\\n\t\tinfos[*count].address \u003d \u0026_address; \\\n\t\tinfos[*count].flags \u003d _flags; \\\n\t\tinfos[(*count)++].max_size \u003d INT32_MAX; \\\n\t} while (0) // TODO:...\n```",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 14,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "6928b1e0ea72f4447e2c1f03794e431674122144",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d2c2aa4e_6b22e8fc",
        "filename": "src/add-ons/kernel/file_systems/userlandfs/server/UserlandRequestHandler.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1262,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-01-29T13:05:09Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\tresult \u003d allocator.AllocateAddress(reply-\u003ebuffer, size, 1, \u0026buffer, true,\n\t\t\tsizeof(FileCacheReadRequest) + sizeof(ReceiptAckReply));\n```",
      "range": {
        "startLine": 1261,
        "startChar": 0,
        "endLine": 1262,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "6928b1e0ea72f4447e2c1f03794e431674122144",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "73dd05fa_137a9807",
        "filename": "src/add-ons/kernel/file_systems/userlandfs/server/kernel_emu.cpp",
        "patchSetId": 2
      },
      "lineNbr": 832,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-01-29T13:05:09Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\terror \u003d allocator.AllocateData(request-\u003ebuffer, buffer, *_size, 1, false,\n\t\t\tsizeof(DoIterativeFDIORequest));\n```",
      "range": {
        "startLine": 831,
        "startChar": 0,
        "endLine": 832,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "6928b1e0ea72f4447e2c1f03794e431674122144",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}