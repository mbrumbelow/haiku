{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "2ff96050_b0c00f75",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000390
      },
      "writtenOn": "2025-03-05T12:21:22Z",
      "side": 1,
      "message": "Only one variant of FindInt32 is deprecated, the other ones return a status_t you can use to check wether the value was found in the message or not.\nI think it is not a good idea to use the GetInt32 one here that implicitly returns a 0. Instead we should check if the Message contains the value before the switch, and if it does not we could even add an assettion for debug builds.",
      "revId": "41cb623fc2a9d6fa6518328cc03f28eeb6ec011a",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a56bbbd4_8c9ea8b6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2025-03-05T14:56:03Z",
      "side": 1,
      "message": "0 is an invalid opcode, so it seems fine as a default here.",
      "parentUuid": "2ff96050_b0c00f75",
      "revId": "41cb623fc2a9d6fa6518328cc03f28eeb6ec011a",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "46525ebb_24314d31",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000013
      },
      "writtenOn": "2025-03-05T20:53:37Z",
      "side": 1,
      "message": "Initially I thought using FindInt32() could be an error, but then I realized it was using the int32 value version of FindInt32(), not the status_t version. I wanted to add GetInt32() to B_NODE_MONITOR to filter out stat changes but everywhere else uses FindInt32() and I didn\u0027t want to be different. 0 is an invalid opcode, typically opcode will start at 1. We weren\u0027t checking the status_t before so it should be ok that we\u0027re taking a similar shortcut in these cases.",
      "parentUuid": "a56bbbd4_8c9ea8b6",
      "revId": "41cb623fc2a9d6fa6518328cc03f28eeb6ec011a",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7d75b73e_2d056a5f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000390
      },
      "writtenOn": "2025-03-05T22:38:45Z",
      "side": 1,
      "message": "It seems to me these are deprecated *because* of the non-existant way to check for errors.\n\nIf the error doesn\u0027t matter here there is no point in switching this over imo. It\u0027s not a good code example then. There should be atleast an assertion in debug builds for opcode 0 then.\n\nI don\u0027t think using \"typically\" is a good idea for these, unless the compiler specifically forbids this, the undelying numeric value shouldn\u0027t matter, and someone accidentally adding an unexpected number for a new opcode shouldn\u0027t break this code.",
      "parentUuid": "46525ebb_24314d31",
      "revId": "41cb623fc2a9d6fa6518328cc03f28eeb6ec011a",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}