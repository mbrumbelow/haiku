{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "03f4c76d_7567fcf4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000390
      },
      "writtenOn": "2024-10-01T16:46:33Z",
      "side": 1,
      "message": "We should use implement and use hsl colors for this\nFailure color and viewcolor can be sunstantially different leading to bad contrast",
      "revId": "f5cec7ccdbca02afcbfc14085ab4f59e77d59014",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f09314b5_403e051f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000013
      },
      "writtenOn": "2024-10-01T18:15:09Z",
      "side": 1,
      "message": "The view color is document color so should be white or black. The contrast looks ok in the screenshots to me. What do you mean by implement HSL colors?",
      "parentUuid": "03f4c76d_7567fcf4",
      "revId": "f5cec7ccdbca02afcbfc14085ab4f59e77d59014",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d38ee03f_fdf02b01",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000390
      },
      "writtenOn": "2024-10-01T18:24:52Z",
      "side": 1,
      "message": "The document colors are arbitrary, not black and white.\n\nThere is an unfinished api for HSL colors in pref/appearence.\n\nThis should be promoted to a private api in libshared, then the failure color can be used and the Lightness value of the document color can be copied to the failure color.",
      "parentUuid": "f09314b5_403e051f",
      "revId": "f5cec7ccdbca02afcbfc14085ab4f59e77d59014",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "289f5521_bf1049b4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000013
      },
      "writtenOn": "2024-10-01T18:34:42Z",
      "side": 1,
      "message": "Document color is white by default, changes to black if you use automatic colors in Appearance and pick something dark for panel bg. If you use a different document color BG then you are expected to pick colors that have good contrast. mix_color does a pretty good job here. I\u0027ll have to look into this HSL API but it\u0027s not fair to expect Niklas to use an unfinished private API here.",
      "parentUuid": "d38ee03f_fdf02b01",
      "revId": "f5cec7ccdbca02afcbfc14085ab4f59e77d59014",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "26efa423_702a75ec",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000390
      },
      "writtenOn": "2024-10-01T19:05:56Z",
      "side": 1,
      "message": "What do you mean by fair? This isn\u0027t the first patchset in this direction, and the more we merge with mix_colors the more we will have to clean up later. With beta5 released it is a good oportunity to develop the better api. I\u0027m not demaning nipos do this. I wanted to look at it myself, but you can take a bite at it if you want. a -1 is not a -2 anyhow :) \n\nUsing custom document colors is completely valid and exposed in the appearence preferences, we should programm with this in mind and not optimize for the case of people not using colors. The colors need to be resilient to this.",
      "parentUuid": "289f5521_bf1049b4",
      "revId": "f5cec7ccdbca02afcbfc14085ab4f59e77d59014",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0033fae7_3ccf63f0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000013
      },
      "writtenOn": "2024-10-01T21:00:48Z",
      "side": 1,
      "message": "Timeline is this:\n1. Humdinger creates enhancement ticket #19132\n2. Niklas implements ticket\n3. I check code over to make sure colors are not hardcoded, looks good +1\n4. Pedantic style fix ensues\n5. nephele enters the chat, want to use experimental APIs -1 ticket\n6. I say that\u0027s not fair to niklas, how is he supposed to know that he\u0027s supposed to use private APIs?\n\nAnd here we are. This is unfair because there\u0027s no way that Niklas could have known that he was supposed to use a private HSL colors API to implement this feature. Why hold up this patch for an API that\u0027s not finished, if you want to finish up the HSL color API certainly you could update this at the same time. It just doesn\u0027t seem relevant to the task at hand, #19132, unless using mix_colors() is unacceptable.\n\nIf that is the case, we should warn developers to hold off on these kinds of color changes for now until the HSL API is finished, if not, the -1 is unwarranted. This passes the threshold of acceptability IMHO at least.",
      "parentUuid": "26efa423_702a75ec",
      "revId": "f5cec7ccdbca02afcbfc14085ab4f59e77d59014",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dd794da7_abf38d84",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000390
      },
      "writtenOn": "2024-10-01T21:15:31Z",
      "side": 1,
      "message": "I\u0027m not sure what you are on about, that vote is not a personal thing. It means exactly what gerrit sais \n\"I would prefer this is not submitted as is\"\n\nIf I had wanted to put a -2 I would have done so. I did not do that. If you want to push this to master, and we have to fix this up later when the api is ready, that is okay too. I just don\u0027t think that is the ideal way to go about this.\n\nHow am I holding up the patch by bringing up a better way this could be done? This is generally how it is done, no? And that a HSL api should be developed and used for future changes is a known quantity, I\u0027ve talked about that in irc severall times, and to my knowledge also with nipos.\n\nThis change is a great oportunity to test implementation of the HSL api,\n\nWhat do you mean by \"warn developers\"? nipos, you and me are basically the only devs that have been working in this space recently. For beta5 we pushed some things faster through the door, but now in the nightlies we can take our time to write code correctly, handeling edgecases and contrast requirements correctly.\nBefore beta4 I was pretty much the only one working on dark mode support, but now with it becoming more tangible the shortcomings of the previous aproach become visible. (and that the mix_color api is not that suitable, and requires a lot of guessing to get colors that are somewhat okay).\n\nI will also have to go back and fix up my implementation for team monitor, about system etc.\n\n\nWould you prefered I had *not* commented about the HSL api and done this behind closed doors and then just invalidate any changes not using it? That seems way more unfair to me than talking about it.",
      "parentUuid": "0033fae7_3ccf63f0",
      "revId": "f5cec7ccdbca02afcbfc14085ab4f59e77d59014",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "502c037c_99e457d6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000670
      },
      "writtenOn": "2024-10-02T10:18:44Z",
      "side": 1,
      "message": "It\u0027s true that we talked about HSL in the past and it would have been the better solution for some problems, but not for this one. I tried your patch and compared it to mine, and I\u0027m not happy with the results.\n\nBoth solutions work if the background color is black or white, but if it\u0027s some other color (see bright green in my example), the mix_color approach keeps the original background color (bright green) and moves it slightly towards red, while the HSL approach completely changes the background color to be bright red in this case, which is not what I\u0027d expect. Maybe the mix_color value must be set somewhat higher so that the redness is more visible, but in my opinion the original green background shouldn\u0027t completely get lost.\n\nScreenshot using this patch: https://upload.odirf.de/file/wh811151DI30.jpeg?view\nScreenshot using nepheles patch: https://upload.odirf.de/file/TGN9uwl766u4.jpeg?view",
      "parentUuid": "dd794da7_abf38d84",
      "revId": "f5cec7ccdbca02afcbfc14085ab4f59e77d59014",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1e42fb25_10d364b8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000390
      },
      "writtenOn": "2024-10-02T10:45:02Z",
      "side": 1,
      "message": "I think using a color that does not contrast in the first place is a bit \"out of bounds\" for this, however your screenshot shows quite well why I want HSL to be used. It is very clear in my patch that the failure color marks the field. In your example the green moves slightly to a more muddy brown green, which is not that usefull.\n\nThe mix_color api does *not* take into account the chroma like the hsl api does, it only compares the r g b components and \"mixes\" them, like the api name suggests. This is not a linear progression as far as brigntness goes or as far as chroma goes, as some colors are perceived as more bright than others. (You can check the new Brightness api in rgb_color to see how that is calculated there for example)\n\nI don\u0027t think we should keep any of the original background color here. The only interesting part is the lightness, and that it matches, in a contrasting sense, to the foreground color.\n\nGoing forward we should use HSL colors for *most* of these changes, that is using a color in place of another color that does not have any global color constants for this purpose (background invalid color for documents, in this case, does not exist) and only use the mix_color api in this space when there is a good justification.",
      "parentUuid": "502c037c_99e457d6",
      "revId": "f5cec7ccdbca02afcbfc14085ab4f59e77d59014",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d72db1bb_04f25dd4",
        "filename": "src/kits/interface/TextControl.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1050,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-09-29T08:33:56Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t} else if (fLook \u0026 BControlLook::B_INVALID) {\n```",
      "range": {
        "startLine": 1050,
        "startChar": 0,
        "endLine": 1050,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "f5cec7ccdbca02afcbfc14085ab4f59e77d59014",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8ed7f7f1_90cd0199",
        "filename": "src/kits/interface/TextControl.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1051,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-09-29T08:33:56Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (insert after):\n```c++\n\t}\n```",
      "range": {
        "startLine": 1051,
        "startChar": 0,
        "endLine": 1051,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "f5cec7ccdbca02afcbfc14085ab4f59e77d59014",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}