{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "03f4c76d_7567fcf4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000390
      },
      "writtenOn": "2024-10-01T16:46:33Z",
      "side": 1,
      "message": "We should use implement and use hsl colors for this\nFailure color and viewcolor can be sunstantially different leading to bad contrast",
      "revId": "f5cec7ccdbca02afcbfc14085ab4f59e77d59014",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f09314b5_403e051f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000013
      },
      "writtenOn": "2024-10-01T18:15:09Z",
      "side": 1,
      "message": "The view color is document color so should be white or black. The contrast looks ok in the screenshots to me. What do you mean by implement HSL colors?",
      "parentUuid": "03f4c76d_7567fcf4",
      "revId": "f5cec7ccdbca02afcbfc14085ab4f59e77d59014",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d38ee03f_fdf02b01",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000390
      },
      "writtenOn": "2024-10-01T18:24:52Z",
      "side": 1,
      "message": "The document colors are arbitrary, not black and white.\n\nThere is an unfinished api for HSL colors in pref/appearence.\n\nThis should be promoted to a private api in libshared, then the failure color can be used and the Lightness value of the document color can be copied to the failure color.",
      "parentUuid": "f09314b5_403e051f",
      "revId": "f5cec7ccdbca02afcbfc14085ab4f59e77d59014",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "289f5521_bf1049b4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000013
      },
      "writtenOn": "2024-10-01T18:34:42Z",
      "side": 1,
      "message": "Document color is white by default, changes to black if you use automatic colors in Appearance and pick something dark for panel bg. If you use a different document color BG then you are expected to pick colors that have good contrast. mix_color does a pretty good job here. I\u0027ll have to look into this HSL API but it\u0027s not fair to expect Niklas to use an unfinished private API here.",
      "parentUuid": "d38ee03f_fdf02b01",
      "revId": "f5cec7ccdbca02afcbfc14085ab4f59e77d59014",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "26efa423_702a75ec",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000390
      },
      "writtenOn": "2024-10-01T19:05:56Z",
      "side": 1,
      "message": "What do you mean by fair? This isn\u0027t the first patchset in this direction, and the more we merge with mix_colors the more we will have to clean up later. With beta5 released it is a good oportunity to develop the better api. I\u0027m not demaning nipos do this. I wanted to look at it myself, but you can take a bite at it if you want. a -1 is not a -2 anyhow :) \n\nUsing custom document colors is completely valid and exposed in the appearence preferences, we should programm with this in mind and not optimize for the case of people not using colors. The colors need to be resilient to this.",
      "parentUuid": "289f5521_bf1049b4",
      "revId": "f5cec7ccdbca02afcbfc14085ab4f59e77d59014",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0033fae7_3ccf63f0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000013
      },
      "writtenOn": "2024-10-01T21:00:48Z",
      "side": 1,
      "message": "Timeline is this:\n1. Humdinger creates enhancement ticket #19132\n2. Niklas implements ticket\n3. I check code over to make sure colors are not hardcoded, looks good +1\n4. Pedantic style fix ensues\n5. nephele enters the chat, want to use experimental APIs -1 ticket\n6. I say that\u0027s not fair to niklas, how is he supposed to know that he\u0027s supposed to use private APIs?\n\nAnd here we are. This is unfair because there\u0027s no way that Niklas could have known that he was supposed to use a private HSL colors API to implement this feature. Why hold up this patch for an API that\u0027s not finished, if you want to finish up the HSL color API certainly you could update this at the same time. It just doesn\u0027t seem relevant to the task at hand, #19132, unless using mix_colors() is unacceptable.\n\nIf that is the case, we should warn developers to hold off on these kinds of color changes for now until the HSL API is finished, if not, the -1 is unwarranted. This passes the threshold of acceptability IMHO at least.",
      "parentUuid": "26efa423_702a75ec",
      "revId": "f5cec7ccdbca02afcbfc14085ab4f59e77d59014",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d72db1bb_04f25dd4",
        "filename": "src/kits/interface/TextControl.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1050,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-09-29T08:33:56Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t} else if (fLook \u0026 BControlLook::B_INVALID) {\n```",
      "range": {
        "startLine": 1050,
        "startChar": 0,
        "endLine": 1050,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "f5cec7ccdbca02afcbfc14085ab4f59e77d59014",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8ed7f7f1_90cd0199",
        "filename": "src/kits/interface/TextControl.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1051,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-09-29T08:33:56Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (insert after):\n```c++\n\t}\n```",
      "range": {
        "startLine": 1051,
        "startChar": 0,
        "endLine": 1051,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "f5cec7ccdbca02afcbfc14085ab4f59e77d59014",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}