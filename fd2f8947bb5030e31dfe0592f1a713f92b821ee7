{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "939ba0b1_754477a7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000172
      },
      "writtenOn": "2024-07-12T23:28:25Z",
      "side": 1,
      "message": "Boot confirmed and sockets still working (including Wayland server in separate process).",
      "revId": "fd2f8947bb5030e31dfe0592f1a713f92b821ee7",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c93076b3_8c83430d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000172
      },
      "writtenOn": "2024-07-22T23:07:16Z",
      "side": 1,
      "message": "\u003e Can we at least restore event_queue and net_socket objects, even if we don\u0027t add a void*?\n\nI strongly believe that such fields shouldn\u0027t be there because it violate abstractions. file_descriptor should know nothing about list of actual implementations. `vnode` and `mount` are justified, because it are generic VFS features and are referenced in various parts of kernel.",
      "revId": "fd2f8947bb5030e31dfe0592f1a713f92b821ee7",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Build-Check",
        "description": {
          "value": "Builds OK on all architectures"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "-label:Verified\u003d-1"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-label:Verified=-1"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Verified=-1"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "fd2f8947bb5030e31dfe0592f1a713f92b821ee7",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}