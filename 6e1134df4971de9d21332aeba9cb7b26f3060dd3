{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1e91dfa0_77f701dd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000217
      },
      "writtenOn": "2022-01-23T22:45:17Z",
      "side": 1,
      "message": "This ended up being more challenging than expected and I ended up touching a lot more code - but this now works with both area_id and disk files.\n\nI did end up doing work to \u0027normalize\u0027 almost all of the app server font operations so they consistently use ServerFonts instead of directly accessing the FontManager, and I\u0027ve made sure that no current font functionality was broken along the way - CharacterMap, FontDemo, WebPositive, StyledEdit etc all behave exactly as before.  \n\nI also implemented BFont::BoundingBox while I was in there since it seemed trivial with the bbox struct inside of FT_Face.  \n\nI know it\u0027s a large patch, but it actually was a non-trivial issue to solve properly. I don\u0027t think it could be done simpler and still maintain proper separation between user fonts and system fonts - but I could be wrong.\n\n",
      "revId": "6e1134df4971de9d21332aeba9cb7b26f3060dd3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "616cacfd_a0792ac7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000217
      },
      "writtenOn": "2022-01-25T20:36:59Z",
      "side": 1,
      "message": "Waddlesplash, you raise a very good point. I added the token to make it similar to other user-added types (BBitmap for example) but BFont has a perfectly good \u0027token\u0027 already via `(family \u003c\u003c 16) | style`. It doesn\u0027t make sense to waste another 32 bits with a separate token. I *think* I can change/revert everything to work with the family and style and I think it should even decrease the amount of code change.",
      "revId": "6e1134df4971de9d21332aeba9cb7b26f3060dd3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1219fd07_a3b6c70f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2022-01-25T22:58:35Z",
      "side": 1,
      "message": "Or you can just replace the existing family/style \"identifiers\" with the new token system, if you think that makes more sense. Either way.",
      "revId": "6e1134df4971de9d21332aeba9cb7b26f3060dd3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fde07e28_ef66fb4f",
        "filename": "headers/os/interface/Font.h",
        "patchSetId": 5
      },
      "lineNbr": 288,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2022-01-24T08:35:29Z",
      "side": 1,
      "message": "should be private I think (then an underscore prefix can be added).",
      "revId": "6e1134df4971de9d21332aeba9cb7b26f3060dd3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff1909ff_66ea6f56",
        "filename": "headers/os/interface/Font.h",
        "patchSetId": 5
      },
      "lineNbr": 288,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2022-01-24T17:03:03Z",
      "side": 1,
      "message": "Indeed. Furthermore, if all fonts are going to have tokens now, why not remove the other mechanisms for identifying the fonts (family/face/etc. IDs) and just use the Token, saving a bunch of space in the class?",
      "parentUuid": "fde07e28_ef66fb4f",
      "revId": "6e1134df4971de9d21332aeba9cb7b26f3060dd3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "241a8353_128ba39a",
        "filename": "headers/os/interface/Font.h",
        "patchSetId": 5
      },
      "lineNbr": 317,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2022-01-24T08:35:29Z",
      "side": 1,
      "message": "adding a field without removing something else changes the size of the class.",
      "revId": "6e1134df4971de9d21332aeba9cb7b26f3060dd3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}