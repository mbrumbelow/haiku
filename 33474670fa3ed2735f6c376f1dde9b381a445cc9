{
  "comments": [
    {
      "key": {
        "uuid": "a7987f57_8de1eb58",
        "filename": "src/add-ons/kernel/file_systems/xfs/BPlusTree.cpp",
        "patchSetId": 16
      },
      "lineNbr": 20,
      "author": {
        "id": 1000183
      },
      "writtenOn": "2021-03-23T14:48:51Z",
      "side": 1,
      "message": "What if fRoot is NULL? We haven\u0027t checked that here. We can move this to InitCheck(.) but then we wouldn\u0027t really just be \"checking\" there.",
      "revId": "33474670fa3ed2735f6c376f1dde9b381a445cc9",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bd60f201_b00a457b",
        "filename": "src/add-ons/kernel/file_systems/xfs/BPlusTree.cpp",
        "patchSetId": 16
      },
      "lineNbr": 20,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2021-03-23T17:35:35Z",
      "side": 1,
      "message": "As I had tried to explain in my previous comment, what we would normally do is:\n\n- Add a \"status_t fStatus\" member to the class\n- In the constructor: initialize it:\n\n    fStatus \u003d B_OK;\n\n- In the constructor, check all allocations in this way:\n\nfRoot \u003d new(std::nothrow) BlockInDataFork;\nif (fRoot \u003d\u003d NULL) {\n    fStatus \u003d B_NO_MEMORY;\n    return;\n}\n\n- In InitCheck:\n\n    return fStatus;",
      "parentUuid": "a7987f57_8de1eb58",
      "revId": "33474670fa3ed2735f6c376f1dde9b381a445cc9",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d7220063_ee768d99",
        "filename": "src/add-ons/kernel/file_systems/xfs/BPlusTree.cpp",
        "patchSetId": 16
      },
      "lineNbr": 20,
      "author": {
        "id": 1000287
      },
      "writtenOn": "2021-03-27T09:45:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bd60f201_b00a457b",
      "revId": "33474670fa3ed2735f6c376f1dde9b381a445cc9",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4f5897d5_12a9ffe2",
        "filename": "src/add-ons/kernel/file_systems/xfs/BPlusTree.cpp",
        "patchSetId": 16
      },
      "lineNbr": 32,
      "author": {
        "id": 1000183
      },
      "writtenOn": "2021-03-23T14:48:51Z",
      "side": 1,
      "message": "We don\u0027t need these if(.) conditions. If something is NULL, delete does nothing to it. Likewise for the other two",
      "revId": "33474670fa3ed2735f6c376f1dde9b381a445cc9",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1e6d65f4_daf58bf4",
        "filename": "src/add-ons/kernel/file_systems/xfs/BPlusTree.cpp",
        "patchSetId": 16
      },
      "lineNbr": 32,
      "author": {
        "id": 1000287
      },
      "writtenOn": "2021-03-27T09:45:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4f5897d5_12a9ffe2",
      "revId": "33474670fa3ed2735f6c376f1dde9b381a445cc9",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f7ae2b73_ef95301e",
        "filename": "src/add-ons/kernel/file_systems/xfs/BPlusTree.cpp",
        "patchSetId": 16
      },
      "lineNbr": 36,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2021-03-23T17:35:35Z",
      "side": 1,
      "message": "it is allocated with new[] so it should be deleted with delete[]",
      "revId": "33474670fa3ed2735f6c376f1dde9b381a445cc9",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eeed1422_da422881",
        "filename": "src/add-ons/kernel/file_systems/xfs/BPlusTree.cpp",
        "patchSetId": 16
      },
      "lineNbr": 36,
      "author": {
        "id": 1000287
      },
      "writtenOn": "2021-03-27T09:45:48Z",
      "side": 1,
      "message": "Done. And I\u0027d like to ask a question, for simple type, delete[] will be equal to delete, right? Or there\u0027s something different for Haiku?",
      "parentUuid": "f7ae2b73_ef95301e",
      "revId": "33474670fa3ed2735f6c376f1dde9b381a445cc9",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e9376c2_c094ea6f",
        "filename": "src/add-ons/kernel/file_systems/xfs/BPlusTree.cpp",
        "patchSetId": 16
      },
      "lineNbr": 190,
      "author": {
        "id": 1000183
      },
      "writtenOn": "2021-03-23T14:48:51Z",
      "side": 1,
      "message": "Just realized, fExtentsWrapped is member to the class. We don\u0027t really have to pass it to another function.",
      "revId": "33474670fa3ed2735f6c376f1dde9b381a445cc9",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a72bf04f_a121ff52",
        "filename": "src/add-ons/kernel/file_systems/xfs/BPlusTree.cpp",
        "patchSetId": 16
      },
      "lineNbr": 190,
      "author": {
        "id": 1000287
      },
      "writtenOn": "2021-03-27T09:45:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8e9376c2_c094ea6f",
      "revId": "33474670fa3ed2735f6c376f1dde9b381a445cc9",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e894dca0_e8a94ce1",
        "filename": "src/add-ons/kernel/file_systems/xfs/BPlusTree.cpp",
        "patchSetId": 16
      },
      "lineNbr": 197,
      "author": {
        "id": 1000183
      },
      "writtenOn": "2021-03-23T14:48:51Z",
      "side": 1,
      "message": "fExtents if not a member to the class hence the prefix of \u0027f\u0027 isn\u0027t required. Maybe call it unwrappedExtents or something?",
      "revId": "33474670fa3ed2735f6c376f1dde9b381a445cc9",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a8306f9a_390bdd3a",
        "filename": "src/add-ons/kernel/file_systems/xfs/BPlusTree.cpp",
        "patchSetId": 16
      },
      "lineNbr": 197,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2021-03-23T17:35:35Z",
      "side": 1,
      "message": "It should remain a class member as it was before.\n\nBut:\n- It should be deleted in the class destructor\n- In this method, it should be deleted before allocating (in case the method is called multiple times)",
      "parentUuid": "e894dca0_e8a94ce1",
      "revId": "33474670fa3ed2735f6c376f1dde9b381a445cc9",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e4d6c97e_de1c7b25",
        "filename": "src/add-ons/kernel/file_systems/xfs/BPlusTree.cpp",
        "patchSetId": 16
      },
      "lineNbr": 197,
      "author": {
        "id": 1000287
      },
      "writtenOn": "2021-03-27T09:45:48Z",
      "side": 1,
      "message": "Done. And need review here.",
      "parentUuid": "a8306f9a_390bdd3a",
      "revId": "33474670fa3ed2735f6c376f1dde9b381a445cc9",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4cfaa8db_ed2ff991",
        "filename": "src/add-ons/kernel/file_systems/xfs/BPlusTree.cpp",
        "patchSetId": 16
      },
      "lineNbr": 212,
      "author": {
        "id": 1000183
      },
      "writtenOn": "2021-03-23T14:48:51Z",
      "side": 1,
      "message": "We just allocated fExtents and filled it with information. Deleting it isn\u0027t what we want.\nPerhaps fExtents is used later on (maybe check latest patches?). If that is the case maybe we can make it a member of the class? Maybe that is done already in a newer patch? Please check on this",
      "revId": "33474670fa3ed2735f6c376f1dde9b381a445cc9",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b9d6ae6_3d50da17",
        "filename": "src/add-ons/kernel/file_systems/xfs/BPlusTree.cpp",
        "patchSetId": 16
      },
      "lineNbr": 212,
      "author": {
        "id": 1000287
      },
      "writtenOn": "2021-03-27T09:45:48Z",
      "side": 1,
      "message": "It should not be deleted. Thank you!",
      "parentUuid": "4cfaa8db_ed2ff991",
      "revId": "33474670fa3ed2735f6c376f1dde9b381a445cc9",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3d62c10a_c635ade6",
        "filename": "src/add-ons/kernel/file_systems/xfs/BPlusTree.cpp",
        "patchSetId": 16
      },
      "lineNbr": 212,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2021-03-27T10:33:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6b9d6ae6_3d50da17",
      "revId": "33474670fa3ed2735f6c376f1dde9b381a445cc9",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "af4d3f9f_e5fe7de7",
        "filename": "src/add-ons/kernel/file_systems/xfs/BPlusTree.h",
        "patchSetId": 16
      },
      "lineNbr": 111,
      "author": {
        "id": 1000183
      },
      "writtenOn": "2021-03-23T14:48:51Z",
      "side": 1,
      "message": "Extra tab",
      "revId": "33474670fa3ed2735f6c376f1dde9b381a445cc9",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e6f4a757_48584964",
        "filename": "src/add-ons/kernel/file_systems/xfs/BPlusTree.h",
        "patchSetId": 16
      },
      "lineNbr": 111,
      "author": {
        "id": 1000287
      },
      "writtenOn": "2021-03-27T09:45:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "af4d3f9f_e5fe7de7",
      "revId": "33474670fa3ed2735f6c376f1dde9b381a445cc9",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fc6b69ec_ec7d0edb",
        "filename": "src/add-ons/kernel/file_systems/xfs/BPlusTree.h",
        "patchSetId": 16
      },
      "lineNbr": 112,
      "author": {
        "id": 1000183
      },
      "writtenOn": "2021-03-23T14:48:51Z",
      "side": 1,
      "message": "Extra tab",
      "revId": "33474670fa3ed2735f6c376f1dde9b381a445cc9",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "99f9c527_f0b5fd53",
        "filename": "src/add-ons/kernel/file_systems/xfs/BPlusTree.h",
        "patchSetId": 16
      },
      "lineNbr": 112,
      "author": {
        "id": 1000287
      },
      "writtenOn": "2021-03-27T09:45:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fc6b69ec_ec7d0edb",
      "revId": "33474670fa3ed2735f6c376f1dde9b381a445cc9",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "93ab46dc_05a89388",
        "filename": "src/add-ons/kernel/file_systems/xfs/BPlusTree.h",
        "patchSetId": 16
      },
      "lineNbr": 112,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2021-03-27T10:33:15Z",
      "side": 1,
      "message": "You have converted tabs to space in several places in the file. Tabs should be used. Check your editor configuration.",
      "parentUuid": "99f9c527_f0b5fd53",
      "revId": "33474670fa3ed2735f6c376f1dde9b381a445cc9",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    }
  ]
}