{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "d21b1d12_8143d534",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000311
      },
      "writtenOn": "2022-10-25T03:28:52Z",
      "side": 1,
      "message": "As usual... I have better intentions than skills or knowledge, so I\u0027ll welcome any insights regarding this change.\n\nI didn\u0027t saw the point of TextSearch reacting to changes in a file\u0027s attributes, when only working/showing on its content. What am I missing?\n\nI\u0027ve tested by watching on the console which fields were changed with Pe after an open/close without any other changes. B_STAT_CHANGE_TIME was the only that consistently appears (I assume due to Pe changing its own attributes for the file).\n\nGrep gets still called if one modifies/saves the file from Pe, for example.\n\nThanks in advance.",
      "revId": "a49cfccf874cadc1c2682d1257cec3c51399594f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "43a256cf_b68560e2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2022-10-25T07:19:46Z",
      "side": 1,
      "message": "What would be the events monitored then, if not B_STAT_CHANGE_TIME?",
      "revId": "a49cfccf874cadc1c2682d1257cec3c51399594f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "327b583b_5665cf96",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000311
      },
      "writtenOn": "2022-10-25T08:07:25Z",
      "side": 1,
      "message": "These are the possible values according to: https://www.haiku-os.org/docs/api/NodeMonitor_8h.html\n\n    B_STAT_MODE \u003d 0x0001,\n    B_STAT_UID \u003d 0x0002,\n    B_STAT_GID \u003d 0x0004,\n    B_STAT_SIZE \u003d 0x0008,\n    B_STAT_ACCESS_TIME \u003d 0x0010,\n    B_STAT_MODIFICATION_TIME \u003d 0x0020,\n    B_STAT_CREATION_TIME \u003d 0x0040,\n    B_STAT_CHANGE_TIME \u003d 0x0080,\n    B_STAT_INTERIM_UPDATE \u003d 0x1000 \n\nIf I open/close files with Pe... only B_STAT_CHANGE_TIME (0x80) appears in the console output.\n\nIf I add/remove a space, and save... I see B_STAT_MODE (0x1), B_STAT_CREATION_TIME (0x40), B_STAT_MODIFICATION_TIME + B_STAT_SIZE (0x28).",
      "parentUuid": "43a256cf_b68560e2",
      "revId": "a49cfccf874cadc1c2682d1257cec3c51399594f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a0899178_073fbd21",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000311
      },
      "writtenOn": "2022-10-25T08:11:32Z",
      "side": 1,
      "message": "Subsequent modifications of the same file (without closing it in Pe) show B_STAT_CHANGE_TIME and B_STAT_MODIFICATION_TIME + B_STAT_SIZE (or just B_STAT_MODIFICATION_TIME if the the modifications do not change size).",
      "parentUuid": "327b583b_5665cf96",
      "revId": "a49cfccf874cadc1c2682d1257cec3c51399594f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5c22bc8a_e42376d4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2022-10-25T09:18:34Z",
      "side": 1,
      "message": "OK. can you check it works as expected on ext4? the behavior could be FS dependent.",
      "revId": "a49cfccf874cadc1c2682d1257cec3c51399594f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9af1587a_4d36d7e1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000311
      },
      "writtenOn": "2022-10-25T11:02:07Z",
      "side": 1,
      "message": "I\u0027ve mounted an ext4 partition (created from a Linux ISO), otherwise empty, as read-write on Haiku. mountvolume and DriveSetup list it as ext2, hope that\u0027s OK.\n\nI\u0027ve copied a folder with 23 text files in it... and pointed TextSearch at those, and searched for a term that was in most of them.\n\n---\n\n1- Opening/Closing files with Pe (without any other modification) do NOT show B_STAT_CHANGE_TIME on console, and do not trigger spurious grep re-searches. (in fact, no output at all, after the initial search).\n\n2- Doing modifications that DO change the size of the file (adding/removing chars), show:\n\n    B_ENTRY_CREATED\n    path: [path to file here]\n    B_STAT_CHANGED (fields \u003d 0x1)    # B_STAT_MODE\n    path: [path to file here]\n    B_STAT_CHANGED (fields \u003d 0x40)   # B_STAT_CREATION_TIME\n    path: [path to file here]\n    B_STAT_CHANGED (fields \u003d 0x8)    # B_STAT_SIZE\n    path: [path to file here]\n    B_ENTRY_REMOVED\n    path: [path to file here]\n    B_STAT_CHANGED (fields \u003d 0x8)    # B_STAT_SIZE\n    path: [path to file here]\n    ChangesIterator contents:\n    entry: [path to file here] - CHANGED\n\nand a new grep search is performed. (\"# B_STAT_*\" comments added for clarity).\n\n3- Doing modifications that do NOT change the file size (either by over-writing a character with another, or with the same, so, saving back exact same content) show:\n\n    B_ENTRY_CREATED\n    path: [path to file here]\n    B_STAT_CHANGED (fields \u003d 0x1)    # B_STAT_MODE\n    path: [path to file here]\n    B_STAT_CHANGED (fields \u003d 0x40)   # B_STAT_CREATION_TIME\n    path: [path to file here]\n    B_STAT_CHANGED (fields \u003d 0x8)    # B_STAT_SIZE\n    path: [path to file here]\n    B_ENTRY_REMOVED\n    path: [path to file here]\n\nAnd NO new grep search. This seems like it could be a problem... but...\n\nTesting the same sequences with the original TestSearch... shows the exact same behavior on the 3 cases (minus the printing of the \"(field \u003d 0xhh)\" part, of course).\n\n---\n\nIf required, I can perform further testing tomorrow (after being instructed on which tests to perform). I have other ext4 and ntfs partitions to test when booting into bare-metal.",
      "parentUuid": "5c22bc8a_e42376d4",
      "revId": "a49cfccf874cadc1c2682d1257cec3c51399594f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "46ea7a77_794ab250",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000311
      },
      "writtenOn": "2022-10-25T20:53:44Z",
      "side": 1,
      "message": "Tried again on another EXT4 partition with Linux on it... same results as previous comment.\n\nNext, I\u0027ve tried on NTFS:\n\nBoth original and modified TextSearch behave the same (minus the printing of \"(field \u003d 0xhh)\"):\n\n1- Open and closing without modifications: no output, no new searches are triggered.\n\n2- Saving modifications give the same output (no matter if the modifications chage size or keep it the same):\n\n    B_ENTRY_CREATED\n    path: [path to file here]\n    B_STAT_CHANGED (fields \u003d 0xff)\n    path: [path to file here]\n    B_STAT_CHANGED (fields \u003d 0xff)\n    path: [path to file here]\n    B_STAT_CHANGED (fields \u003d 0xff)\n    path: [path to file here]\n    B_ENTRY_REMOVED\n    path: [path to file here]\n    ChangesIterator contents:\n    entry: [path to file here] - CHANGED\n\nAnd a new grep search is triggered.",
      "parentUuid": "9af1587a_4d36d7e1",
      "revId": "a49cfccf874cadc1c2682d1257cec3c51399594f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "158682e5_6cd7a571",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000016
      },
      "writtenOn": "2022-10-26T06:37:12Z",
      "side": 1,
      "message": "Just to shed some light on the issue: B_STAT_CHANGE_TIME is used by BFS for meta data changes only. B_STAT_MODIFICATION_TIME is being used by actual file data changes.\n\nI don\u0027t know if that\u0027s feasible for all other file systems as well, but I would think it is.",
      "revId": "a49cfccf874cadc1c2682d1257cec3c51399594f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dacd95a6_722628ac",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000311
      },
      "writtenOn": "2022-10-26T09:32:24Z",
      "side": 1,
      "message": "Thank you Axel! Always nice to read from you.\n\nSo, I guess that means that, ideally, TextSearch should only react if the B_STAT_CHANGED fields has B_STAT_MODIFICATION_TIME set (at least that was the behavior I was after... to ignore metadata-only changes).\n\nBut as EXT4 does not sets it (setting B_STAT_SIZE instead, regardless if the modification changed the file size or not)... and NTFS suspiciously setting all bits...\n\nSeems like the current patchset is a less than ideal but safe option, at least for now?\n\nModifying FS drivers is _a bit_ out of my league :-P",
      "parentUuid": "158682e5_6cd7a571",
      "revId": "a49cfccf874cadc1c2682d1257cec3c51399594f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d4378c84_5c4f0b5d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2022-10-26T17:12:12Z",
      "side": 1,
      "message": "Another approach could be to keep a MD5sum value of all already seen and matching files and on notification of file change, recompute it to detect if the content has actually changed.\nCould be a bit overkilling in case of large list of matching files.",
      "revId": "a49cfccf874cadc1c2682d1257cec3c51399594f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "666dca08_6df9bf3a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2022-10-26T17:16:59Z",
      "side": 1,
      "message": "BTW, anyone knowns if the workaround in Grepper.cpp:Grepper::_RunnerThread() using xargs -E \u003ceofmark\u003e is still needed of if now the pipe closure is correctly detected and thus xargs --null could be instead used ?",
      "revId": "a49cfccf874cadc1c2682d1257cec3c51399594f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1b3b179d_b9d92613",
        "filename": "src/apps/text_search/GrepWindow.cpp",
        "patchSetId": 2
      },
      "lineNbr": 679,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2022-10-26T17:08:55Z",
      "side": 1,
      "message": "Agreed, no point to monitor attributes changes as we\u0027re only after file *content*, nothing else.",
      "revId": "a49cfccf874cadc1c2682d1257cec3c51399594f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9f77f4b4_2d2d4f3b",
        "filename": "src/apps/text_search/GrepWindow.cpp",
        "patchSetId": 2
      },
      "lineNbr": 915,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2022-10-26T17:08:55Z",
      "side": 1,
      "message": "What about a modified file without file size modification?\nLike just replacing one char with another and save the file?\n\nThis case should not be ignored, as any content change, even while keeping the same size, should be taken into account.",
      "revId": "a49cfccf874cadc1c2682d1257cec3c51399594f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a1cf3b6f_ae121d1e",
        "filename": "src/apps/text_search/GrepWindow.cpp",
        "patchSetId": 2
      },
      "lineNbr": 915,
      "author": {
        "id": 1000311
      },
      "writtenOn": "2022-10-26T21:21:42Z",
      "side": 1,
      "message": "As mentioned on other comments: On BFS, modifications without changes in size cause a B_STAT_CHANGED with fields having B_STAT_MODIFICATION_TIME set, which this checks lets go through... while being (too?) permissive of other \"non-data\" changes, like for UID/GID changes, for example. I was going for the least disruptive change I could make.\n\nI guess ideally all filesystems with node monitoring should behave like BFS, and this check could turn into \"break if B_STAT_MODIFICATION_TIME is no set\" instead (as that would avoid all non-data related change notifications).\n\nEXT4 seems buggy to me, as it sets B_STAT_SIZE even when the modifications do not change size. NTFS sets \"fields\" to 0xFF always, so... not sure I can trust that one.",
      "parentUuid": "9f77f4b4_2d2d4f3b",
      "revId": "a49cfccf874cadc1c2682d1257cec3c51399594f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3ff0b93f_3fbe541d",
        "filename": "src/apps/text_search/GrepWindow.cpp",
        "patchSetId": 2
      },
      "lineNbr": 915,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2022-10-26T23:26:19Z",
      "side": 1,
      "message": "Ok, make sense. Sorry, I\u0027m away from haiku development since too long now to have a correct full view of the issue here. \nIndeed, the issue goes way deeper, into the differents fs implementation of the B_STAT_CHANGED notification and which fields are set and when/why.",
      "parentUuid": "a1cf3b6f_ae121d1e",
      "revId": "a49cfccf874cadc1c2682d1257cec3c51399594f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}