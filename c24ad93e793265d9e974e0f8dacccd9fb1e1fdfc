{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "6c1e2135_1858be2d",
        "filename": "headers/os/add-ons/input_server/InputServerDevice.h",
        "patchSetId": 3
      },
      "lineNbr": 24,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-11-10T13:35:06Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tB_KEY_MAP_CHANGED \u003d 1,\n```",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 24,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "c24ad93e793265d9e974e0f8dacccd9fb1e1fdfc",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "17c70176_75d82b48",
        "filename": "headers/os/add-ons/input_server/InputServerDevice.h",
        "patchSetId": 3
      },
      "lineNbr": 38,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2024-11-10T20:06:07Z",
      "side": 1,
      "message": "I don\u0027t think we should add this here. Instead we should add it to Input.h, and it should be enum input_pointing_device_subtype, and then that class should return SubType(), and the messages should then have \"be:device_subtype\" as their member string.\n\n(But let\u0027s see if the other devs agree with that suggestion.)",
      "revId": "c24ad93e793265d9e974e0f8dacccd9fb1e1fdfc",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7a49c0eb_d18c5969",
        "filename": "headers/os/add-ons/input_server/InputServerDevice.h",
        "patchSetId": 3
      },
      "lineNbr": 38,
      "author": {
        "id": 1000695
      },
      "writtenOn": "2024-11-11T19:31:25Z",
      "side": 1,
      "message": "Sorry for a late answer, been pondering on this for a bit. I agree on pretty much everything except the SubType class, since it seems unnecessary to me that we should introduce an entire class for something this trivial - it would be easier to implement and probably maintain in the future if we just used the enum values directly and passed them via messages like we do with most other enum values.\n\n(I was actually hoping that someone would give me advice to move this to a better place, since I didn\u0027t really know where to put it and at the time, that was the best I could find, so absolutely agreed on moving this to Input.h)",
      "parentUuid": "17c70176_75d82b48",
      "revId": "c24ad93e793265d9e974e0f8dacccd9fb1e1fdfc",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3702261c_d8c05f0b",
        "filename": "headers/os/add-ons/input_server/InputServerDevice.h",
        "patchSetId": 3
      },
      "lineNbr": 38,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2024-11-11T19:38:46Z",
      "side": 1,
      "message": "Sorry, I didn\u0027t mean add another class, I meant the already defined class in Input.h should have SubType() method alongside Type() which also returns an enum.",
      "parentUuid": "7a49c0eb_d18c5969",
      "revId": "c24ad93e793265d9e974e0f8dacccd9fb1e1fdfc",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "84172554_d88475fa",
        "filename": "headers/os/add-ons/input_server/InputServerDevice.h",
        "patchSetId": 3
      },
      "lineNbr": 38,
      "author": {
        "id": 1000695
      },
      "writtenOn": "2024-11-11T20:24:03Z",
      "side": 1,
      "message": "Ah, I see. To me, that sounds like a good design, but as you said, let\u0027s see what the others think of it first before I get to implementing it.",
      "parentUuid": "3702261c_d8c05f0b",
      "revId": "c24ad93e793265d9e974e0f8dacccd9fb1e1fdfc",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "84263f73_05143833",
        "filename": "headers/os/add-ons/input_server/InputServerDevice.h",
        "patchSetId": 3
      },
      "lineNbr": 38,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2024-11-16T13:31:22Z",
      "side": 1,
      "message": "I think I don\u0027t see what it would make better/simpler?\n\nThe current solution seems simple enough, but maybe I\u0027m missing something",
      "parentUuid": "84172554_d88475fa",
      "revId": "c24ad93e793265d9e974e0f8dacccd9fb1e1fdfc",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0934fe03_86bcc981",
        "filename": "headers/os/add-ons/input_server/InputServerDevice.h",
        "patchSetId": 3
      },
      "lineNbr": 38,
      "author": {
        "id": 1000695
      },
      "writtenOn": "2024-11-16T14:28:00Z",
      "side": 1,
      "message": "IMO the enum is in a bad place, since it\u0027s currently related to a InputServerDevice even though this is meant to be part of the public API. I\u0027m really in favor of moving it to Input.h.",
      "parentUuid": "84263f73_05143833",
      "revId": "c24ad93e793265d9e974e0f8dacccd9fb1e1fdfc",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "03a26343_260b87b3",
        "filename": "headers/os/add-ons/input_server/InputServerDevice.h",
        "patchSetId": 3
      },
      "lineNbr": 40,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-11-10T13:35:06Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tB_UNKNOWN_DEVICE \u003d 0,\n```",
      "range": {
        "startLine": 40,
        "startChar": 0,
        "endLine": 40,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "c24ad93e793265d9e974e0f8dacccd9fb1e1fdfc",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "71453488_eb90dc9a",
        "filename": "src/add-ons/input_server/devices/mouse/MouseInputDevice.cpp",
        "patchSetId": 3
      },
      "lineNbr": 522,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-11-10T13:35:06Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\t\t\u0026\u0026 message-\u003eAddFloat(\"be:wheel_delta_x\", movements.wheel_xdelta) \u003d\u003d B_OK\n\t\t\t\t\u0026\u0026 message-\u003eAddFloat(\"be:wheel_delta_y\", movements.wheel_ydelta) \u003d\u003d B_OK\n\t\t\t\t\u0026\u0026 message-\u003eAddInt32(\"be:device\", fIsTouchpad ? B_TOUCHPAD_DEVICE : B_MOUSE_DEVICE)\n\t\t\t\t\t\u003d\u003d B_OK) {\n```",
      "range": {
        "startLine": 517,
        "startChar": 0,
        "endLine": 522,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "c24ad93e793265d9e974e0f8dacccd9fb1e1fdfc",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "33ff6376_2648644c",
        "filename": "src/add-ons/input_server/devices/mouse/MouseInputDevice.cpp",
        "patchSetId": 3
      },
      "lineNbr": 524,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-11-10T13:35:06Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\t} else\n```",
      "range": {
        "startLine": 524,
        "startChar": 0,
        "endLine": 524,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "c24ad93e793265d9e974e0f8dacccd9fb1e1fdfc",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e22c33c0_8dbf6615",
        "filename": "src/add-ons/input_server/devices/mouse/MouseInputDevice.cpp",
        "patchSetId": 3
      },
      "lineNbr": 644,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-11-10T13:35:06Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tif (message-\u003eAddInt64(\"when\", when) \u003c B_OK || message-\u003eAddInt32(\"buttons\", buttons) \u003c B_OK\n\t\t|| message-\u003eAddInt32(\"x\", deltaX) \u003c B_OK || message-\u003eAddInt32(\"y\", deltaY) \u003c B_OK\n\t\t|| message-\u003eAddInt32(\"be:device\", fIsTouchpad ? B_TOUCHPAD_DEVICE : B_MOUSE_DEVICE)\n\t\t\t\u003c B_OK) {\n```",
      "range": {
        "startLine": 639,
        "startChar": 0,
        "endLine": 644,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "c24ad93e793265d9e974e0f8dacccd9fb1e1fdfc",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1ab1aced_5b149c9d",
        "filename": "src/add-ons/input_server/devices/tablet/TabletInputDevice.cpp",
        "patchSetId": 3
      },
      "lineNbr": 385,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-11-10T13:35:06Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\t\t\t\u0026\u0026 message-\u003eAddFloat(\"be:wheel_delta_x\", movements.wheel_xdelta) \u003d\u003d B_OK\n\t\t\t\t\t\u0026\u0026 message-\u003eAddFloat(\"be:wheel_delta_y\", movements.wheel_ydelta) \u003d\u003d B_OK\n\t\t\t\t\t\u0026\u0026 message-\u003eAddInt32(\"be:device\", B_TABLET_DEVICE) \u003d\u003d B_OK) {\n```",
      "range": {
        "startLine": 381,
        "startChar": 0,
        "endLine": 385,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "c24ad93e793265d9e974e0f8dacccd9fb1e1fdfc",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dc75e31f_d96496aa",
        "filename": "src/add-ons/input_server/devices/tablet/TabletInputDevice.cpp",
        "patchSetId": 3
      },
      "lineNbr": 387,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-11-10T13:35:06Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\t\t} else\n```",
      "range": {
        "startLine": 387,
        "startChar": 0,
        "endLine": 387,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "c24ad93e793265d9e974e0f8dacccd9fb1e1fdfc",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "356e71b4_35c753d0",
        "filename": "src/add-ons/input_server/devices/tablet/TabletInputDevice.cpp",
        "patchSetId": 3
      },
      "lineNbr": 437,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-11-10T13:35:06Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tif (message-\u003eAddInt64(\"when\", when) \u003c B_OK || message-\u003eAddInt32(\"buttons\", buttons) \u003c B_OK\n\t\t|| message-\u003eAddFloat(\"x\", xPosition) \u003c B_OK || message-\u003eAddFloat(\"y\", yPosition) \u003c B_OK\n```",
      "range": {
        "startLine": 434,
        "startChar": 0,
        "endLine": 437,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "c24ad93e793265d9e974e0f8dacccd9fb1e1fdfc",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9b42ced3_7b5ca66a",
        "filename": "src/add-ons/input_server/filters/padblocker/PadBlocker.cpp",
        "patchSetId": 3
      },
      "lineNbr": 172,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-11-10T13:35:06Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\tif (message-\u003eFindInt32(\"be:device\", \u0026device) !\u003d B_OK || device !\u003d B_TOUCHPAD_DEVICE)\n```",
      "range": {
        "startLine": 171,
        "startChar": 0,
        "endLine": 172,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "c24ad93e793265d9e974e0f8dacccd9fb1e1fdfc",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9402ecf7_e43e515d",
        "filename": "src/servers/input/InputServer.cpp",
        "patchSetId": 3
      },
      "lineNbr": 785,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2024-11-10T20:06:07Z",
      "side": 1,
      "message": "We can\u0027t change these here, other applications may rely on them.",
      "revId": "c24ad93e793265d9e974e0f8dacccd9fb1e1fdfc",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b3e09101_284ef44b",
        "filename": "src/servers/input/InputServer.cpp",
        "patchSetId": 3
      },
      "lineNbr": 785,
      "author": {
        "id": 1000695
      },
      "writtenOn": "2024-11-10T21:08:46Z",
      "side": 1,
      "message": "Search-and-replace be damned, thanks for noticing that. 👍",
      "parentUuid": "9402ecf7_e43e515d",
      "revId": "c24ad93e793265d9e974e0f8dacccd9fb1e1fdfc",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b87b1d44_640d6db9",
        "filename": "src/servers/input/InputServer.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1692,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-11-10T13:35:06Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\tcase B_MOUSE_MOVED:\n```",
      "range": {
        "startLine": 1692,
        "startChar": 0,
        "endLine": 1692,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "c24ad93e793265d9e974e0f8dacccd9fb1e1fdfc",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "18c5a94f_59e9ea6d",
        "filename": "src/servers/input/InputServer.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1696,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-11-10T13:35:06Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\t\tif (event-\u003eFindInt32(\"buttons\", \u0026buttons) !\u003d B_OK)\n```",
      "range": {
        "startLine": 1696,
        "startChar": 0,
        "endLine": 1696,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "c24ad93e793265d9e974e0f8dacccd9fb1e1fdfc",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "89091e2d_3c6a1832",
        "filename": "src/servers/input/InputServer.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1702,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-11-10T13:35:06Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\t\t// supposed to fall through\n```",
      "range": {
        "startLine": 1702,
        "startChar": 0,
        "endLine": 1702,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "c24ad93e793265d9e974e0f8dacccd9fb1e1fdfc",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}