{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c69019bb_de966aba",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2025-03-07T21:47:40Z",
      "side": 1,
      "message": "New patchset: the big difference is invoking \"fnclex\" instead of \"emms\". This re-fixes #18656. All other tests from referenced tickets retested, none panic the kernel whether on run or on entering Debugger.\n\nHowever, the test from #18656 (and only that one, so far) sometimes winds up with Debugger crashing with a floating-point exception. Two examples:\n```\nFPU exception 19: 1, 26\ndebug_server: Thread 684 entered the debugger: Floating point exception\nstack trace, current PC 0x1df35fe571d  \u003c/boot/home/Desktop/pkun/testdir4/gltests/foo\u003e raise_invalid_comparison + 0x28:\n  (0x7fc8fd7c75c0)  0x1df35fe5788  \u003c/boot/home/Desktop/pkun/testdir4/gltests/foo\u003e main + 0x55\n  (0x7fc8fd7c75e0)  0x1df35fe56ae  \u003c/boot/home/Desktop/pkun/testdir4/gltests/foo\u003e _start + 0x3e\n  (0x7fc8fd7c7610)  0x1139d408cd5  \u003c/boot/system/runtime_loader\u003e runtime_loader + 0x115\nFPU exception 19: 33, 26\ndebug_server: Thread 697 entered the debugger: Floating point exception\nstack trace, current PC 0x26668881797  \u003c/boot/system/lib/libbe.so\u003e _ZNK8BPrivate4Icon8Gradient12MakeGradientEPji + 0x567:\n  (0x7f47cb648500)  0x26668881b4c  \u003c/boot/system/lib/libbe.so\u003e _ZN8BPrivate4Icon5Style11SetGradientEPKNS0_8GradientE + 0xdc\n  (0x7f47cb648530)  0x2666887a183  \u003c/boot/system/lib/libbe.so\u003e _ZN8BPrivate4Icon16FlatIconImporter12_ParseStylesERNS0_18LittleEndianBufferEPNS0_9ContainerINS0_5StyleEEE + 0x523\n  (0x7f47cb648630)  0x2666887aef2  \u003c/boot/system/lib/libbe.so\u003e _ZN8BPrivate4Icon16FlatIconImporter14_ParseSectionsERNS0_18LittleEndianBufferEPNS0_4IconE + 0x52\n  (0x7f47cb648690)  0x2666887b0d8  \u003c/boot/system/lib/libbe.so\u003e _ZN8BPrivate4Icon16FlatIconImporter6ImportEPNS0_4IconEPhm + 0x38\n  (0x7f47cb6486f0)  0x266688790be  \u003c/boot/system/lib/libbe.so\u003e _ZN10BIconUtils13GetVectorIconEPKhmP7BBitmap + 0xde\n  (0x7f47cb648b50)  0x26668879942  \u003c/boot/system/lib/libbe.so\u003e _ZN10BIconUtils13GetSystemIconEPKcP7BBitmap + 0x92\n  (0x7f47cb648c40)  0x81d3928e8a  \u003c/boot/system/apps/Debugger\u003e _ZN17AlertWithCheckboxC1EPKcS1_S1_S1_S1_S1_ + 0xba\n  (0x7f47cb648cd0)  0x81d38fb1fe  \u003c/boot/system/apps/Debugger\u003e _ZN22GraphicalUserInterface20SynchronouslyAskUserEPKcS1_S1_S1_S1_ + 0x12e\n  (0x7f47cb648d50)  0x91e6b28d77  \u003c/boot/system/lib/libdebugger.so\u003e _ZN24DwarfLoadingStateHandler11HandleStateEP34SpecificImageDebugInfoLoadingStateP13UserInterface + 0x147\n  (0x7f47cb648e10)  0x91e6b0912e  \u003c/boot/system/lib/libdebugger.so\u003e _ZN12TeamDebugger28_HandleDebugInfoJobUserInputEP26ImageDebugInfoLoadingState + 0x3e\n  (0x7f47cb648e40)  0x91e6b0ee88  \u003c/boot/system/lib/libdebugger.so\u003e _ZN12TeamDebugger15MessageReceivedEP8BMessage + 0x3a8\n  (0x7f47cb648ec0)  0x266687489c4  \u003c/boot/system/lib/libbe.so\u003e _ZN7BLooper11task_looperEv + 0x294\n  (0x7f47cb648f10)  0x26668747f51  \u003c/boot/system/lib/libbe.so\u003e _ZN7BLooper7_task0_EPv + 0x21\n  (0x7f47cb648f30)  0xc7813f83e9  \u003c/boot/system/lib/libroot.so\u003e thread_entry + 0x19\n```\nand:\n```\nFPU exception 19: 1, 26\ndebug_server: Killing team 1260 ()\ndebug_server: Thread 1265 entered the debugger: Floating point exception\nstack trace, current PC 0x1c9ad23771d  \u003c/boot/home/Desktop/pkun/testdir4/gltests/foo\u003e raise_invalid_comparison + 0x28:\n  (0x7fc6e62b3c90)  0x1c9ad237788  \u003c/boot/home/Desktop/pkun/testdir4/gltests/foo\u003e main + 0x55\n  (0x7fc6e62b3cb0)  0x1c9ad2376ae  \u003c/boot/home/Desktop/pkun/testdir4/gltests/foo\u003e _start + 0x3e\n  (0x7fc6e62b3ce0)  0x8952ef0cd5  \u003c/boot/system/runtime_loader\u003e runtime_loader + 0x115\nFPU exception 16: 63873, 26\ndebug_server: Thread 1275 entered the debugger: Floating point exception\nstack trace, current PC 0x192ba900373  \u003c/boot/system/lib/libdebugger.so\u003e _ZN13CpuStateX8664C2ERK22x86_64_debug_cpu_state + 0x213:\n  (0x7ff8c42c2b20)  0x192ba8fd9d0  \u003c/boot/system/lib/libdebugger.so\u003e _ZN17ArchitectureX866414CreateCpuStateEPKvmRP8CpuState + 0x40\n  (0x7ff8c42c2b50)  0x192ba928a4e  \u003c/boot/system/lib/libdebugger.so\u003e _ZN22LocalDebuggerInterface11GetCpuStateEiRP8CpuState + 0x3e\n  (0x7ff8c42c2f90)  0x192ba9376ba  \u003c/boot/system/lib/libdebugger.so\u003e _ZN17GetThreadStateJob2DoEv + 0x3a\n  (0x7ff8c42c2ff0)  0x192ba959336  \u003c/boot/system/lib/libdebugger.so\u003e _ZN6Worker12_ProcessJobsEv + 0x296\n  (0x7ff8c42c3030)  0x192ba9593e1  \u003c/boot/system/lib/libdebugger.so\u003e _ZN6Worker11_WorkerLoopEv + 0x11\n  (0x7ff8c42c3060)  0xed5a5a03e9  \u003c/boot/system/lib/libroot.so\u003e thread_entry + 0x19\n```\nI don\u0027t know what\u0027s going on there. Any ideas? Maybe Debugger is mis-handling a NAN and corrupting its own internal FPU state?",
      "revId": "8495155bdd3afcb095d7e21ad8cf7e7a11293cf2",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5c1d6f24_1c1e8529",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2025-03-07T21:56:57Z",
      "side": 1,
      "message": "Ran a quick compile benchmark with hrev58713 vs. this commit, differences seem to be in the realm of noise.",
      "revId": "8495155bdd3afcb095d7e21ad8cf7e7a11293cf2",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c9a65792_dfc97eee",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2025-03-07T21:57:11Z",
      "side": 1,
      "message": "(Actually this commit plus the rest of the stack.)",
      "parentUuid": "5c1d6f24_1c1e8529",
      "revId": "8495155bdd3afcb095d7e21ad8cf7e7a11293cf2",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0abffb60_829c92c3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000015
      },
      "writtenOn": "2025-03-07T21:59:11Z",
      "side": 1,
      "message": "The first stack trace appears to be simply asking libbe to load an SVG icon (it\u0027s while constructing an alert prompt with a graphic ; the second appears to be while constructing a copy of the CPU state at a stack frame. There doesn\u0027t really seem to be any special reason this should crash, that code does no real FP ops besides copying the state it gets from the debug nub into local variables (c.f. https://github.com/haiku/haiku/blob/master/src/kits/debugger/arch/x86_64/CpuStateX8664.cpp#L24).",
      "parentUuid": "c69019bb_de966aba",
      "revId": "8495155bdd3afcb095d7e21ad8cf7e7a11293cf2",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ba3a0d8_c6e01db9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2025-03-07T22:10:26Z",
      "side": 1,
      "message": "Well, the registers include NANs (and some of these tests it\u0027s SNANS), so depending on what Debugger does with them it might trigger faults. But yes, the BIcon crash looks much more suspicious. I did manage to reproduce a similar one (these problems only happen intermittently.)\n\nIIRC I did try \"EMMS\" after \"FNCLEX\" in the context switch method and it didn\u0027t make any difference. But seeing as some of these are purely exception 19, that\u0027s not MMX related at all. So I don\u0027t really know what is going on with that, and where this bad value in MXCSR came from, if we are always reloading it on context switch.",
      "parentUuid": "0abffb60_829c92c3",
      "revId": "8495155bdd3afcb095d7e21ad8cf7e7a11293cf2",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7f783220_8c8a7c59",
        "filename": "headers/private/kernel/arch/x86/64/cpu.h",
        "patchSetId": 3
      },
      "lineNbr": 16,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-07T21:49:28Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tasm volatile(\"fnstcw %0\" : \"\u003dm\"(fpuControl));\n```",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 16,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "8495155bdd3afcb095d7e21ad8cf7e7a11293cf2",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "26724e1f_477814b5",
        "filename": "headers/private/kernel/arch/x86/64/cpu.h",
        "patchSetId": 3
      },
      "lineNbr": 18,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-07T21:49:28Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tasm volatile(\"stmxcsr %0\" : \"\u003dm\"(sseControl));\n```",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 18,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "8495155bdd3afcb095d7e21ad8cf7e7a11293cf2",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f3ad0641_396df54f",
        "filename": "headers/private/kernel/arch/x86/64/cpu.h",
        "patchSetId": 3
      },
      "lineNbr": 38,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-07T21:49:28Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tasm volatile(\"ldmxcsr %0\" : : \"m\"(sseControl));\n\tasm volatile(\"fldcw %0\" : : \"m\"(fpuControl));\n```",
      "range": {
        "startLine": 37,
        "startChar": 0,
        "endLine": 38,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "8495155bdd3afcb095d7e21ad8cf7e7a11293cf2",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}