{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f4301180_a1405370",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2023-10-26T16:45:31Z",
      "side": 1,
      "message": "According to puck\u0027s comment on the ticket (and remarks in IRC) this is not correct.",
      "revId": "af3c96dd8c8dc58c475f056d89da0db1d89aaa6e",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d29c8998_6b0eaf2f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2023-11-06T13:43:40Z",
      "side": 1,
      "message": "Can you explain how this is not correct?\n\nAs mentionned in the ticket, we do half a conversion at line 814:\n\n    key \u003d fInputReport.Usages()[0] + current[i];\n    \nThis adds the usage minimum, and offsets everything by 1.\n\nIn this changeset, we do the opposite conversion: subtract the minimum, going back to the initial value. No scaling is applied, as Puck says in their comment.\n\nSo, maybe this code is confusing, because these two operations are done in two different places and it\u0027s not very clear what\u0027s going on. But I think it is still correct functionally.",
      "parentUuid": "f4301180_a1405370",
      "revId": "af3c96dd8c8dc58c475f056d89da0db1d89aaa6e",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "48c391a4_4b595c00",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2023-12-11T18:17:02Z",
      "side": 1,
      "message": "\u003cpuck_\u003e yeah i think i ended up agreeing that the code was confusing but i think it was correct\n\u003cpuck_\u003e but i don\u0027t entirely recall right now",
      "revId": "af3c96dd8c8dc58c475f056d89da0db1d89aaa6e",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bc876d07_30ee0a9b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2023-12-11T19:47:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d29c8998_6b0eaf2f",
      "revId": "af3c96dd8c8dc58c475f056d89da0db1d89aaa6e",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a4b6e199_1db36a71",
        "filename": "src/add-ons/kernel/drivers/input/hid_shared/HIDReportItem.h",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2023-10-26T12:37:40Z",
      "side": 1,
      "message": "There are methods ScaledData and ScaledRangeData in HIDReportItem to isolate other classes a bit from the details.\n\nShould we add one for this case as well? So users of HID reports don\u0027t all have to make a similar fix if they use arrays?",
      "revId": "af3c96dd8c8dc58c475f056d89da0db1d89aaa6e",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ],
  "submitRequirementResults": []
}