{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "7f27c15f_22c0dfc9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2024-01-01T19:06:55Z",
      "side": 1,
      "message": "I think this conflicts with https://review.haiku-os.org/c/haiku/+/7259 ?",
      "revId": "03a46a8519eaf56ae34d6725bd1a264b030c1db5",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fe86e234_1f1922fd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-01-02T13:46:25Z",
      "side": 1,
      "message": "Nah.   7259 doesn\u0027t seem useful to be honest.  Axel said himself that protocol doesn\u0027t belong in the network kit.\n\nThe most useful thing in 7259 is changing \"DHCP\" to \"Automatic\" in src/preferences/network/InterfaceAddressView.cpp since auto-configuration on IPv6 can be Router Advertisements, or DHCPv6.\n\nRouter Advertisements haven\u0027t been common place, but still a strong possibility on IPv6.",
      "parentUuid": "7f27c15f_22c0dfc9",
      "revId": "03a46a8519eaf56ae34d6725bd1a264b030c1db5",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5b7f500d_6d5fb476",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-01-02T13:51:32Z",
      "side": 1,
      "message": "wait... they disabled that \"DHCP\" to \"Automatic\" in InterfaceAddressView.cpp.    Yeah, 7259 doesn\u0027t make sense at all.\n\nI think we could change \"DHCP\" to \"Automatic\" on all protocols to cover DHCP / Zeroconf / Router Advertisements\"",
      "parentUuid": "fe86e234_1f1922fd",
      "revId": "03a46a8519eaf56ae34d6725bd1a264b030c1db5",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d8981c89_b3a15519",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-01-02T13:55:04Z",
      "side": 1,
      "message": "... which still doesn\u0027t make sense as that\u0027s just a UI label.\n\n...  My vote is to abandon 7259",
      "parentUuid": "5b7f500d_6d5fb476",
      "revId": "03a46a8519eaf56ae34d6725bd1a264b030c1db5",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b31413fc_afc5b180",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000610
      },
      "writtenOn": "2024-01-02T16:26:12Z",
      "side": 1,
      "message": "Hi, the main issue we are trying to address in 7259 is this issue\nhttps://dev.haiku-os.org/ticket/7228. \nIn the current codebase, if we try to change the mode for ipv4 it affects ipv6 and vice-versa .",
      "parentUuid": "d8981c89_b3a15519",
      "revId": "03a46a8519eaf56ae34d6725bd1a264b030c1db5",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "27031666_946bebf0",
        "filename": "src/servers/net/AutoconfigLooper.cpp",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 1000012
      },
      "writtenOn": "2024-01-01T16:09:02Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t:\n\tBLooper(device),\n```",
      "range": {
        "startLine": 32,
        "startChar": 0,
        "endLine": 33,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "03a46a8519eaf56ae34d6725bd1a264b030c1db5",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2fefcfdc_8c53921c",
        "filename": "src/servers/net/AutoconfigLooper.cpp",
        "patchSetId": 2
      },
      "lineNbr": 146,
      "author": {
        "id": 1000448
      },
      "writtenOn": "2024-01-02T16:42:21Z",
      "side": 1,
      "message": "Isn\u0027t that making the misuse of the interface-level auto-configuration flags even worse than it already is? (sure, it doesn\u0027t really change anything yet, but I am wondering about the direction here)\n\nI think at the moment the existing auto-configuration flags should only represent DHCPv4, and anything else will need separate flags (and ideally, all those flags will be moved to the protocol level).\n\nWhat meaning would these flags have for a DHCPv4+DHCPv6 configuration where only DHCPv4 has completed yet and we are still waiting for DHCPv6 to complete? Which flags will be set in that case?",
      "revId": "03a46a8519eaf56ae34d6725bd1a264b030c1db5",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6c926c1b_15822f07",
        "filename": "src/servers/net/AutoconfigLooper.cpp",
        "patchSetId": 2
      },
      "lineNbr": 150,
      "author": {
        "id": 1000016
      },
      "writtenOn": "2024-01-02T16:35:15Z",
      "side": 1,
      "message": "Instead of duplicating all these lines, there should be a new _ConfigureInterface() method that does this.\n\nHowever, I\u0027m not sure that having these flags on the interface at all makes that much sense. What are we using these flags for? If it\u0027s only to mark the interface for the user, then that would be okay, otherwise probably not.",
      "revId": "03a46a8519eaf56ae34d6725bd1a264b030c1db5",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0e11f5b9_80d7afaa",
        "filename": "src/servers/net/DHCPClient.cpp",
        "patchSetId": 2
      },
      "lineNbr": 647,
      "author": {
        "id": 1000012
      },
      "writtenOn": "2024-01-01T16:09:02Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\t\t\t_AddressToString(fAssignedAddress).String());\n```",
      "range": {
        "startLine": 646,
        "startChar": 0,
        "endLine": 647,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "03a46a8519eaf56ae34d6725bd1a264b030c1db5",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1ab03666_dcd96574",
        "filename": "src/servers/net/DHCPClient.cpp",
        "patchSetId": 2
      },
      "lineNbr": 797,
      "author": {
        "id": 1000012
      },
      "writtenOn": "2024-01-01T16:09:02Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\t\tsyslog(LOG_DEBUG, \"%s:  gateway: %s\\n\", Device(), _AddressToString(data).String());\n```",
      "range": {
        "startLine": 795,
        "startChar": 0,
        "endLine": 797,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "03a46a8519eaf56ae34d6725bd1a264b030c1db5",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f545a63e_16915361",
        "filename": "src/servers/net/DHCPClient.cpp",
        "patchSetId": 2
      },
      "lineNbr": 802,
      "author": {
        "id": 1000012
      },
      "writtenOn": "2024-01-01T16:09:02Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\t\tsyslog(LOG_DEBUG, \"%s:  subnet: %s\\n\", Device(), _AddressToString(data).String());\n```",
      "range": {
        "startLine": 800,
        "startChar": 0,
        "endLine": 802,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "03a46a8519eaf56ae34d6725bd1a264b030c1db5",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d03d5671_43182972",
        "filename": "src/servers/net/DHCPClient.cpp",
        "patchSetId": 2
      },
      "lineNbr": 807,
      "author": {
        "id": 1000012
      },
      "writtenOn": "2024-01-01T16:09:02Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\t\tsyslog(\n\t\t\t\t\tLOG_DEBUG, \"%s:  broadcast: %s\\n\", Device(), _AddressToString(data).String());\n```",
      "range": {
        "startLine": 805,
        "startChar": 0,
        "endLine": 807,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "03a46a8519eaf56ae34d6725bd1a264b030c1db5",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b715c7c6_72fadd07",
        "filename": "src/servers/net/DHCPClient.cpp",
        "patchSetId": 2
      },
      "lineNbr": 825,
      "author": {
        "id": 1000012
      },
      "writtenOn": "2024-01-01T16:09:02Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\t\tsyslog(LOG_DEBUG, \"%s:  server: %s\\n\", Device(), _AddressToString(data).String());\n```",
      "range": {
        "startLine": 823,
        "startChar": 0,
        "endLine": 825,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "03a46a8519eaf56ae34d6725bd1a264b030c1db5",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0657e781_f35c05ce",
        "filename": "src/servers/net/DHCPClient.cpp",
        "patchSetId": 2
      },
      "lineNbr": 829,
      "author": {
        "id": 1000012
      },
      "writtenOn": "2024-01-01T16:09:02Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\t\t\tsyslog(LOG_ERR, \"%s: BNetworkAddress::SetAddress failed with %s!\\n\", Device(),\n\t\t\t\t\t\tstrerror(status));\n```",
      "range": {
        "startLine": 827,
        "startChar": 0,
        "endLine": 829,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "03a46a8519eaf56ae34d6725bd1a264b030c1db5",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "64cc724e_0aeb07d4",
        "filename": "src/servers/net/DHCPClient.cpp",
        "patchSetId": 2
      },
      "lineNbr": 837,
      "author": {
        "id": 1000012
      },
      "writtenOn": "2024-01-01T16:09:02Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\t\tsyslog(\n\t\t\t\t\tLOG_DEBUG, \"%s:  lease time: %lu seconds\\n\", Device(), ntohl(*(uint32*) data));\n```",
      "range": {
        "startLine": 835,
        "startChar": 0,
        "endLine": 837,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "03a46a8519eaf56ae34d6725bd1a264b030c1db5",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e4c837ed_5fc1bbad",
        "filename": "src/servers/net/DHCPClient.cpp",
        "patchSetId": 2
      },
      "lineNbr": 842,
      "author": {
        "id": 1000012
      },
      "writtenOn": "2024-01-01T16:09:02Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\t\t\tntohl(*(uint32*) data));\n```",
      "range": {
        "startLine": 841,
        "startChar": 0,
        "endLine": 842,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "03a46a8519eaf56ae34d6725bd1a264b030c1db5",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bdc7c531_d10f7112",
        "filename": "src/servers/net/DHCPClient.cpp",
        "patchSetId": 2
      },
      "lineNbr": 847,
      "author": {
        "id": 1000012
      },
      "writtenOn": "2024-01-01T16:09:02Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\t\t\tntohl(*(uint32*) data));\n```",
      "range": {
        "startLine": 846,
        "startChar": 0,
        "endLine": 847,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "03a46a8519eaf56ae34d6725bd1a264b030c1db5",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aea33474_8dcd9000",
        "filename": "src/servers/net/DHCPClient.cpp",
        "patchSetId": 2
      },
      "lineNbr": 853,
      "author": {
        "id": 1000012
      },
      "writtenOn": "2024-01-01T16:09:02Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\t\tsyslog(LOG_DEBUG, \"%s:  host name: \\\"%.*s\\\"\\n\", Device(), (int) size,\n\t\t\t\t\t(const char*) data);\n```",
      "range": {
        "startLine": 851,
        "startChar": 0,
        "endLine": 853,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "03a46a8519eaf56ae34d6725bd1a264b030c1db5",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e49847b6_583d8b9e",
        "filename": "src/servers/net/DHCPClient.cpp",
        "patchSetId": 2
      },
      "lineNbr": 873,
      "author": {
        "id": 1000012
      },
      "writtenOn": "2024-01-01T16:09:02Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\t\tsyslog(LOG_INFO, \"%s:  error message: \\\"%.*s\\\"\\n\", Device(), (int) size,\n\t\t\t\t\t(const char*) data);\n```",
      "range": {
        "startLine": 871,
        "startChar": 0,
        "endLine": 873,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "03a46a8519eaf56ae34d6725bd1a264b030c1db5",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ac7a64a1_cb5aee03",
        "filename": "src/servers/net/DHCPClient.cpp",
        "patchSetId": 2
      },
      "lineNbr": 878,
      "author": {
        "id": 1000012
      },
      "writtenOn": "2024-01-01T16:09:02Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\t\tsyslog(LOG_DEBUG, \"%s:  UNKNOWN OPTION %\" B_PRIu32 \" (0x%\" B_PRIx32 \")\\n\", Device(),\n\t\t\t\t\t(uint32) option, (uint32) option);\n```",
      "range": {
        "startLine": 876,
        "startChar": 0,
        "endLine": 878,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "03a46a8519eaf56ae34d6725bd1a264b030c1db5",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}