{
  "comments": [
    {
      "key": {
        "uuid": "172d8d01_d336f97e",
        "filename": "headers/private/kernel/arch/riscv64/arch_kernel_args.h",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 1000172
      },
      "writtenOn": "2021-08-17T23:04:13Z",
      "side": 1,
      "message": "This struct can be moved to some common header and shared with ARM, PPC or even x86.",
      "revId": "ea09cab401cffd5069de9e8302d6788bcff8e5cb",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e8e4b915_9b36cbb9",
        "filename": "headers/private/kernel/arch/riscv64/arch_kernel_args.h",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1000172
      },
      "writtenOn": "2021-08-17T23:04:13Z",
      "side": 1,
      "message": "Why 32? Does FDT documentation says something about maximum \"compatible\" string length?",
      "revId": "ea09cab401cffd5069de9e8302d6788bcff8e5cb",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d2a4be9c_9bea3217",
        "filename": "src/system/boot/platform/efi/dtb.cpp",
        "patchSetId": 1
      },
      "lineNbr": 379,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-17T18:27:26Z",
      "side": 1,
      "message": "maybe gUART \u003d\u003d NULL would be better here?",
      "revId": "ea09cab401cffd5069de9e8302d6788bcff8e5cb",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e6e9b0a9_7d070444",
        "filename": "src/system/boot/platform/efi/dtb.cpp",
        "patchSetId": 1
      },
      "lineNbr": 379,
      "author": {
        "id": 1000172
      },
      "writtenOn": "2021-08-17T23:26:15Z",
      "side": 1,
      "message": "Note that gUART is for internal boot loader use. This code detects UART for passing to kernel.",
      "parentUuid": "d2a4be9c_9bea3217",
      "revId": "ea09cab401cffd5069de9e8302d6788bcff8e5cb",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "daff5e61_925dc8f7",
        "filename": "src/system/kernel/arch/riscv64/arch_debug_console.cpp",
        "patchSetId": 1
      },
      "lineNbr": 105,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-17T18:27:26Z",
      "side": 1,
      "message": "I chose not to use the logic in the bootloader here since the bootloader code is \"all architectures\" while the kernel debug console is \"one architecture\"\n\nThe logic may change around which uarts are available once we get into the kernel.\n\nThe dtb.cpp in efi doesn\u0027t need any architecture macros today.. but it may in the future.",
      "revId": "ea09cab401cffd5069de9e8302d6788bcff8e5cb",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    }
  ]
}