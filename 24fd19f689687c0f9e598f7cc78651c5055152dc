{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "07448737_73efad6b",
        "filename": "src/system/kernel/arch/arm64/VMSAv8TranslationMap.cpp",
        "patchSetId": 7
      },
      "lineNbr": 38,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-08-26T21:43:23Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nVMSAv8TranslationMap::VMSAv8TranslationMap(bool kernel, phys_addr_t pageTable, int pageBits,\n\tint vaBits, int minBlockLevel)\n```",
      "range": {
        "startLine": 37,
        "startChar": 0,
        "endLine": 38,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "24fd19f689687c0f9e598f7cc78651c5055152dc",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "10117fb3_1381a6d2",
        "filename": "src/system/kernel/arch/arm64/VMSAv8TranslationMap.cpp",
        "patchSetId": 7
      },
      "lineNbr": 152,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-08-26T21:43:23Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tEntryRemoved\u0026\u0026 entryRemoved)\n```",
      "range": {
        "startLine": 152,
        "startChar": 0,
        "endLine": 152,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "24fd19f689687c0f9e598f7cc78651c5055152dc",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "34cbc708_adc20f3d",
        "filename": "src/system/kernel/arch/arm64/VMSAv8TranslationMap.cpp",
        "patchSetId": 7
      },
      "lineNbr": 163,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2024-08-27T20:18:02Z",
      "side": 1,
      "message": "should va and nextVa use the addr_t type, since they are memory addresses? (that doesn\u0027t change anything, it\u0027s just a bit more clear when an int contains a virtual address or a physical address (phys_addr_t)",
      "revId": "24fd19f689687c0f9e598f7cc78651c5055152dc",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cb6a1c09_e0ef853e",
        "filename": "src/system/kernel/arch/arm64/VMSAv8TranslationMap.cpp",
        "patchSetId": 7
      },
      "lineNbr": 163,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2024-08-29T06:43:59Z",
      "side": 1,
      "message": "A lot of this file needs to be cleaned up for that. I\u0027ll add a general sweep for it to my todo list.",
      "parentUuid": "34cbc708_adc20f3d",
      "revId": "24fd19f689687c0f9e598f7cc78651c5055152dc",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1d025af7_c7db0f39",
        "filename": "src/system/kernel/arch/arm64/VMSAv8TranslationMap.cpp",
        "patchSetId": 7
      },
      "lineNbr": 166,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-08-26T21:43:23Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\tuint64_t oldPte \u003d (uint64_t)atomic_get_and_set64((int64*)\u0026pt[i], 0);\n```",
      "range": {
        "startLine": 166,
        "startChar": 0,
        "endLine": 166,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "24fd19f689687c0f9e598f7cc78651c5055152dc",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4347b98a_f9ee2b1e",
        "filename": "src/system/kernel/arch/arm64/VMSAv8TranslationMap.cpp",
        "patchSetId": 7
      },
      "lineNbr": 173,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-08-26T21:43:23Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\tasm(\"tlbi vaae1is, %0\" ::\"r\"((fullVa \u003e\u003e 12) \u0026 kTLBIMask));\n```",
      "range": {
        "startLine": 173,
        "startChar": 0,
        "endLine": 173,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "24fd19f689687c0f9e598f7cc78651c5055152dc",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Build-Check",
        "description": {
          "value": "Builds OK on all architectures"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "-label:Verified\u003d-1"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-label:Verified=-1"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Verified=-1"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "24fd19f689687c0f9e598f7cc78651c5055152dc",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}