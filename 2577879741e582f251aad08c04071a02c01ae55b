{
  "comments": [
    {
      "key": {
        "uuid": "72b2a415_93f5f18c",
        "filename": "src/system/kernel/vm/vm.cpp",
        "patchSetId": 7
      },
      "lineNbr": 6684,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2019-12-10T18:43:38Z",
      "side": 1,
      "message": "LockedPages would be a better naming.",
      "revId": "2577879741e582f251aad08c04071a02c01ae55b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5b5035c5_de25cc2c",
        "filename": "src/system/kernel/vm/vm.cpp",
        "patchSetId": 7
      },
      "lineNbr": 6693,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2019-12-10T18:43:38Z",
      "side": 1,
      "message": "Isn\u0027t there another structure which would better fit?",
      "revId": "2577879741e582f251aad08c04071a02c01ae55b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "202a3905_ec07db48",
        "filename": "src/system/kernel/vm/vm.cpp",
        "patchSetId": 7
      },
      "lineNbr": 6703,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2019-12-10T18:43:38Z",
      "side": 1,
      "message": "a lock is needed around access to the structures.",
      "revId": "2577879741e582f251aad08c04071a02c01ae55b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d4cd24e4_30d9202c",
        "filename": "src/system/kernel/vm/vm.cpp",
        "patchSetId": 7
      },
      "lineNbr": 6704,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2019-12-10T18:43:38Z",
      "side": 1,
      "message": "B_CURRENT_TEAM is just a constant, this can\u0027t be used for such a check.",
      "revId": "2577879741e582f251aad08c04071a02c01ae55b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "453b7f89_6de6dfc5",
        "filename": "src/system/kernel/vm/vm.cpp",
        "patchSetId": 7
      },
      "lineNbr": 6710,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2019-12-10T18:43:38Z",
      "side": 1,
      "message": "new can fail.",
      "revId": "2577879741e582f251aad08c04071a02c01ae55b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a8990099_89fce103",
        "filename": "src/system/kernel/vm/vm.cpp",
        "patchSetId": 7
      },
      "lineNbr": 6711,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2019-12-10T18:43:38Z",
      "side": 1,
      "message": "new can fail.",
      "revId": "2577879741e582f251aad08c04071a02c01ae55b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e959aad_f1338334",
        "filename": "src/system/kernel/vm/vm.cpp",
        "patchSetId": 7
      },
      "lineNbr": 6721,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2019-12-10T21:13:55Z",
      "side": 1,
      "message": "I don\u0027t get this check. overlapping is allowed. Actually you should keep the fisrst overlapping range, to be extended after the lock_memory call.",
      "revId": "2577879741e582f251aad08c04071a02c01ae55b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "016fda82_6b677808",
        "filename": "src/system/kernel/vm/vm.cpp",
        "patchSetId": 7
      },
      "lineNbr": 6726,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2019-12-10T18:43:38Z",
      "side": 1,
      "message": "B_DMA_IO isn\u0027t needed. B_READ_DEVICE and/or should be used depending on the area protection.",
      "revId": "2577879741e582f251aad08c04071a02c01ae55b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "12efc81c_5f718677",
        "filename": "src/system/kernel/vm/vm.cpp",
        "patchSetId": 7
      },
      "lineNbr": 6744,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2019-12-10T21:13:55Z",
      "side": 1,
      "message": "If a new range object is needed, it should be allocated before lock_memory() to gracefully handle an allocation failure, it should be updated and inserted after lock_memory() succeeded.",
      "revId": "2577879741e582f251aad08c04071a02c01ae55b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3091c22a_fe3f0679",
        "filename": "src/system/kernel/vm/vm.cpp",
        "patchSetId": 7
      },
      "lineNbr": 6769,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2019-12-10T21:13:55Z",
      "side": 1,
      "message": "this isn\u0027t an error condition, according to the spec.",
      "revId": "2577879741e582f251aad08c04071a02c01ae55b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "de13b4dc_30c17f26",
        "filename": "src/system/kernel/vm/vm.cpp",
        "patchSetId": 7
      },
      "lineNbr": 6783,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2019-12-10T21:13:55Z",
      "side": 1,
      "message": "keep in mind, unlock_memory() should be called for the portions of the range which are already locked.",
      "revId": "2577879741e582f251aad08c04071a02c01ae55b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "85df5ebf_2ea65441",
        "filename": "src/system/kernel/vm/vm.cpp",
        "patchSetId": 7
      },
      "lineNbr": 6788,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2019-12-10T21:13:55Z",
      "side": 1,
      "message": "Like with _user_mlock(), a new range object should be allocated before the unlock_memory call to gracefully handle allocation failures.",
      "revId": "2577879741e582f251aad08c04071a02c01ae55b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "028db481_5d738846",
        "filename": "src/tests/system/kernel/mlock_test.cpp",
        "patchSetId": 7
      },
      "lineNbr": 5,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2019-12-10T18:36:28Z",
      "side": 1,
      "message": "What actually means this space size?",
      "revId": "2577879741e582f251aad08c04071a02c01ae55b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fdb31d51_9e8d1b07",
        "filename": "src/tests/system/kernel/mlock_test.cpp",
        "patchSetId": 7
      },
      "lineNbr": 13,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2019-12-10T18:36:28Z",
      "side": 1,
      "message": "get_area_info should also be checked before mlock, obviously.",
      "revId": "2577879741e582f251aad08c04071a02c01ae55b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    }
  ]
}