{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ea559584_e1657e1f",
        "filename": "src/add-ons/kernel/bus_managers/acpi/ACPICAHaiku.cpp",
        "patchSetId": 4
      },
      "lineNbr": 241,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2022-01-23T09:02:02Z",
      "side": 1,
      "message": "I think in the kernel, if we do things right, we should never need to cast a void* to a phys_addr_t. This would create (or rather, would not solve) problems on PAE systems (32bit x86), where void* and addr_t are 32bit, but phys_addr_t is 64bit. It may still work OK as long as the table is actually located in the first 4GB of RAM, but it\u0027s not very safe.\n\nSo it looks like a level of indirection is missing here, and this code should be something like:\n\n    ACPI_PHYSICAL_ADDRESS* address \u003d (ACPI_PHYSICAL_ADDRESS*)get_boot_item(\"ACPI_ROOT_POINTER\", NULL);\n    if (address !\u003d NULL)\n        sACPIRoot \u003d *address;\n\nAnd the boot side code should be adjusted accordingly.\n\nIn the bootloader, I can understand casts from void* to phys_addr_t under controlled conditions (when there is identity mapping). But in the kernel there really shouldn\u0027t be any place where we need to do that.",
      "revId": "def5edb99e8f0b473443545488ea278435063782",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}