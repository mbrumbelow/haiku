{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ea559584_e1657e1f",
        "filename": "src/add-ons/kernel/bus_managers/acpi/ACPICAHaiku.cpp",
        "patchSetId": 4
      },
      "lineNbr": 241,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2022-01-23T09:02:02Z",
      "side": 1,
      "message": "I think in the kernel, if we do things right, we should never need to cast a void* to a phys_addr_t. This would create (or rather, would not solve) problems on PAE systems (32bit x86), where void* and addr_t are 32bit, but phys_addr_t is 64bit. It may still work OK as long as the table is actually located in the first 4GB of RAM, but it\u0027s not very safe.\n\nSo it looks like a level of indirection is missing here, and this code should be something like:\n\n    ACPI_PHYSICAL_ADDRESS* address \u003d (ACPI_PHYSICAL_ADDRESS*)get_boot_item(\"ACPI_ROOT_POINTER\", NULL);\n    if (address !\u003d NULL)\n        sACPIRoot \u003d *address;\n\nAnd the boot side code should be adjusted accordingly.\n\nIn the bootloader, I can understand casts from void* to phys_addr_t under controlled conditions (when there is identity mapping). But in the kernel there really shouldn\u0027t be any place where we need to do that.",
      "revId": "def5edb99e8f0b473443545488ea278435063782",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "74fd4788_27756d69",
        "filename": "src/add-ons/kernel/bus_managers/acpi/ACPICAHaiku.cpp",
        "patchSetId": 4
      },
      "lineNbr": 241,
      "author": {
        "id": 1000341
      },
      "writtenOn": "2022-01-23T09:33:06Z",
      "side": 1,
      "message": "This is exactly what\u0027s happening here (in the original code)\nThere\u0027s a cast from void* to phys_addr_t, and the probelm is exactly what you described: it doesn\u0027t work on x86 with PAE.\n\nAdding an extra level of indirection could be a way forward but then it will break the compatibility with old (e.g. beta3) bootloader - also for the x86_64 as it uses the same field.\n\nHowever, maybe we don\u0027t need to change the bootloader after all as ACPI root pointer is passed to the kernel in a FixedWidthPointer field of arch_kernel_args and I believe FixedWidthPointer is always 64-bits. So it might be enough to change how ACPI_ROOT_POINTER is populated in kernel/arch/x86/arch_platform.cpp",
      "parentUuid": "ea559584_e1657e1f",
      "revId": "def5edb99e8f0b473443545488ea278435063782",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "76c07dca_ca3e6b42",
        "filename": "src/add-ons/kernel/bus_managers/acpi/ACPICAHaiku.cpp",
        "patchSetId": 4
      },
      "lineNbr": 241,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2022-01-23T09:54:07Z",
      "side": 1,
      "message": "\u003e This is exactly what\u0027s happening here (in the original code)\nThere\u0027s a cast from void* to phys_addr_t, and the probelm is exactly what you described: it doesn\u0027t work on x86 with PAE.\n\nYes, but this change doesn\u0027t fully fix it.\n\nBefore this change:\n- Addresses below 7FFFFFFF work OK\n- Addresses between 80000000 and FFFFFFFF don\u0027t work because they are incorrectly sign-extended\n- Addresses above FFFFFFFF don\u0027t work because some bits are lost when putting a physical address into a void* at the bootloader level\n\nAfter this change:\n- Addresses below 7FFFFFFF still work OK\n- Addresses between 80000000 and FFFFFFFF now work\n- Addresses above FFFFFFFF still get truncated\n\nPossibly it doesn\u0027t really matter for the ACPI table pointer if there is some guarantee somewhere that this pointer has to be in the first 4GB of physical address space.\n\nBut even then, get_boot_item is supposed to return a pointer to memory that the kernel can access, and using it to directly return a physical address is a hack, and not proper use of the API as designed.",
      "parentUuid": "74fd4788_27756d69",
      "revId": "def5edb99e8f0b473443545488ea278435063782",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cded05e2_4d7249f5",
        "filename": "src/add-ons/kernel/bus_managers/acpi/ACPICAHaiku.cpp",
        "patchSetId": 4
      },
      "lineNbr": 241,
      "author": {
        "id": 1000341
      },
      "writtenOn": "2022-01-23T13:44:37Z",
      "side": 1,
      "message": "Fair enough.\nI\u0027ll try to tackle this issue in a separate commit.",
      "parentUuid": "76c07dca_ca3e6b42",
      "revId": "def5edb99e8f0b473443545488ea278435063782",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}