{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c72e70c4_cdb8cc74",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000670
      },
      "writtenOn": "2025-01-26T10:07:15Z",
      "side": 1,
      "message": "This change implements cleanup and improvements that John Scipione and Maximo Castaneda suggested while implementing strikeout, but I thought it\u0027s better to split that into a separate commit.\nIt doesn\u0027t have any functional differences.",
      "revId": "406967853b6e0a6836b4056196139a17e3c018b5",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c73cd767_5d45b4be",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000013
      },
      "writtenOn": "2025-01-26T21:49:45Z",
      "side": 1,
      "message": "I asked for you to something like this when you were working on strikeout, this is exactly the kind of change I was looking for.",
      "revId": "406967853b6e0a6836b4056196139a17e3c018b5",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c8a081a7_fc2cf1f2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000016
      },
      "writtenOn": "2025-01-27T13:28:38Z",
      "side": 1,
      "message": "I\u0027m not sure I like the flags field. Within the class, fDryRun etc. are less verbosive and as distinct. It\u0027s only the call itself that is improved, but if it\u0027s only called in a single case, I don\u0027t really see the benefit when you just can define the dryRun variable beforehand. IOW, I would get rid of the flags field entirely, again.",
      "revId": "406967853b6e0a6836b4056196139a17e3c018b5",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d572e1fb_13d26035",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000016
      },
      "writtenOn": "2025-01-27T13:29:28Z",
      "side": 1,
      "message": "Changing score to have a discussion about this, before someone just presses submit :-)",
      "revId": "406967853b6e0a6836b4056196139a17e3c018b5",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1719f06c_951f481e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000013
      },
      "writtenOn": "2025-01-27T13:34:18Z",
      "side": 1,
      "message": "The point is that when you want to add another flag you donâ€™t have to modify the method, you add another variable to the flags bitmap and pass it in. nipos added a strikeout flag, but next time it might be overline or blockout and instead of adding yet another bool parameter to the method you add another line to the bitmap and the method signature stays the same.",
      "revId": "406967853b6e0a6836b4056196139a17e3c018b5",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "264abe23_28330c9f",
        "filename": "src/servers/app/drawing/Painter/AGGTextRenderer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1000390
      },
      "writtenOn": "2025-01-26T14:14:48Z",
      "side": 1,
      "message": "these seem quite verbose, maybe they can be made local to the class and have names like kStrikeOut or so, though i gues kSomething is weong since this is an enum. The coding guidelines don\u0027t say much for this case.\n\nWaiting to see what another dev sais here.",
      "revId": "406967853b6e0a6836b4056196139a17e3c018b5",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c95000c1_d292dd33",
        "filename": "src/servers/app/drawing/Painter/AGGTextRenderer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1000013
      },
      "writtenOn": "2025-01-26T21:55:12Z",
      "side": 1,
      "message": "What I\u0027ve started doing is putting the enum inside the class. To use the enum values you have to write for example AGGTextRenderer::STRING_RENDERER_DRY_RUN. However that is only for public enums that are exported in a header. This is only defined in the class file so the scope creep is not important here.",
      "parentUuid": "264abe23_28330c9f",
      "revId": "406967853b6e0a6836b4056196139a17e3c018b5",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "632f9eb2_0edd85e9",
        "filename": "src/servers/app/drawing/Painter/AGGTextRenderer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-01-26T10:08:42Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tSTRING_RENDERER_DRY_RUN \u003d 0x0001,\n\tSTRING_RENDERER_SUBPIXEL_ANTI_ALIASED \u003d 0x0002,\n\tSTRING_RENDERER_UNDERSCORE \u003d 0x0004,\n\tSTRING_RENDERER_STRIKEOUT \u003d 0x0008\n```",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 34,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "406967853b6e0a6836b4056196139a17e3c018b5",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d437f9ee_fabaa95e",
        "filename": "src/servers/app/drawing/Painter/AGGTextRenderer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 346,
      "author": {
        "id": 1000390
      },
      "writtenOn": "2025-01-26T14:14:48Z",
      "side": 1,
      "message": "This could be passed to the function instead, this scales with the font *size* but that may not be what is wanted. For example if in the future strikeout and underline can respect font weights (especially for variable fonts)",
      "revId": "406967853b6e0a6836b4056196139a17e3c018b5",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}