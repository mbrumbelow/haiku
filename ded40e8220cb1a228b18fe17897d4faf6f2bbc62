{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "dfc8726e_9f7294e7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2023-03-12T10:19:55Z",
      "side": 1,
      "message": "Looks good, minor comments only.",
      "revId": "ded40e8220cb1a228b18fe17897d4faf6f2bbc62",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4b08d159_a0ad8322",
        "filename": "headers/posix/arch/arm/signal.h",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2023-03-12T10:19:55Z",
      "side": 1,
      "message": "Not sure if it can be aligned better if d[] is last?",
      "revId": "ded40e8220cb1a228b18fe17897d4faf6f2bbc62",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "973d2f8c_473a27e7",
        "filename": "src/system/kernel/arch/arm/arch_commpage.cpp",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2023-03-12T10:50:01Z",
      "side": 1,
      "message": "I think you can pass the constant as an input operand to the asm directive instead:\n\n\tasm volatile(\n\t\t\"mov r0, %0;\"\n\t\t\"svc %1\"\n\t\t:: \"r\"(data), \"i\"(SYSCALL_RESTORE_SIGNAL_FRAME)\n\t);\n\t\nhttps://gcc.gnu.org/onlinedocs/gcc/Simple-Constraints.html#Simple-Constraints\n\nAlso it may be useful to name the inputs instead of using %0 and %1:\n\n\tasm volatile(\n\t\t\"mov r0, %0;\"\n\t\t\"svc [SYSCALL_RESTORE_SIGNAL_FRAME]\"\n\t\t:: \"r\"(data)\n\t\t, [SYSCALL_RESTORE_SIGNAL_FRAME] \"i\"(SYSCALL_RESTORE_SIGNAL_FRAME)\n\t);\n\nhttps://gcc.gnu.org/onlinedocs/gcc/Extended-Asm.html",
      "revId": "ded40e8220cb1a228b18fe17897d4faf6f2bbc62",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bfe26e23_bdf8a940",
        "filename": "src/system/kernel/arch/arm/arch_int.cpp",
        "patchSetId": 1
      },
      "lineNbr": 279,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2023-03-12T10:19:55Z",
      "side": 1,
      "message": "Perhaps it is worth just doing one lookup?\nWe seem to call thread_get_current_thread a lot.",
      "revId": "ded40e8220cb1a228b18fe17897d4faf6f2bbc62",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "41df653d_b5d7cadb",
        "filename": "src/system/kernel/arch/arm/arch_int.cpp",
        "patchSetId": 1
      },
      "lineNbr": 279,
      "author": {
        "id": 1000172
      },
      "writtenOn": "2023-03-12T10:59:54Z",
      "side": 1,
      "message": "thread_get_current_thread() should be just thread pointer register read operation. Saving thread pointer in a local variable will waste GP registers.",
      "parentUuid": "bfe26e23_bdf8a940",
      "revId": "ded40e8220cb1a228b18fe17897d4faf6f2bbc62",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ade85066_120613ec",
        "filename": "src/system/kernel/arch/arm/arch_int.cpp",
        "patchSetId": 1
      },
      "lineNbr": 293,
      "author": {
        "id": 1000172
      },
      "writtenOn": "2023-03-12T11:01:34Z",
      "side": 1,
      "message": "Line is too long.",
      "revId": "ded40e8220cb1a228b18fe17897d4faf6f2bbc62",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}