{
  "comments": [
    {
      "key": {
        "uuid": "440920d9_237dfa0f",
        "filename": "src/apps/haikudepot/ui/FeaturedPackagesView.cpp",
        "patchSetId": 2
      },
      "lineNbr": 172,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2018-08-06T07:59:19Z",
      "side": 0,
      "message": "This seems wrong. Why would the view not automatically receive keyboard focus when clicked?",
      "revId": "d4fd2af8ec6bda9c8d77b0e991394eedc6346151",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ee74a93_16d7ce1b",
        "filename": "src/apps/haikudepot/ui/FeaturedPackagesView.cpp",
        "patchSetId": 2
      },
      "lineNbr": 172,
      "author": {
        "id": 1000059
      },
      "writtenOn": "2018-08-09T02:17:03Z",
      "side": 0,
      "message": "I removed this because there seems to be a bug either in the layout manager or somewhere else in the interface kit. Basically, if you add a \"printf\" to this method and run HaikuDepot from the command line, what you\u0027ll see is that this MouseDown is called for every single PackageView object in the featured packages view regardless of where you click in HaikuDepot. This causes the focus to rapidly move between the various package views and breaks any attempt to establish keyboard navigation (which relies on a consistent focus on the view the user cares about). \nI have spent a number of hours trying to figure out why this MouseDown gets called over and over even when you are not clicking in the featured packages view, but haven\u0027t come up with an explanation.  Removing the MakeFocus has no negative impact that I\u0027ve observed, but has a positive impact of allowing us to maintain focus on the correct view",
      "parentUuid": "440920d9_237dfa0f",
      "revId": "d4fd2af8ec6bda9c8d77b0e991394eedc6346151",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "76d6c87c_745a8e09",
        "filename": "src/apps/haikudepot/ui/FeaturedPackagesView.cpp",
        "patchSetId": 2
      },
      "lineNbr": 172,
      "author": {
        "id": 1000059
      },
      "writtenOn": "2018-08-09T02:28:57Z",
      "side": 0,
      "message": "UPDATE: Tested adding the MakeFocus() back in and it has no effect on the solution. So I will be putting this back. (My comments about MouseDown being called over and over still stand, but it appears I was incorrect that removing the MakeFocus here was critical to the solution)",
      "parentUuid": "0ee74a93_16d7ce1b",
      "revId": "d4fd2af8ec6bda9c8d77b0e991394eedc6346151",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9d92e2e7_b285735e",
        "filename": "src/kits/interface/ColumnListView.cpp",
        "patchSetId": 2
      },
      "lineNbr": 4564,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2018-08-06T07:59:19Z",
      "side": 0,
      "message": "I don\u0027t understand this change without a lot more explaining in the commit message. This changes the behavior of a central method in OutlineView. Have all callers of this method been checked if they still work correctly? Maybe some or all relied on the previous behavior? The old behavior was to return false if the row in question is currently not visible (scrolled out of view). Perhaps that was intentional.",
      "revId": "d4fd2af8ec6bda9c8d77b0e991394eedc6346151",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5156b40a_79d4ae41",
        "filename": "src/kits/interface/ColumnListView.cpp",
        "patchSetId": 2
      },
      "lineNbr": 4564,
      "author": {
        "id": 1000059
      },
      "writtenOn": "2018-08-09T02:17:03Z",
      "side": 0,
      "message": "This method is being abused to either find the visible rect, OR in our case here to simply get the on-screen rectangle where the row would be visible if it were visible.\nI will do some more checking to see if this has other downstream effects, but I don\u0027t think that it does.  At least in my testing of HaikuDepot I could not observe any problems.  The main issue here is that fFocus is set by SetFocusRow, but the fFocusRect is NOT updated there - this leads to a synchronization issue which causes keyboard navigation to jump unexpected places in the package list view of HaikuDepot",
      "parentUuid": "9d92e2e7_b285735e",
      "revId": "d4fd2af8ec6bda9c8d77b0e991394eedc6346151",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    }
  ]
}