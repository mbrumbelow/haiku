{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "90df0799_12e86988",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2023-04-22T17:49:42Z",
      "side": 1,
      "message": "I did not test this with clang and could have gotten the syntax wrong.",
      "revId": "0848a71c2a7589c0ecd5c912f83b930d08ec1fe9",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a0a8ee35_aea8e00e",
        "filename": "headers/posix/unistd.h",
        "patchSetId": 2
      },
      "lineNbr": 363,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2023-04-22T19:54:45Z",
      "side": 1,
      "message": "This comment really feels like something that should be in docs/develop and not in a public header, to me.",
      "revId": "0848a71c2a7589c0ecd5c912f83b930d08ec1fe9",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "528dd4ac_0bc9f5bc",
        "filename": "headers/posix/unistd.h",
        "patchSetId": 2
      },
      "lineNbr": 363,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2023-04-26T11:07:11Z",
      "side": 1,
      "message": "I think docs/develop is meant for internal use for us who work on the OS. The information here is useful for people calling the function. Maybe some of it could go in the Haiku Book, but we have not started documenting \"POSIX\" APIs there.",
      "parentUuid": "a0a8ee35_aea8e00e",
      "revId": "0848a71c2a7589c0ecd5c912f83b930d08ec1fe9",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b4fa4439_52699e94",
        "filename": "headers/posix/unistd.h",
        "patchSetId": 2
      },
      "lineNbr": 363,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2023-04-26T16:49:52Z",
      "side": 1,
      "message": "We do actually have documentation for some POSIX APIs, especially where there are differences in Haiku\u0027s versions of them. I just updated the docs for the syslog functions yesterday: https://github.com/haiku/haiku/commit/6fa3716c79e01303ae9b712a2d3c3659cae55730\n\nSo, that seems a better place to put this.",
      "parentUuid": "528dd4ac_0bc9f5bc",
      "revId": "0848a71c2a7589c0ecd5c912f83b930d08ec1fe9",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da1844b2_19ea9442",
        "filename": "headers/posix/unistd.h",
        "patchSetId": 2
      },
      "lineNbr": 396,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2023-04-22T19:54:45Z",
      "side": 1,
      "message": "Is there any other way to get Clang to shut up about this besides disabling the warning, I wonder?",
      "revId": "0848a71c2a7589c0ecd5c912f83b930d08ec1fe9",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cd3cf328_090a30d3",
        "filename": "headers/posix/unistd.h",
        "patchSetId": 2
      },
      "lineNbr": 396,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2023-04-26T11:07:11Z",
      "side": 1,
      "message": "I can\u0027t think of anything that preserves all the requirements for this macro:\n\n- Works in C\n- Compilation fails if there are too many arguments passed to ioctl\n- Keep the code somewhat readable\n\nReally, people should be using C++ :)\n\nTcpdump (whose developers found this problem) decided to call ioctl with 4 arguments for Haiku, that solves the warning for them, but introduces a special case. Indeed the documentation for ioctl says there is only a 3-argument form, and the reason for the varargs in the POSIX prototype is to allow the 3rd argument to be either a pointer or an integer. https://pubs.opengroup.org/onlinepubs/9699919799/functions/ioctl.html\n\n\u003e The arg argument represents additional information that is needed by this specific STREAMS device to perform the requested function. The type of arg depends upon the particular control request, but it shall be either an integer or a pointer to a device-specific data structure.\n\nIt seems the best fix is to deprecate ioctl and implement posix_devctl which will be added in the next POSIX standard to have an explicit pointer and size passed to the function: https://austingroupbugs.net/view.php?id\u003d729 (so it looks like we are not the only one seeing problems with this).",
      "parentUuid": "da1844b2_19ea9442",
      "revId": "0848a71c2a7589c0ecd5c912f83b930d08ec1fe9",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b5ab8006_3a9187d2",
        "filename": "headers/posix/unistd.h",
        "patchSetId": 2
      },
      "lineNbr": 396,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2023-04-26T16:49:52Z",
      "side": 1,
      "message": "I think the variable-arguments macro trick would work here, right? See: https://codecraft.co/2014/11/25/variadic-macros-tricks/ section \"Macro overrides\"\n\nI think that would be sufficiently readable here, and it should also work with GCC2 equally well.",
      "parentUuid": "cd3cf328_090a30d3",
      "revId": "0848a71c2a7589c0ecd5c912f83b930d08ec1fe9",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5b9a1033_1b9c36f2",
        "filename": "headers/posix/unistd.h",
        "patchSetId": 2
      },
      "lineNbr": 396,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2023-04-29T14:27:10Z",
      "side": 1,
      "message": "x512 already suggested this. It will cause problems if you try to call ioctl with more than 4 arguments or less than 2. The error messages are very confusing, as you can see here:\n\nhttps://godbolt.org/z/KMTn8o4qd\n\n(and that code sample is without caring about gcc2 compatibility)\n\nIt also means we have to introduce 4 new macros in this public header (which we probably then have to #undef?). Honestly if that\u0027s the alternative, I\u0027d rather keep the clang compiler warning and change nothing to the current implementation. The current implementation seems perfectly acceptable to me, why replace it with something way more complicated?\n\nAnd no, this is not \"sufficiently readable\". I had to go to compiler explorer to see what would happen with 1 or 5 arguments passed to ioctl because I would be unable to guess. And that was after spending some time reading this article, and a few days after having already read about and understood this solution a few days ago when I made this change.",
      "parentUuid": "b5ab8006_3a9187d2",
      "revId": "0848a71c2a7589c0ecd5c912f83b930d08ec1fe9",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "367143f4_daded1af",
        "filename": "headers/posix/unistd.h",
        "patchSetId": 2
      },
      "lineNbr": 396,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2023-04-29T15:33:13Z",
      "side": 1,
      "message": "OK.\n\nWell, then I guess we should just move the comment to documentation, and go with this solution.",
      "parentUuid": "5b9a1033_1b9c36f2",
      "revId": "0848a71c2a7589c0ecd5c912f83b930d08ec1fe9",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0570d411_e62e40cc",
        "filename": "headers/posix/unistd.h",
        "patchSetId": 2
      },
      "lineNbr": 396,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2023-04-29T21:59:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "367143f4_daded1af",
      "revId": "0848a71c2a7589c0ecd5c912f83b930d08ec1fe9",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}