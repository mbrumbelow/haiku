{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "5bb65837_dcf0a171",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000681
      },
      "writtenOn": "2025-01-26T23:26:27Z",
      "side": 1,
      "message": "I now have a reason to use a different flag - If I make the parameter optional, the -\u003cnumber\u003e for subtracting brightness doens\u0027t work anymore due to the way getopt handles optional arguments. I think I\u0027ll just use the new flag.",
      "revId": "27869eebf6c9bd84416df07a72058f737a0bbe34",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ddeff935_9129d9e1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2025-01-27T00:04:50Z",
      "side": 1,
      "message": "OK, I guess that makes sense.",
      "parentUuid": "5bb65837_dcf0a171",
      "revId": "27869eebf6c9bd84416df07a72058f737a0bbe34",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "48247680_ad01adfa",
        "filename": "src/bin/screenmode/screenmode.cpp",
        "patchSetId": 2
      },
      "lineNbr": 31,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-01-26T23:17:08Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nstatic struct option const kLongOptions[] \u003d {{\"fall-back\", no_argument, 0, \u0027f\u0027},\n\t{\"dont-confirm\", no_argument, 0, \u0027q\u0027}, {\"modeline\", no_argument, 0, \u0027m\u0027},\n\t{\"short\", no_argument, 0, \u0027s\u0027}, {\"list\", no_argument, 0, \u0027l\u0027}, {\"help\", no_argument, 0, \u0027h\u0027},\n\t{\"brightness\", required_argument, 0, \u0027b\u0027}, {\"get-brightness\", no_argument, 0, \u0027B\u0027}, {NULL}};\n```",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 31,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "27869eebf6c9bd84416df07a72058f737a0bbe34",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e6aa85c8_5f0af41d",
        "filename": "src/bin/screenmode/screenmode.cpp",
        "patchSetId": 2
      },
      "lineNbr": 95,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-01-26T23:17:08Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\"displays a\\n\"\n```",
      "range": {
        "startLine": 95,
        "startChar": 0,
        "endLine": 95,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "27869eebf6c9bd84416df07a72058f737a0bbe34",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b293d6de_0110c856",
        "filename": "src/bin/screenmode/screenmode.cpp",
        "patchSetId": 2
      },
      "lineNbr": 98,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-01-26T23:17:08Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\"\\t\\t\\tthe screen brightness is printed in short form.\\n\"\n```",
      "range": {
        "startLine": 98,
        "startChar": 0,
        "endLine": 98,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "27869eebf6c9bd84416df07a72058f737a0bbe34",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "176a3d9b_26e45a54",
        "filename": "src/bin/screenmode/screenmode.cpp",
        "patchSetId": 2
      },
      "lineNbr": 108,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-01-26T23:17:08Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\"[depth]\\n\"\n```",
      "range": {
        "startLine": 108,
        "startChar": 0,
        "endLine": 108,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "27869eebf6c9bd84416df07a72058f737a0bbe34",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "17f67787_fc66c492",
        "filename": "src/bin/screenmode/screenmode.cpp",
        "patchSetId": 2
      },
      "lineNbr": 131,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2025-01-27T00:04:50Z",
      "side": 1,
      "message": "This should be defined inside the getBrightness block only.",
      "revId": "27869eebf6c9bd84416df07a72058f737a0bbe34",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "76aaa1f5_7c989cfa",
        "filename": "src/bin/screenmode/screenmode.cpp",
        "patchSetId": 2
      },
      "lineNbr": 290,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2025-01-27T00:04:50Z",
      "side": 1,
      "message": "Is there a reason to prevent setting the mode when getBrightness is specified?",
      "revId": "27869eebf6c9bd84416df07a72058f737a0bbe34",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eda754d2_157bc014",
        "filename": "src/bin/screenmode/screenmode.cpp",
        "patchSetId": 2
      },
      "lineNbr": 306,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2025-01-27T00:04:50Z",
      "side": 1,
      "message": "should check return value for error",
      "revId": "27869eebf6c9bd84416df07a72058f737a0bbe34",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}