{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "846966d3_89e5f10b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000172
      },
      "writtenOn": "2022-04-06T21:45:18Z",
      "side": 1,
      "message": "It should work for non-ancient x86 too.",
      "revId": "587e73737feec732a1de4ce0b4255af6a730a319",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8576f4b2_3359fd18",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2022-04-08T15:27:48Z",
      "side": 1,
      "message": "ACPI has still a dependency on B_PCI_MODULE_NAME. How does it work?\nMaybe provide a syslog so it\u0027s more easy to see.",
      "revId": "587e73737feec732a1de4ce0b4255af6a730a319",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ee52bc7b_0c75e38a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2022-04-08T15:58:10Z",
      "side": 1,
      "message": "Why not doing a \"lazy init\" of the PCI module in ACPI; i.e., only request it when ACPICA does? Presumably it asks for it only once everything has been parsed and it is \"safe\" to load the PCI bus manager?",
      "revId": "587e73737feec732a1de4ce0b4255af6a730a319",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dced8769_cf3e3eb5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2022-04-09T08:53:10Z",
      "side": 1,
      "message": "The PCI module can be loaded before the ACPI one (there is no added dependency for now). The supports_device and device node publishing only happens later, when both modules are already loaded and published.\n\nAs pointed out in the forum, this is probably not enough, as a lot of things are done in pci_init (directly when the module is loaded) and not when the node is actually published.\n\nMy plan (for now) is to leave things as they are, and wait until the node is published to get the data from ACPI (it should be safe to call get_module/put_module then instead of having a dependency), and do the resource assignment for child devices at that time. I don\u0027t know if this will work, yet. For my case where just a few devices need to be assigned, it could be fine, but for ARM and RISC-V, I understand that the firmware initializes nothing at all, so it would be a problem there.",
      "parentUuid": "8576f4b2_3359fd18",
      "revId": "587e73737feec732a1de4ce0b4255af6a730a319",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0ce3597c_b3e7631e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2022-09-11T08:29:19Z",
      "side": 1,
      "message": "This was fixed in a separate commit:\n\nhttps://cgit.haiku-os.org/haiku/commit/?h\u003dhrev56265\u0026id\u003d26a39bed4ac4ec371cb65e867ec8e8eea27edff2",
      "parentUuid": "dced8769_cf3e3eb5",
      "revId": "587e73737feec732a1de4ce0b4255af6a730a319",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}