{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e7a1f57f_9f754459",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2024-03-11T14:12:41Z",
      "side": 1,
      "message": "Won\u0027t this generate warnings?",
      "revId": "5feefe69026a08b826877bb4a43d1a8cbd4b4449",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "946c34cb_5f69441e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000390
      },
      "writtenOn": "2024-03-11T14:20:02Z",
      "side": 1,
      "message": "Warnings are compiler dependent. Is there something you think is wrong with this code?",
      "parentUuid": "e7a1f57f_9f754459",
      "revId": "5feefe69026a08b826877bb4a43d1a8cbd4b4449",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7e5e7f7d_bf5e74fe",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2024-03-11T14:22:42Z",
      "side": 1,
      "message": "Yes: the precise type of \"int32\" changes with architecture and pointer bit depth. There are differences even on 32-bit x86 between gcc2 and gcc8+ for BeOS ABI reasons. Sometimes int32 is just an int (%d), sometimes it\u0027s a long int (%ld), and when it\u0027s one and not the other, we\u0027ll get compiler warnings and maybe errors. That\u0027s the entire reason for the use of the PRI macros rather than just writing %ld or %d in the first place.",
      "parentUuid": "946c34cb_5f69441e",
      "revId": "5feefe69026a08b826877bb4a43d1a8cbd4b4449",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0fc430bd_f787e155",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000390
      },
      "writtenOn": "2024-03-11T14:27:14Z",
      "side": 1,
      "message": "This macro cannot be used directly in translated strings because of it changing creating a different string.\n\nI am a bit baffled why int32 would be redefined. Why define it based on platform-dependant types at all? the 32 already makes it clear what is expected.\n\nOr is the problem that the string sequences only work for platform-dependant types?\n\nSo either: I do a string substition with this string later, or we just ignore the warning if it isn‘t relevant.",
      "parentUuid": "7e5e7f7d_bf5e74fe",
      "revId": "5feefe69026a08b826877bb4a43d1a8cbd4b4449",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9e0645c0_24164f38",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000390
      },
      "writtenOn": "2024-03-11T14:28:53Z",
      "side": 1,
      "message": "In this code I don‘t get a warning on amd64. While the same string is generated with the macro on intel x86. So as it is written this is warning free currently.",
      "parentUuid": "0fc430bd_f787e155",
      "revId": "5feefe69026a08b826877bb4a43d1a8cbd4b4449",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}