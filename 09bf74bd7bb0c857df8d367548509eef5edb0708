{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "eb4cdaa5_cdb8bbfa",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2022-07-10T13:19:04Z",
      "side": 1,
      "message": "I don\u0027t think we should put these functions into the kernel, really, for a variety of reasons; one is that they can potentially use floating point features that are not often used in kernel mode, which might be a little too far off the beaten path.\n\nInstead this entire class should probably be moved into the input_server addon instead, which would simplify some other things too. I can take a look at that if nobody else has time to.",
      "revId": "09bf74bd7bb0c857df8d367548509eef5edb0708",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "62aeb85b_8414e250",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2022-07-10T21:33:02Z",
      "side": 1,
      "message": "\u003e one is that they can potentially use floating point features that are not often used in kernel mode, which might be a little too far off the beaten path.\n\nSo your argument is we should not put them there because they are not there?\n\n\u003e I can take a look at that if nobody else has time to.\n\nWe can still merge this code and change it again later?\n\nI don\u0027t see the point of holding this patch forever on Gerrit until someone does the next step. Yes, of course eventually this should be done in userland, but until then, let\u0027s at least do things in the proper way.\n\nAs for floating point in the kernel, either we support it, or we don\u0027t. Allowing multiplications and divisions but not square roots makes no sense.",
      "parentUuid": "eb4cdaa5_cdb8bbfa",
      "revId": "09bf74bd7bb0c857df8d367548509eef5edb0708",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "725eeb11_5760e200",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2022-07-11T11:19:52Z",
      "side": 1,
      "message": "As no one has taken time to unify movement handling on userland yet I think this should be merged. It saves energy and makes the experience better. Long term we should move it userland, but I am guessing that is going to take a few years at least..\n",
      "revId": "09bf74bd7bb0c857df8d367548509eef5edb0708",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "907dc4e0_e3a31147",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2022-07-13T08:39:17Z",
      "side": 1,
      "message": "the x86_gcc2 build is still broken.",
      "parentUuid": "725eeb11_5760e200",
      "revId": "09bf74bd7bb0c857df8d367548509eef5edb0708",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e6d6aeec_f6e389c6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2022-07-15T11:16:53Z",
      "side": 1,
      "message": "Should be fixed now.",
      "parentUuid": "907dc4e0_e3a31147",
      "revId": "09bf74bd7bb0c857df8d367548509eef5edb0708",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a8854eca_9126b5d0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2022-07-15T14:29:53Z",
      "side": 1,
      "message": "Ok that was a bit confusing because musl has a few empty files (??) that are added to the build in the Jamfile (???). Now I have added the one where the implementation really is.\n\nFor x86, floor.s contains all floor and ceil implementations for both double and float.",
      "parentUuid": "e6d6aeec_f6e389c6",
      "revId": "09bf74bd7bb0c857df8d367548509eef5edb0708",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}