{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "567f2935_5492d875",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2023-09-17T21:12:14Z",
      "side": 1,
      "message": "We could probably even do the crazy tagging I did for haikuports.cross github action as a last resort (or maybe just echo it with the failure): \n\n git tag $(git ls-remote https://review.haiku-os.org/haiku refs/tags/hrev* | awk \u0027/\u0027$(git rev-parse HEAD)\u0027/ { gsub(/refs\\/tags\\//, \"\"); print $2 }\u0027)",
      "revId": "d8d9e4f19d33c3acf765adc0bae877dc9102bc0f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "776ff4b0_5e841432",
        "filename": "build/jam/FileRules",
        "patchSetId": 2
      },
      "lineNbr": 393,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2023-09-18T08:30:01Z",
      "side": 1,
      "message": "The reason this depends on the .git/index file specifically is to force re-generation of the haiku revision file when the index is changed.\n\nBy removing this dependency, the haiku revision file will be created once, and never modified when you add more commits, defeating the purpose of it.\n\nSo, either we need something more complicated to locate the git index file, or we should always regenerate the haiku revision file (but then we will needlessly rebuild things that do not need to be rebuilt).",
      "revId": "d8d9e4f19d33c3acf765adc0bae877dc9102bc0f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0d4ec8a0_5250cabe",
        "filename": "build/jam/FileRules",
        "patchSetId": 2
      },
      "lineNbr": 393,
      "author": {
        "id": 1000223
      },
      "writtenOn": "2023-09-18T16:26:23Z",
      "side": 1,
      "message": "\u003e we need something more complicated to locate the git index file\n\nIf possible, that would be what `git rev-parse --git-path index` returns. Works both in the repository and in worktrees.\n\nWould close #16808.",
      "parentUuid": "776ff4b0_5e841432",
      "revId": "d8d9e4f19d33c3acf765adc0bae877dc9102bc0f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c2465588_da124243",
        "filename": "build/jam/FileRules",
        "patchSetId": 2
      },
      "lineNbr": 393,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2023-09-19T08:49:21Z",
      "side": 1,
      "message": "I don\u0027t know if it\u0027s possible to do a \"dynamic\" dependency in Jam (on a file which path is determined by running a command), but if not, the path to the index file could be determined in the configure script, and then Jam can use it without problems.\n\nWhere is the haiku-rootdir-git variable set? I don\u0027t see it referenced anywhere else in the git repository, which seems strange.",
      "parentUuid": "0d4ec8a0_5250cabe",
      "revId": "d8d9e4f19d33c3acf765adc0bae877dc9102bc0f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "af338b10_41852f5c",
        "filename": "build/jam/FileRules",
        "patchSetId": 2
      },
      "lineNbr": 393,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2023-10-10T17:28:52Z",
      "side": 1,
      "message": "this now depends on the .git/index file  if present, otherwise the .git file",
      "parentUuid": "c2465588_da124243",
      "revId": "d8d9e4f19d33c3acf765adc0bae877dc9102bc0f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9a97a0e3_5ec2e61d",
        "filename": "build/jam/FileRules",
        "patchSetId": 2
      },
      "lineNbr": 393,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2023-10-10T17:31:12Z",
      "side": 1,
      "message": "But the .git file won\u0027t change during commits, will it...?",
      "parentUuid": "af338b10_41852f5c",
      "revId": "d8d9e4f19d33c3acf765adc0bae877dc9102bc0f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f7365db2_3e089041",
        "filename": "build/jam/FileRules",
        "patchSetId": 2
      },
      "lineNbr": 393,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2023-10-10T18:15:55Z",
      "side": 1,
      "message": "I can\u0027t answer. Didn\u0027t test with git working-tree.",
      "parentUuid": "9a97a0e3_5ec2e61d",
      "revId": "d8d9e4f19d33c3acf765adc0bae877dc9102bc0f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "17a7370c_7a074c34",
        "filename": "build/jam/FileRules",
        "patchSetId": 2
      },
      "lineNbr": 393,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2023-10-11T00:51:19Z",
      "side": 1,
      "message": "Well, let\u0027s wait till someone can then.",
      "parentUuid": "f7365db2_3e089041",
      "revId": "d8d9e4f19d33c3acf765adc0bae877dc9102bc0f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9ddc16cc_73446016",
        "filename": "build/jam/FileRules",
        "patchSetId": 2
      },
      "lineNbr": 393,
      "author": {
        "id": 1000172
      },
      "writtenOn": "2023-10-11T03:31:41Z",
      "side": 1,
      "message": "I am using Git worktree a lot.",
      "parentUuid": "17a7370c_7a074c34",
      "revId": "d8d9e4f19d33c3acf765adc0bae877dc9102bc0f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7417453f_f772353f",
        "filename": "build/jam/FileRules",
        "patchSetId": 2
      },
      "lineNbr": 393,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2023-10-11T07:27:03Z",
      "side": 1,
      "message": "And what\u0027s the behavior for the file .git after each commit?",
      "parentUuid": "9ddc16cc_73446016",
      "revId": "d8d9e4f19d33c3acf765adc0bae877dc9102bc0f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3bb575ad_1ab343f2",
        "filename": "build/jam/FileRules",
        "patchSetId": 2
      },
      "lineNbr": 393,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2023-10-11T07:39:10Z",
      "side": 1,
      "message": "So it seems the .git file only contains a path prefixed with \"gitdir: \". This path probably needs to be read when running configure and stored in BuildConfig.",
      "parentUuid": "7417453f_f772353f",
      "revId": "d8d9e4f19d33c3acf765adc0bae877dc9102bc0f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3bbe2ca5_c700212b",
        "filename": "build/jam/FileRules",
        "patchSetId": 2
      },
      "lineNbr": 393,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2023-10-13T10:48:41Z",
      "side": 1,
      "message": "Ok, at least this version does not break the updating with the \"usual\" .git/index usage.\n\nIn the worktree case, it will fix the build, but the hrev file will not be updated if you checkout a different commit.\n\nTo me that\u0027s good enough to merge, we can keep track of this known limitation in a ticket if someone wants to fix it.",
      "parentUuid": "3bb575ad_1ab343f2",
      "revId": "d8d9e4f19d33c3acf765adc0bae877dc9102bc0f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4fc25a20_7c6a1183",
        "filename": "build/jam/FileRules",
        "patchSetId": 2
      },
      "lineNbr": 393,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2023-10-13T15:20:39Z",
      "side": 1,
      "message": "I read some online documentation. If one is inside any git repository (including a worktree), the \"git dir\" can be found by running the command:\n```\ngit rev-parse --git-dir\n```\nExample result on a worktree I made locally (out of the Haiku \"website\" repository):\n```\n$ git rev-parse --git-dir\n/.../Haiku/website/.git/worktrees/website-2\n```\nAnd indeed inside that directory is the \"index\" file for this worktree:\n```\n$ ls /.../Haiku/website/.git/worktrees/website-2\nHEAD  ORIG_HEAD  commondir  gitdir  index  logs\n```",
      "parentUuid": "3bbe2ca5_c700212b",
      "revId": "d8d9e4f19d33c3acf765adc0bae877dc9102bc0f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7c4d8565_fd451490",
        "filename": "build/jam/FileRules",
        "patchSetId": 2
      },
      "lineNbr": 393,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2023-10-26T08:11:21Z",
      "side": 1,
      "message": "This is already mentioned by MÃ¡ximo in the second comment of this thread, yes.\n\nThe problem then is how to run this command, parse the result, and use that as a filepath that another Jam rule can depend on. Because, normally, Jam will first compute the dependency tree and what needs to be rebuilt, and only then, start running any commands.\n\nIf that\u0027s not doable in Jam, we may have to do it in the configure script instead? And store the path to the index file in generated/BuildConfig.",
      "parentUuid": "4fc25a20_7c6a1183",
      "revId": "d8d9e4f19d33c3acf765adc0bae877dc9102bc0f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b12bf073_148d36a4",
        "filename": "build/jam/FileRules",
        "patchSetId": 2
      },
      "lineNbr": 393,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2023-10-29T17:28:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7c4d8565_fd451490",
      "revId": "d8d9e4f19d33c3acf765adc0bae877dc9102bc0f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}