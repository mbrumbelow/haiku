{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c2b46024_94b3988a",
        "filename": "headers/os/drivers/Drivers.h",
        "patchSetId": 1
      },
      "lineNbr": 109,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-12-20T16:36:10Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tB_GET_DEVICE_SIZE \u003d 1, /* get # bytes - returns size_t in *data */\n\tB_SET_DEVICE_SIZE, /* set # bytes - passes size_t in *data */\n\tB_SET_NONBLOCKING_IO, /* set to non-blocking i/o */\n\tB_SET_BLOCKING_IO, /* set to blocking i/o */\n\tB_GET_READ_STATUS, /* check if can read w/o blocking */\n\t/* returns bool in *data */\n\tB_GET_WRITE_STATUS, /* check if can write w/o blocking */\n\t/* returns bool in *data */\n\tB_GET_GEOMETRY, /* get info about device geometry */\n\t/* returns struct geometry in *data */\n\tB_GET_DRIVER_FOR_DEVICE, /* get the path of the executable serving */\n\t/* that device */\n\tB_GET_PARTITION_INFO, /* get info about a device partition */\n\t/* returns struct partition_info in *data */\n\tB_SET_PARTITION, /* obsolete, will be removed */\n\tB_FORMAT_DEVICE, /* low-level device format */\n\tB_EJECT_DEVICE, /* eject the media if supported */\n\tB_GET_ICON, /* return device icon (see struct below) */\n\tB_GET_BIOS_GEOMETRY, /* get info about device geometry */\n\t/* as reported by the bios */\n\t/*   returns struct geometry in *data */\n\tB_GET_MEDIA_STATUS, /* get status of media. */\n\t/* return status_t in *data: */\n\t/* B_NO_ERROR: media ready */\n\t/* B_DEV_NO_MEDIA: no media */\n\t/* B_DEV_NOT_READY: device not ready */\n\t/* B_DEV_MEDIA_CHANGED: media changed */\n\t/*  since open or last B_GET_MEDIA_STATUS */\n\t/* B_DEV_MEDIA_CHANGE_REQUESTED: user */\n\t/*  pressed button on drive */\n\t/* B_DEV_DOOR_OPEN: door open */\n\tB_LOAD_MEDIA, /* load the media if supported */\n\tB_GET_BIOS_DRIVE_ID, /* get bios id for this device */\n\tB_SET_UNINTERRUPTABLE_IO, /* prevent cntl-C from interrupting i/o */\n\tB_SET_INTERRUPTABLE_IO, /* allow cntl-C to interrupt i/o */\n\tB_FLUSH_DRIVE_CACHE, /* flush drive cache */\n\tB_GET_PATH_FOR_DEVICE, /* get the absolute path of the device */\n\tB_GET_ICON_NAME, /* get an icon name identifier */\n\tB_GET_VECTOR_ICON, /* retrieves the device\u0027s vector icon */\n\tB_GET_DEVICE_NAME, /* get name, string buffer */\n\tB_TRIM_DEVICE, /* trims blocks, see fs_trim_data */\n```",
      "range": {
        "startLine": 69,
        "startChar": 0,
        "endLine": 109,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "0c7fb2dd5875634355ab93d7271f217cc1ed7b9c",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4eb9910c_c6a35bd2",
        "filename": "headers/os/drivers/Drivers.h",
        "patchSetId": 1
      },
      "lineNbr": 113,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-12-20T16:36:10Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tB_GET_NEXT_OPEN_DEVICE \u003d 1000, /* obsolete, will be removed */\n\tB_ADD_FIXED_DRIVER, /* obsolete, will be removed */\n\tB_REMOVE_FIXED_DRIVER, /* obsolete, will be removed */\n```",
      "range": {
        "startLine": 111,
        "startChar": 0,
        "endLine": 113,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "0c7fb2dd5875634355ab93d7271f217cc1ed7b9c",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f4478a5b_4eeaad15",
        "filename": "headers/os/drivers/Drivers.h",
        "patchSetId": 1
      },
      "lineNbr": 118,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-12-20T16:36:10Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tB_AUDIO_DRIVER_BASE \u003d 8000, /* base for codes in audio_driver.h */\n\tB_MIDI_DRIVER_BASE \u003d 8100, /* base for codes in midi_driver.h */\n\tB_JOYSTICK_DRIVER_BASE \u003d 8200, /* base for codes in joystick.h */\n\tB_GRAPHIC_DRIVER_BASE \u003d 8300, /* base for codes in graphic_driver.h */\n```",
      "range": {
        "startLine": 115,
        "startChar": 0,
        "endLine": 118,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "0c7fb2dd5875634355ab93d7271f217cc1ed7b9c",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a00ec4b5_cceeb54c",
        "filename": "headers/os/drivers/Drivers.h",
        "patchSetId": 1
      },
      "lineNbr": 120,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-12-20T16:36:10Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tB_SOCKET_IO_BASE \u003d 8900, /* base for codes in sys/sockio.h */\n```",
      "range": {
        "startLine": 120,
        "startChar": 0,
        "endLine": 120,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "0c7fb2dd5875634355ab93d7271f217cc1ed7b9c",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2993269e_5f5b505d",
        "filename": "headers/os/drivers/Drivers.h",
        "patchSetId": 1
      },
      "lineNbr": 122,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-12-20T16:36:10Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tB_DEVICE_OP_CODES_END \u003d 9999 /* end of Be-defined control ids */\n```",
      "range": {
        "startLine": 122,
        "startChar": 0,
        "endLine": 122,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "0c7fb2dd5875634355ab93d7271f217cc1ed7b9c",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Build-Check",
        "description": {
          "value": "Builds OK on all architectures"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "-label:Verified\u003d-1"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-label:Verified=-1"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Verified=-1"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "0c7fb2dd5875634355ab93d7271f217cc1ed7b9c",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}