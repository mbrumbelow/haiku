{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6d4fda64_f5f45977",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2024-09-03T11:03:35Z",
      "side": 1,
      "message": "I see that FreeBSD uses write-back on x86-64, not write combining. For arm64 it seems to be write-back too (in pmap_mapbios()).",
      "revId": "8b5c212f0ff66092506b07dd5d5ff26c7e953ad9",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ebdf3a5d_f428e74f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2024-09-03T14:35:40Z",
      "side": 1,
      "message": "I think we use write-back by default for uncached areas?",
      "parentUuid": "6d4fda64_f5f45977",
      "revId": "8b5c212f0ff66092506b07dd5d5ff26c7e953ad9",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "20307bf9_e97ee7b4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2024-09-04T05:39:01Z",
      "side": 1,
      "message": "we use write-back as default on x86 for ranges without MTRR. FreeBSD doesn\u0027t set any default.",
      "parentUuid": "ebdf3a5d_f428e74f",
      "revId": "8b5c212f0ff66092506b07dd5d5ff26c7e953ad9",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ea1f041f_166646e3",
        "filename": "src/add-ons/kernel/bus_managers/acpi/ACPICAHaiku.cpp",
        "patchSetId": 1
      },
      "lineNbr": 500,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-09-03T08:46:26Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tarea_id area \u003d map_physical_memory(\"acpi_physical_mem_area\", (phys_addr_t)where, length,\n\t\tB_ANY_KERNEL_ADDRESS | B_MTR_WC, B_KERNEL_READ_AREA | B_KERNEL_WRITE_AREA, \u0026there);\n```",
      "range": {
        "startLine": 498,
        "startChar": 0,
        "endLine": 500,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "8b5c212f0ff66092506b07dd5d5ff26c7e953ad9",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}