{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "dd7c5c8f_0c7f6ed2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000172
      },
      "writtenOn": "2025-02-07T06:21:58Z",
      "side": 1,
      "message": "Why it is even allowed to pass NULL? Maybe some assert/debugger() call is better idea?",
      "revId": "2291698e5f5028254d782cfbaf143f5a1bdb90a8",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eea69aaf_a6fab698",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2025-02-08T08:33:27Z",
      "side": 1,
      "message": "Why do you think it\u0027s a good idea to change a legacy API?",
      "parentUuid": "dd7c5c8f_0c7f6ed2",
      "revId": "2291698e5f5028254d782cfbaf143f5a1bdb90a8",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7ca39564_4a0d2e94",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000172
      },
      "writtenOn": "2025-02-08T11:22:54Z",
      "side": 1,
      "message": "BeBook:\n\n\u003e  SetLabel() frees the current label and, if the argument it\u0027s passed is not NULL, replaces it with a copy of string. Label() returns the current label. The string it returns belongs to the BMenuField object.\n\nOK.",
      "parentUuid": "eea69aaf_a6fab698",
      "revId": "2291698e5f5028254d782cfbaf143f5a1bdb90a8",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d96cd1fb_af4bbcf7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000013
      },
      "writtenOn": "2025-02-09T04:37:13Z",
      "side": 1,
      "message": "```\n\nvoid\nBMenuField::SetLabel(const char* label)\n{\n\tif (fLabel !\u003d NULL \u0026\u0026 label !\u003d NULL \u0026\u0026 strcmp(fLabel, label) \u003d\u003d 0) {\n\t\t// labels are the same, do not set label\n\t\treturn;\n\t} else {\n\t\t// new label, free old\n\t\tfree(fLabel);\n\n\t\t// new label is NULL, bail\n\t\tif (label \u003d\u003d NULL)\n\t\t\treturn;\n\t}\n\n\tfLabel \u003d strdup(label);\n\n\tif (Window())\n\t\tInvalidate();\n\n\tInvalidateLayout();\n}\n\n```",
      "revId": "2291698e5f5028254d782cfbaf143f5a1bdb90a8",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "50d01b95_4a129d26",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000013
      },
      "writtenOn": "2025-02-09T04:40:33Z",
      "side": 1,
      "message": "... to avoid the strcmp() with NULL.",
      "revId": "2291698e5f5028254d782cfbaf143f5a1bdb90a8",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "87127285_7751a30f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2025-02-09T11:16:32Z",
      "side": 1,
      "message": "there is no strcmp() with NULL already.\nbut fLabel should be set to NULL after free().",
      "parentUuid": "50d01b95_4a129d26",
      "revId": "2291698e5f5028254d782cfbaf143f5a1bdb90a8",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6650a1a3_e9012cba",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2025-02-10T07:35:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "87127285_7751a30f",
      "revId": "2291698e5f5028254d782cfbaf143f5a1bdb90a8",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}