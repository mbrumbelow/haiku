SubDir HAIKU_TOP src add-ons kernel debugger disasm $(TARGET_KERNEL_ARCH_DIR) ;

SubDirHdrs [ FDirName $(SUBDIR) $(DOTDOT) ] ;
UsePrivateKernelHeaders ;

local zydisSourceDirectory = [ BuildFeatureAttribute QUALIFIED $(TARGET_KERNEL_ARCH):zydis : sources : path ] ;
local zycoreSourceDirectory = [ BuildFeatureAttribute QUALIFIED $(TARGET_KERNEL_ARCH):zydis : sources-2 : path ] ;
UseHeaders [ FDirName $(zydisSourceDirectory) include ] : true ;
UseHeaders [ FDirName $(zydisSourceDirectory) src ] : true ;
UseHeaders [ FDirName $(zycoreSourceDirectory) include ] : true ;

SubDirCcFlags -Wno-error=missing-prototypes ;

DEFINES += assert=disasm_arch_assert ;
DEFINES += __assert_fail=diasm_arch_assert_fail ;
DEFINES += __posix ;

local zydisSources =
	Decoder.c
	DecoderData.c
	Disassembler.c
	Formatter.c
	FormatterBuffer.c
	FormatterATT.c
	FormatterBase.c
	FormatterIntel.c
	MetaInfo.c
	Mnemonic.c
	Register.c
	SharedData.c
	String.c
	Utils.c
	Zydis.c
;

local zycoreSources =
	Zycore.c
	Allocator.c
	Bitset.c
	Format.c
	List.c
	String.c
	Vector.c
;


SOURCE_GRIST = [ FGrist $(SUBDIR_TOKENS) zydis ] ;
MakeLocate [ FGristFiles $(zydisSources:S=$(SUFOBJ)) ]
	: [ FDirName $(TARGET_DEBUG_$(DEBUG)_LOCATE_TARGET) zydis ] ;
KernelStaticLibrary disasm_arch.a : $(zydisSources) ;
LOCATE on [ FGristFiles $(zydisSources) ] = [ FDirName $(zydisSourceDirectory) src ] ;
Depends [ FGristFiles $(zydisSources) ]
	: [ BuildFeatureAttribute QUALIFIED $(TARGET_KERNEL_ARCH):zydis : sources ] ;

SOURCE_GRIST = [ FGrist $(SUBDIR_TOKENS) zycore ] ;
MakeLocate [ FGristFiles $(zycoreSources:S=$(SUFOBJ)) ]
	: [ FDirName $(TARGET_DEBUG_$(DEBUG)_LOCATE_TARGET) zycore ] ;
KernelStaticLibrary disasm_arch.a : $(zycoreSources)
;
LOCATE on [ FGristFiles $(zycoreSources) ] = [ FDirName  $(zycoreSourceDirectory) src ] ;
Depends [ FGristFiles $(zycoreSources) ]
	: [ BuildFeatureAttribute QUALIFIED $(TARGET_KERNEL_ARCH):zydis : sources-2 ] ;

SOURCE_GRIST = [ FGrist $(SUBDIR_TOKENS) ] ;
KernelStaticLibrary disasm_arch.a : disasm_arch.cpp ;

