{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "fb223b9a_a2e4a652",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000311
      },
      "writtenOn": "2025-02-27T07:12:15Z",
      "side": 1,
      "message": "Tried finding usage of `keymap -h`, but I may have missed some, as I haven\u0027t built an entire haiku.hpkg with this change. Commit checker bot will at lease do so.",
      "revId": "54333e2e9f41632dfcd862e9a21784162dc58596",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f27a43b7_a4a40f7a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000172
      },
      "writtenOn": "2025-02-27T09:40:59Z",
      "side": 1,
      "message": "I do not think that breaking compatibility is a good idea.\n\nIs this tool present in BeOS? Does it use the same `-h` flag?",
      "revId": "54333e2e9f41632dfcd862e9a21784162dc58596",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "114f2b8e_8714c4e0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000311
      },
      "writtenOn": "2025-02-27T12:10:36Z",
      "side": 1,
      "message": "From BeOS 5.0.1:\n\n```\n$ keymap -h\nusage: /bin/keymap -d  # dump key map to standard output\n       /bin/keymap -l  # load key map from standard input\n       /bin/keymap -r  # restore system default key map\n$ keymap\nusage: /bin/keymap -d  # dump key map to standard output\n       /bin/keymap -l  # load key map from standard input\n       /bin/keymap -r  # restore system default key map\n```",
      "parentUuid": "f27a43b7_a4a40f7a",
      "revId": "54333e2e9f41632dfcd862e9a21784162dc58596",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e87006fd_a080b617",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2025-02-27T16:42:57Z",
      "side": 1,
      "message": "looks like bike shedding to me ðŸ˜Š",
      "revId": "54333e2e9f41632dfcd862e9a21784162dc58596",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9825ecb5_7684d9c4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000311
      },
      "writtenOn": "2025-02-28T02:55:29Z",
      "side": 1,
      "message": "re: breaking compatibility\n\nHow much usage of the `keymap --header` functionality outside of Haiku\u0027s build system (where it is only used once) can we reasonably expect it to have?\n\nShould that *really* prevent us from making changes here?",
      "parentUuid": "114f2b8e_8714c4e0",
      "revId": "54333e2e9f41632dfcd862e9a21784162dc58596",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "303caf01_9f6dcc9e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000311
      },
      "writtenOn": "2025-02-28T02:55:29Z",
      "side": 1,
      "message": "re: bike-shedding\n\n`keynap -h` just \"sitting there doing nothing\" has bothered me in several occasions over time.\n\nIMO, expecting commands to show some help/usage info when called with \"-h\" is a reasonable (and pretty low) expectation for a user to have.\n\nI hope you reconsider.",
      "parentUuid": "e87006fd_a080b617",
      "revId": "54333e2e9f41632dfcd862e9a21784162dc58596",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "116cb48e_caf91310",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2025-02-28T22:56:49Z",
      "side": 1,
      "message": "BeOS R5 had only options -d -l -r, so no legacy apps should use this.",
      "parentUuid": "303caf01_9f6dcc9e",
      "revId": "54333e2e9f41632dfcd862e9a21784162dc58596",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1061b6d1_f5fac3d9",
        "filename": "src/bin/keymap/main.cpp",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-02-27T07:10:10Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t   \"  -o, --output       Change output file to output-file (default: \"\n\t\t   \"keymap.out|h).\\n\"\n\t\t   \"  -d, --dump         Decompile key map to standard output (can be \"\n\t\t   \"redirected\\n\"\n\t\t   \"                     via -o).\\n\"\n\t\t   \"  -l, --load         Load key map. If no input-file is specified, it \"\n\t\t   \"will be\\n\"\n\t\t   \"                     read from standard input.\\n\"\n\t\t   \"  -s, --load-source  Load source key map from standard input when no\\n\"\n\t\t   \"                     input-file is specified.\\n\"\n\t\t   \"  -r, --restore      Restore system default key map.\\n\"\n\t\t   \"  -c, --compile      Compile source keymap to binary.\\n\"\n\t\t   \"  -H, --header       Translate source keymap to C++ header.\\n\"\n\t\t   \"  -h, --help         Show this help text and exit.\\n\",\n```",
      "range": {
        "startLine": 30,
        "startChar": 0,
        "endLine": 43,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "54333e2e9f41632dfcd862e9a21784162dc58596",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "af5bca75_6a8fdf46",
        "filename": "src/bin/keymap/main.cpp",
        "patchSetId": 1
      },
      "lineNbr": 109,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-02-27T07:10:10Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tstatic struct option const kLongOptions[]\n\t\t\u003d {{\"output\", required_argument, 0, \u0027o\u0027}, {\"dump\", optional_argument, 0, \u0027d\u0027},\n\t\t\t{\"load\", optional_argument, 0, \u0027l\u0027}, {\"load-source\", optional_argument, 0, \u0027s\u0027},\n\t\t\t{\"restore\", no_argument, 0, \u0027r\u0027}, {\"compile\", optional_argument, 0, \u0027c\u0027},\n\t\t\t{\"header\", optional_argument, 0, \u0027H\u0027}, {\"help\", no_argument, 0, \u0027h\u0027}, {NULL}};\n```",
      "range": {
        "startLine": 99,
        "startChar": 0,
        "endLine": 109,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "54333e2e9f41632dfcd862e9a21784162dc58596",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}