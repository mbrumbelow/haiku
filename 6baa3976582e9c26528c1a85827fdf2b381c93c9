{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "3317cef8_26cd7537",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2022-04-23T15:04:53Z",
      "side": 1,
      "message": "Not sure this is the way to go? It looks like a lot of additional int32\u0027s. Can we not support old legacy keymap while also introducing a newer updated one?",
      "revId": "6baa3976582e9c26528c1a85827fdf2b381c93c9",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "85811533_34208aca",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000214
      },
      "writtenOn": "2022-04-23T19:59:01Z",
      "side": 1,
      "message": "I\u0027ve been tempted of down vote myself, but we haven\u0027t an agreement yet. \n\nThe idea of this patch, was to make room for media keys, because 128 keys were on the limit. I added 128 more but yes, perhaps 32 were more than enough.\n\nThing is, media keys are not keys (from HID perspective), are consumer events. Many OS seem to fake them as key strokes but I don\u0027t agree with them :)\n\nOn the other hand, if we consider them keys we don\u0027t have to map them into the keymap and send key strokes as unmapped key events, as we already do with F1-F12.",
      "parentUuid": "3317cef8_26cd7537",
      "revId": "6baa3976582e9c26528c1a85827fdf2b381c93c9",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "945dd65e_131a46a8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2022-04-23T20:40:24Z",
      "side": 1,
      "message": "\u003e On the other hand, if we consider them keys we don\u0027t have to map them into the keymap and send key strokes as unmapped key events, as we already do with F1-F12.\n\nThis sentence is a bit confusing to me. Do you mean if we don\u0027t consider them keys?\n\nIt sounds to me like unmapped key events are better, but can we set these events to fixed values?\n\nI think this is something we should solve, thanks for the good explanation.",
      "parentUuid": "85811533_34208aca",
      "revId": "6baa3976582e9c26528c1a85827fdf2b381c93c9",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dbec15a4_2d28124f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2022-04-23T21:32:53Z",
      "side": 1,
      "message": "The other part of this change (not sure why we have this scattered in many commits) adds 34 key definitions: https://review.haiku-os.org/c/haiku/+/1695\nSo 32 wouldn\u0027t be enough.\n\nThe idea there was to map all these to B_FUNCTION_KEY and then use the raw keycode to decide which one it is. In that case, they wouldn\u0027t really need to go through the keymap, as long as they are \"mapped\" to B_FUNCTION_KEY in some other way (this can be hardcoded somewhere).\n\n\u003e Thing is, media keys are not keys (from HID perspective), are consumer events. Many OS seem to fake them as key strokes but I don\u0027t agree with them :)\n\nThe advantage of this is it is reasonably simple to do and doesn\u0027t introduce any new APIs. That makes it easy for app developers to handle these events at least for the simple cases (volume control and the like). I agree that HID allows for some more things, but they are rarely used and we can consider them later once we have something in place.",
      "parentUuid": "945dd65e_131a46a8",
      "revId": "6baa3976582e9c26528c1a85827fdf2b381c93c9",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "111ca28f_974e88ec",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000214
      },
      "writtenOn": "2022-04-24T07:19:27Z",
      "side": 1,
      "message": "Ok then, I can add those extra keys to Keyboard HID handler, we \"map\" it as B_FUNCTION_KEY and this patch (and the problem it solves) are no longer needed.\n\nThen, we can work on parallel on a better input model.",
      "parentUuid": "dbec15a4_2d28124f",
      "revId": "6baa3976582e9c26528c1a85827fdf2b381c93c9",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "82afee0f_d7d6d2d0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000390
      },
      "writtenOn": "2022-05-21T12:42:48Z",
      "side": 1,
      "message": "The Idea behind this and the other change was mainly to fix this for the PS/2 keyboards.\nFor one thing the number of media keys on PS/2 is now basically fixed and won\u0027t increase. for another the driver (currently) does not expose the keys in any other way apart from mapping them to some code within the keymap structure.\n\nI didn\u0027t really intend this to be used for HID neccesarily. as far as I understood this works already with \"unampped\" key events there.\n\nThe patch for the PS/2 driver was already merged here: https://review.haiku-os.org/c/haiku/+/1675\nAnd it requires this patch still to work afaik. It may require a bit more even, I did not investigate further since the keymap structure made using the events further problematic.",
      "parentUuid": "111ca28f_974e88ec",
      "revId": "6baa3976582e9c26528c1a85827fdf2b381c93c9",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b7ac59ff_081bf64f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000214
      },
      "writtenOn": "2022-05-22T08:14:18Z",
      "side": 1,
      "message": "The point is.... do we really want users to remap media keys? If the answer is no, this patch is unnecessary.",
      "parentUuid": "82afee0f_d7d6d2d0",
      "revId": "6baa3976582e9c26528c1a85827fdf2b381c93c9",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f2e239ce_5278ada2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2022-05-22T11:39:13Z",
      "side": 1,
      "message": "For me I don\u0027t feel it is needed, but I don\u0027t have a strong opinion. I do however want to know in an easy ways if it was play, pause, skip_forward and such pressed without lots of logic in the app.\n\nFeel free to pick the best route, I was just asking a question, and I\u0027m worried it might have stalled progress. Sorry about that..",
      "parentUuid": "b7ac59ff_081bf64f",
      "revId": "6baa3976582e9c26528c1a85827fdf2b381c93c9",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "19f10608_7f9763aa",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000214
      },
      "writtenOn": "2022-05-23T07:33:55Z",
      "side": 1,
      "message": "Sorry If my words are sometimes a little bit rude. I am not very fluent at english  (at least not enough to manage the mood of my sentences).\n\nMedia keys issue is stalled from a long time now. I did this patch because we were doing some speculations and I wanted to have some real code to argue on top.\n\nI don\u0027t see the need for media keys to be mapped. As unmapped keys, someone need to do an extra step on code, but we have F1-12 keys already there. Can we perhaps, create a new key press event for unmapped keys?",
      "parentUuid": "f2e239ce_5278ada2",
      "revId": "6baa3976582e9c26528c1a85827fdf2b381c93c9",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "01cbab5e_b0040e5a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000390
      },
      "writtenOn": "2022-05-23T15:01:39Z",
      "side": 1,
      "message": "If you mean mapped in the sense of \"Use this in the keymap to indicate a different key\" Then I agree that there is no need to map them in such a manner. This does mean however that the PS/2 driver patch I made has to be partially redone since the mechanism doesn\u0027t work for the newer \"higher\" numbered keys then. Perhaps by checking for the value beeing higher than 128 and then passing it to the input server somewhere else.\n\nWhat would the benefit be for a seperate event for unmapped keys? usb hid already produces events for unmapped keys IIRC, do you wish to add a second one next to it or do I missunderstand that?\n\nDisadvantages I see with the current unmapped keys are that the shortcut preferences are still not that nice, they don\u0027t allow for system provided default keybindings for example or entering a key for a shortcut by simply pressing it. (example: mail key -\u003e open mail app)\n\nA second problem is that in usb hid there may be seperate events that have the same semantic meaning to users. For example my new Logitech Ergo Mini keyboard has a dedicated \"Screenshot\" key that does not work with Haiku currently, it probably produces a seperate key event to print screen which does work as a screenshot key currently.\nFor an application developer it may be annoying to have to catch severall different keypresses with the same semantic meaning.",
      "parentUuid": "19f10608_7f9763aa",
      "revId": "6baa3976582e9c26528c1a85827fdf2b381c93c9",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "88a71767_b76e6ee2",
        "filename": "headers/os/interface/InterfaceDefs.h",
        "patchSetId": 1
      },
      "lineNbr": 136,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2022-04-23T22:09:56Z",
      "side": 1,
      "message": "It is 9 * 4 (bytes) * 128 \u003d 4608 additional bytes for the keymap alone? Perhaps there is a better representation?",
      "revId": "6baa3976582e9c26528c1a85827fdf2b381c93c9",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f76527b4_5e4c4f5a",
        "filename": "headers/os/interface/InterfaceDefs.h",
        "patchSetId": 1
      },
      "lineNbr": 136,
      "author": {
        "id": 1000214
      },
      "writtenOn": "2022-04-24T07:19:27Z",
      "side": 1,
      "message": "We wanted to keep software/binary compatibility. A keymap designed from scratch would be probably more efficient than this.",
      "parentUuid": "88a71767_b76e6ee2",
      "revId": "6baa3976582e9c26528c1a85827fdf2b381c93c9",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f6527076_b1ac6ab8",
        "filename": "headers/os/interface/InterfaceDefs.h",
        "patchSetId": 1
      },
      "lineNbr": 136,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2022-05-02T20:33:41Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "f76527b4_5e4c4f5a",
      "revId": "6baa3976582e9c26528c1a85827fdf2b381c93c9",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}