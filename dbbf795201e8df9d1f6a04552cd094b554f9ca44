{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a0c2820a_be2c36e8",
        "filename": "src/system/libroot/posix/pthread/pthread.cpp",
        "patchSetId": 3
      },
      "lineNbr": 161,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2022-03-21T08:50:11Z",
      "side": 1,
      "message": "now invalidTime is always false.\nThe usual expectation in pthreads is, if the operation can succeed immediately, it shouldn\u0027t fail because of an invalid timeout.",
      "revId": "dbbf795201e8df9d1f6a04552cd094b554f9ca44",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "014d3189_6f04271e",
        "filename": "src/system/libroot/posix/pthread/pthread.cpp",
        "patchSetId": 3
      },
      "lineNbr": 161,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-03-22T07:06:41Z",
      "side": 1,
      "message": "It seems like the behaviour in Linux never results in EINVAL (probably why I didn\u0027t see in a different man page). If it\u0027s less than 0, then it acts like pthread_tryjoin_np, returning ETIMEDOUT, else it blocks like regular pthread_join from my tests. If that sounds like a satisfactory implementation, I can do that.",
      "parentUuid": "a0c2820a_be2c36e8",
      "revId": "dbbf795201e8df9d1f6a04552cd094b554f9ca44",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}