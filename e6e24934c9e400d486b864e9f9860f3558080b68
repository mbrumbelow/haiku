{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "7b813929_f220ed28",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000390
      },
      "writtenOn": "2025-03-09T10:37:35Z",
      "side": 1,
      "message": "Note: this might introduce regressions in apps which handle only one color per message and then return.",
      "revId": "e6e24934c9e400d486b864e9f9860f3558080b68",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc1b0a2b_8e141708",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2025-03-09T23:37:19Z",
      "side": 1,
      "message": "I just looked into the implementation of these methods in app_server, and if I understand the code correctly, this change won\u0027t make any difference: app_server already coalesces multiple color change requests received in a short window into one update, but it always sends out multiple \"color changed\" messages to applications, no matter whether set_ui_color or set_ui_colors was the invoking method. So this doesn\u0027t make a difference and is just extra code for no reason.\n\nNow, that being said, I don\u0027t think we should change how this API/ABI works in app_server to send out one message for multiple color changes, either, because:\n\n1: It won\u0027t just \"possibly\" break existing applications, it *will* break them. And it\u0027s the worst kind of API/ABI break: a totally silent one. Broken applications won\u0027t fail to start and won\u0027t fail to build, and depending on how they are written will probably not throw any errors at runtime either, they will just fail to behave as expected.\n\nThe `B_COLORS_CHANGED` message does not come from BeOS, so technically we are free to break it, but for user-facing APIs we try to keep at least binary compatibility if we can. And we certainly could here ... by just continuing to send the existing multiple messages per color.\n\n2: I don\u0027t really see what benefit it would provide anyway. As an \"efficiency\" gain it\u0027s negligible to meaningless (on a mostly idle system there will still be dozens or more BMessages sent per second anyway, such as mouse movements and B_PULSE, so a few dozen more sent rarely doesn\u0027t make much difference if any.) So then it\u0027s only applications that would want to update colors in batches that get any benefit; but what applications actually want to do this? Meanwhile all other applications that don\u0027t care whether color updates are sent all at once or in multiple messages would have to have much more complicated logic to process the messages.\n\n3: Introducing something which does require applications to store the color name and not just the constant color_which sounds fragile: changing the constant name will now break ABI rather than just source compatibility (and moreover it *won\u0027t* break source compatibility, so tracking down that brokenness will be annoying). The existing set_ui_colors seems like a strange API to me as a result and I find it questionable, but at least it\u0027s not commonly used and applications don\u0027t have to call it at present.\n\nSo I don\u0027t think there\u0027s much reason for this change, and many reasons not to go with it.",
      "revId": "e6e24934c9e400d486b864e9f9860f3558080b68",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8d0846b0_5727c1fa",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000390
      },
      "writtenOn": "2025-03-10T10:36:36Z",
      "side": 1,
      "message": "This is really stupid. There is no ABI broken here, and my change documenting this, already present, behaviour has been unreviewed for months.\n\nIf app_server behaves in a dumb way if colors is used it should be fixed.\n\nThe color message spam causes useless redraws and flickering applications, to properly fix this the message has to contain all colors and the redraws can be minimized for their components.\n\nProperly processing a message with multiple colors is trivial, pretty much all Code in Haiku I checked already does this.\n\nThat beeing said, I don\u0027t really want to contribute anymore. I\u0027ve already talked with you on irc about this, and at this point It seems you are just vetoing all my changes put of spite.",
      "parentUuid": "bc1b0a2b_8e141708",
      "revId": "e6e24934c9e400d486b864e9f9860f3558080b68",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9055d683_cbfd4b91",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2025-03-10T10:59:09Z",
      "side": 1,
      "message": "\u003e and at this point It seems you are just vetoing all my changes put of spite.\n\nI do not have much time right now and will respond to the technical details later, but whatever else is true, I promise you this is not the case. I am sorry that due to our present disagreement about the deprecation warnings it may seem otherwise, and I will certainly admit to being frustrated about that, but my comments here were not made \"looking for a fight\".",
      "parentUuid": "8d0846b0_5727c1fa",
      "revId": "e6e24934c9e400d486b864e9f9860f3558080b68",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0d17f7e4_1a7a0255",
        "filename": "src/preferences/appearance/ColorsView.cpp",
        "patchSetId": 2
      },
      "lineNbr": 95,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-09T10:55:32Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nstatic const char* kColorNames[kColorWhichCount]\n\t\u003d {\"B_PANEL_BACKGROUND_COLOR\", \"B_MENU_BACKGROUND_COLOR\", \"B_WINDOW_TAB_COLOR\",\n\t\t\"B_KEYBOARD_NAVIGATION_COLOR\", \"B_DESKTOP_COLOR\", \"B_MENU_SELECTED_BACKGROUND_COLOR\",\n\t\t\"B_MENU_ITEM_TEXT_COLOR\", \"B_MENU_SELECTED_ITEM_TEXT_COLOR\", \"B_MENU_SELECTED_BORDER_COLOR\",\n\t\t\"B_PANEL_TEXT_COLOR\", \"B_DOCUMENT_BACKGROUND_COLOR\", \"B_DOCUMENT_TEXT_COLOR\",\n\t\t\"B_CONTROL_BACKGROUND_COLOR\", \"B_CONTROL_TEXT_COLOR\", \"B_CONTROL_BORDER_COLOR\",\n\t\t\"B_CONTROL_HIGHLIGHT_COLOR\", \"B_NAVIGATION_PULSE_COLOR\", \"B_SHINE_COLOR\", \"B_SHADOW_COLOR\",\n\t\t\"B_TOOLTIP_BACKGROUND_COLOR\", \"B_TOOLTIP_TEXT_COLOR\", \"B_WINDOW_TEXT_COLOR\",\n\t\t\"B_WINDOW_INACTIVE_TAB_COLOR\", \"B_WINDOW_INACTIVE_TEXT_COLOR\", \"B_WINDOW_BORDER_COLOR\",\n\t\t\"B_WINDOW_INACTIVE_BORDER_COLOR\", \"B_CONTROL_MARK_COLOR\", \"B_LIST_BACKGROUND_COLOR\",\n\t\t\"B_LIST_SELECTED_BACKGROUND_COLOR\", \"B_LIST_ITEM_TEXT_COLOR\",\n\t\t\"B_LIST_SELECTED_ITEM_TEXT_COLOR\", \"B_SCROLL_BAR_THUMB_COLOR\", \"B_LINK_TEXT_COLOR\",\n\t\t\"B_LINK_HOVER_COLOR\", \"B_LINK_VISITED_COLOR\", \"B_LINK_ACTIVE_COLOR\", \"B_STATUS_BAR_COLOR\",\n\t\t// 100...\n\t\t\"B_SUCCESS_COLOR\", \"B_FAILURE_COLOR\", NULL};\n\n```",
      "range": {
        "startLine": 53,
        "startChar": 0,
        "endLine": 95,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e6e24934c9e400d486b864e9f9860f3558080b68",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2839c2e8_52571993",
        "filename": "src/preferences/appearance/ColorsView.cpp",
        "patchSetId": 2
      },
      "lineNbr": 471,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-03-09T10:55:32Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t_QueOneColor(B_WINDOW_TEXT_COLOR, BPrivate::GetSystemColor(B_WINDOW_TEXT_COLOR, isDark));\n```",
      "range": {
        "startLine": 470,
        "startChar": 0,
        "endLine": 471,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "e6e24934c9e400d486b864e9f9860f3558080b68",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "84775087_323aa9c8",
        "filename": "src/preferences/appearance/ColorsView.cpp",
        "patchSetId": 2
      },
      "lineNbr": 517,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2025-03-10T08:46:12Z",
      "side": 1,
      "message": "I don\u0027t follow why set_ui_colors(\u0026fCurrentColors) wouldn\u0027t work as is. It should send only actual changes to clients.",
      "revId": "e6e24934c9e400d486b864e9f9860f3558080b68",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}