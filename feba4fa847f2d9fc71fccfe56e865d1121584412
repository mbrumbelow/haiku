{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f49ab64d_ea1779e2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000341
      },
      "writtenOn": "2023-10-28T18:06:59Z",
      "side": 1,
      "message": "It seems that we need to carry the isBigEndian flag around similarly to addressSize. So far DataReader uses it only in ReadU24(), next we need to adapt Read\u003cType\u003e() as well.",
      "revId": "feba4fa847f2d9fc71fccfe56e865d1121584412",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9feb4812_96f8a892",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2023-10-29T17:53:40Z",
      "side": 1,
      "message": "Wouldn\u0027t it make sense to pack the isBigEndian and addressSize together as a parameter in a class/struct? ArchParameters?",
      "parentUuid": "f49ab64d_ea1779e2",
      "revId": "feba4fa847f2d9fc71fccfe56e865d1121584412",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "051e915a_7c565af0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000341
      },
      "writtenOn": "2023-11-06T20:07:46Z",
      "side": 1,
      "message": "Not sure if that would be much better.\nI was actually thinking of adding isBigEndian and addressSize as fields to DwarfFile class - then probably we can fill them in the Load() function and use them afterwards as I don\u0027t think there\u0027s any use case when they would have any different value. But I\u0027ll need to get a better understanding of the code before attempting a refactor like that...",
      "parentUuid": "9feb4812_96f8a892",
      "revId": "feba4fa847f2d9fc71fccfe56e865d1121584412",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c4548df2_d855c722",
        "filename": "src/kits/debugger/dwarf/AbbreviationTable.cpp",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2023-10-29T17:53:40Z",
      "side": 1,
      "message": "don\u0027t",
      "revId": "feba4fa847f2d9fc71fccfe56e865d1121584412",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "00cd3f1b_9bbe04a1",
        "filename": "src/kits/debugger/dwarf/AbbreviationTable.cpp",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1000341
      },
      "writtenOn": "2023-11-06T20:04:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c4548df2_d855c722",
      "revId": "feba4fa847f2d9fc71fccfe56e865d1121584412",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8c3b4d99_4a801ce2",
        "filename": "src/kits/debugger/dwarf/AbbreviationTable.h",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2023-10-29T17:53:40Z",
      "side": 1,
      "message": "don\u0027t",
      "revId": "feba4fa847f2d9fc71fccfe56e865d1121584412",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6900145f_b8d41eca",
        "filename": "src/kits/debugger/dwarf/AbbreviationTable.h",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 1000341
      },
      "writtenOn": "2023-11-06T20:04:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8c3b4d99_4a801ce2",
      "revId": "feba4fa847f2d9fc71fccfe56e865d1121584412",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}