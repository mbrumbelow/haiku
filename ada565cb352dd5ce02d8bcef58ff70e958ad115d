{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "17989016_0298e4e6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000359
      },
      "writtenOn": "2022-01-26T12:45:00Z",
      "side": 1,
      "message": "Hi, have added some of the people active in the forum topic, and other present in this kind of patches.\n\nSome comments:\n\n- Reused from ARM port:\n    - Existing var identifiers that don\u0027t comply with the identifier convention. Kept due consistence with rest of files reused\n    - There are KernelArgs incorporations just to cope with the build. This and other possible interfaces with the Kernel are WIP\n\n- Reused from Jaroslaw Pelczar ARM64 port\n    - Most of reused code(https://github.com/korli/haiku-jarek/tree/master/src/system/kernel/arch/aarch64) is seen also in freeBSD\n\n- EL2\n    - Use case covered: EFI is passing the control in EL2 and existing MMU configuration covers the physical map.\n    - Additional logging has been placed to be able to elaborate other scenarios\n\n- arch_mmu_post_efi_setup -\u003e SetVirtualAddressMap: Comments needed here. This part of code is commented out. It is not clear if Uboot implements properly the service, even not clear to me what is it actually doing, as memory mapping is previously done...\n\n- aarch64.h: Most of definitions here should be shared with the kernel. As the port advances file should dissapear.\n\n- platform_allocate_region() vs mmu_allocate_page(): The first gave me a memory range which has been already at loading binaries stage...\n",
      "revId": "ada565cb352dd5ce02d8bcef58ff70e958ad115d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8e71d536_5772dcf5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000341
      },
      "writtenOn": "2022-01-26T13:58:02Z",
      "side": 1,
      "message": "Wow yeah! This looks impressive.\n\nBefore any review comments... I noticed that this change is based off a commit from last October, so perhaps can you rebase and check that it still works as expected? Quite a few things changed since then, including the toolchain moving from gcc 8.3 to 11.2",
      "revId": "ada565cb352dd5ce02d8bcef58ff70e958ad115d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8d1ebf3f_cd99fd27",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000359
      },
      "writtenOn": "2022-01-26T14:41:12Z",
      "side": 1,
      "message": "Thanks David,\n\nTrue, and I am also not happy with that. The reason I sticked there is that there were build problems for ARM64:\n\n    https://discuss.haiku-os.org/t/arm64-port-status/11224/137\n\nLooks I was lucky enough to clone at a point where I managed to get the minimal artifacs to be able to progress.\n\nHas the situation improved? (feel my fear)\n\nI would need only the EFI loader(haiku_loader.efi) and the kernel (kernel_arm64).",
      "parentUuid": "8e71d536_5772dcf5",
      "revId": "ada565cb352dd5ce02d8bcef58ff70e958ad115d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b94f78d_3d383559",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000341
      },
      "writtenOn": "2022-01-28T09:47:43Z",
      "side": 1,
      "message": "I tried a build on latest master hrev55814. I had to add a stub for arch_convert_kernel_args() in arch_start.cpp (my bad, I haven\u0027t implemented it for arm64 in commit af90bfd3b back in December)\nI also had to stub config_manager_arch.c\n\nOnce that\u0027s done, I get a successful build.\n\nI was not able to try out this MMU initialization patch though, as the bootup fails for me at an earlier stage, right after the \"Welcome to the Haiku boot loader!\" printout. (I tried it in qemu).",
      "parentUuid": "8d1ebf3f_cd99fd27",
      "revId": "ada565cb352dd5ce02d8bcef58ff70e958ad115d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "759e2c2a_f7f06c25",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000359
      },
      "writtenOn": "2022-01-28T12:21:23Z",
      "side": 1,
      "message": "\u003e I tried a build on latest master hrev55814. I had to add a stub for arch_convert_kernel_args() in arch_start.cpp (my bad, I haven\u0027t implemented it for arm64 in commit af90bfd3b back in December)\n\u003e I also had to stub config_manager_arch.c\n\u003e \n\u003e Once that\u0027s done, I get a successful build.\n\nOk thanks, same here, I will test again",
      "parentUuid": "2b94f78d_3d383559",
      "revId": "ada565cb352dd5ce02d8bcef58ff70e958ad115d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0b5a5019_570de65e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000359
      },
      "writtenOn": "2022-01-28T16:40:56Z",
      "side": 1,
      "message": "\u003e I was not able to try out this MMU initialization patch though, as the bootup fails for me at an earlier stage, right after the \"Welcome to the Haiku boot loader!\" printout. (I tried it in qemu).\n\nTested on my side and unfortunatelly I also reproduced this, quite behind compared with \"jumping \u0026 executing the kernel\" :(\n\n    --\u003e exception\n    boot::Partition::Partition\n    add_partitions_for\n    add_partitions_for\n    get_boot_file_system\n    main\n    efi_main\n\nMaybe not the place for addressing the topic but any hint on which commit to look based on the stackframe?",
      "parentUuid": "759e2c2a_f7f06c25",
      "revId": "ada565cb352dd5ce02d8bcef58ff70e958ad115d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9a120035_9f8ab760",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000341
      },
      "writtenOn": "2022-01-28T16:59:03Z",
      "side": 1,
      "message": "Not sure if it is related to any specific commit, it could also be the change from gcc 8.3 to 11.2.\n\nAs I see now in loader/partitions.cpp there are calls to memset and atomic_add in Partition::Partition. The arm64 port seems to use a generic memset implementation so atomic_add might be a more likely suspect.\n\nUnfortunately the Exception Syndrome Register is not very helpful, I get the following printout in TianoCore:\n\nESR : EC 0x00  IL 0x1  ISS 0x00000000\n\nEC \u003d 00 means unknown reason.",
      "parentUuid": "0b5a5019_570de65e",
      "revId": "ada565cb352dd5ce02d8bcef58ff70e958ad115d",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}