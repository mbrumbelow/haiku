{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "8aba861a_4c393b0f",
        "filename": "headers/private/kernel/arch/x86/arch_cpu.h",
        "patchSetId": 3
      },
      "lineNbr": 195,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-01-29T19:01:08Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define IA32_CPUID_LEAF_MWAIT 0x5\n#define IA32_CPUID_LEAF_XSTATE 0xd\n#define IA32_CPUID_LEAF_TSC 0x15\n#define IA32_CPUID_LEAF_FREQUENCY 0x16\n```",
      "range": {
        "startLine": 192,
        "startChar": 0,
        "endLine": 195,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "32e1e433d9f9c549a56d503e5f4f6bd909b252a4",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7b4874cc_03932c40",
        "filename": "src/add-ons/kernel/power/cpuidle/x86_cstates/x86_cstates.cpp",
        "patchSetId": 3
      },
      "lineNbr": 27,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-01-29T19:01:08Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define CPUID_MWAIT_ECX_EXTENSIONS 0x1\n#define CPUID_MWAIT_ECX_INTERRUPTS_BREAK 0x2\n```",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 27,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "32e1e433d9f9c549a56d503e5f4f6bd909b252a4",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b2648b1e_258e9ecf",
        "filename": "src/add-ons/kernel/power/cpuidle/x86_cstates/x86_cstates.cpp",
        "patchSetId": 3
      },
      "lineNbr": 148,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-01-29T19:01:08Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t// uint32 maxMonitorLineSize \u003d cpuid.regs.ebx \u0026 0xffff;\n\tuint32 mwaitSubStates \u003d cpuid.regs.edx;\n```",
      "range": {
        "startLine": 147,
        "startChar": 0,
        "endLine": 148,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "32e1e433d9f9c549a56d503e5f4f6bd909b252a4",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}