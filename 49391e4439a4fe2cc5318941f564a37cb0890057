{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "3bb946dc_dfa815ca",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2023-06-24T21:55:05Z",
      "side": 1,
      "message": "Probably better to just use our own homegrown ArrayDeleter.",
      "revId": "49391e4439a4fe2cc5318941f564a37cb0890057",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d3182985_be535f27",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000012
      },
      "writtenOn": "2023-06-25T20:19:03Z",
      "side": 1,
      "message": "Why do you think that that is better? std::vector provides a nice contiguous array of elements, and the memory gets freed when it goes out of scope.",
      "parentUuid": "3bb946dc_dfa815ca",
      "revId": "49391e4439a4fe2cc5318941f564a37cb0890057",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "83ea6b92_94c28fa5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000012
      },
      "writtenOn": "2023-06-25T20:19:03Z",
      "side": 1,
      "message": "Thanks for checking the patches. Could you clarify why ArrayDeleter would work better here?",
      "revId": "49391e4439a4fe2cc5318941f564a37cb0890057",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6b385297_56eca4f1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2023-06-25T21:31:33Z",
      "side": 1,
      "message": "I think it is just Waddleplash\u0027s personal war against usage of the C++ standard library in Haiku sourcecode. std::vector seems just fine here.",
      "parentUuid": "d3182985_be535f27",
      "revId": "49391e4439a4fe2cc5318941f564a37cb0890057",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5d21a9ed_90c8772f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2023-06-25T22:48:27Z",
      "side": 1,
      "message": "Indeed I think we should avoid the C++ STL unless it provides some real benefit. Here we are making use of a C++11 spec requirement (that vector storage is contiguous) which is observed by GCC et al., but std::vector itself could go against in the future (e.g. it could be \"chunked\", and the only reason it can\u0027t at the moment is because the spec doesn\u0027t allow it, and that could be liberalized.)\n\nSince the code wants a contiguous buffer, why not just use ArrayDeleter then? The semantics are then really explicit and not dependent on something in the spec (which, by the way, was not actually required by the C++98 spec.)",
      "parentUuid": "6b385297_56eca4f1",
      "revId": "49391e4439a4fe2cc5318941f564a37cb0890057",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}