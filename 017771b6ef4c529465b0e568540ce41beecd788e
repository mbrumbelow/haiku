{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "80ccc1e6_236489a7",
        "filename": "src/system/kernel/arch/arm64/arch_vm_translation_map.cpp",
        "patchSetId": 6
      },
      "lineNbr": 19,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-08-25T22:52:38Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (insert after):\n```c++\n\n```",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 19,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "017771b6ef4c529465b0e568540ce41beecd788e",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d55b72a2_20ec2e1e",
        "filename": "src/system/kernel/arch/arm64/arch_vm_translation_map.cpp",
        "patchSetId": 6
      },
      "lineNbr": 64,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2024-08-26T09:19:24Z",
      "side": 1,
      "message": "ok, with the right documentation this is much clearer for me.\n\nThis could use an if / else if / else and log a warning message if we get any unexpected bit configurations (since the register has 5 bits, but only 2 are used).\n\nAlso, you added the assert but also removed the |\u003d, maybe my previous comment was not very clear, there are two options here:\n\n- Either set or assert that the value is initially 0, and then use |\u003d for setting all the bits,\n- Or, use \u003d for setting the first thing, and then |\u003d for the other ones (in this case, the first if/else would always initialize fHwFeature to some value, and then the second check on mmfr2 would do an |\u003d to add an extra bit to it\n\nIt looks like you did both at the same time here. Well, that works, so it\u0027s fine this way.",
      "revId": "017771b6ef4c529465b0e568540ce41beecd788e",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "52d77c6e_a34d105a",
        "filename": "src/system/kernel/arch/arm64/arch_vm_translation_map.cpp",
        "patchSetId": 6
      },
      "lineNbr": 64,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2024-08-26T09:21:13Z",
      "side": 1,
      "message": "I prefer it this way. The way I think of it is that using \u0027\u003d\u0027 *assumes* that the initial value was 0, so it\u0027s useful to have an assertion that verifies that assumption.",
      "parentUuid": "d55b72a2_20ec2e1e",
      "revId": "017771b6ef4c529465b0e568540ce41beecd788e",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "400e191f_a69f96da",
        "filename": "src/system/kernel/arch/arm64/arch_vm_translation_map.cpp",
        "patchSetId": 6
      },
      "lineNbr": 70,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-08-25T22:52:38Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tif (ID_AA64MMFR2_CNP(mmfr2) \u003d\u003d ID_AA64MMFR2_CNP_IMPL)\n```",
      "range": {
        "startLine": 70,
        "startChar": 0,
        "endLine": 70,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "017771b6ef4c529465b0e568540ce41beecd788e",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "345f2cc2_132459e1",
        "filename": "src/system/kernel/arch/arm64/arch_vm_translation_map.cpp",
        "patchSetId": 6
      },
      "lineNbr": 72,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-08-25T22:52:38Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` is to remove this line/these lines.",
      "range": {
        "startLine": 72,
        "startChar": 0,
        "endLine": 72,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "017771b6ef4c529465b0e568540ce41beecd788e",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}