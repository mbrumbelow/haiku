{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "3edf49bb_1378c7eb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-04-27T13:29:08Z",
      "side": 1,
      "message": "looks fine to me",
      "revId": "4c1f96b52ff7368114e61bb31629b7e916c5a1b0",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "376d8cce_54794831",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2024-07-24T07:12:56Z",
      "side": 1,
      "message": "It looks like no one is interested in pre-testing this, so let\u0027s merge it and see if someone gets problems on their hardware?",
      "revId": "4c1f96b52ff7368114e61bb31629b7e916c5a1b0",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2b777892_91b77602",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2024-07-24T18:17:06Z",
      "side": 1,
      "message": "I guess it\u0027s not really possible to factorize the PLL logic any more here (that\u0027s a lot of code and comment for just one generation)? Otherwise I don\u0027t have any comments.",
      "parentUuid": "376d8cce_54794831",
      "revId": "4c1f96b52ff7368114e61bb31629b7e916c5a1b0",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5ba33711_e2c53792",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2024-07-30T09:08:07Z",
      "side": 1,
      "message": "Each generation would deserve just as much comments, and there is unfortunately nothing to factorize as each (major) generation is different from the others. The general principle is the same (figure out the multipliers and dividers that get us from the base frequency to the pixel clock), but the constraints on each PLL implementation are different, the multipliers and dividers are not in the same order, and the frequency limits may be only at the end (as is the case here) or at various intermediate steps (which was the case in previous generations).\n\nI think since beta5 is coming soon, maybe we should wait after the release to merge this, in case it breaks something.",
      "parentUuid": "2b777892_91b77602",
      "revId": "4c1f96b52ff7368114e61bb31629b7e916c5a1b0",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9844b243_07db4562",
        "filename": "headers/private/graphics/intel_extreme/intel_extreme.h",
        "patchSetId": 6
      },
      "lineNbr": 1008,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-25T11:34:08Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define TGL_DPCLKA_CFGCR0 0x164280\n#define TGL_DPCLKA_DDIC_CLOCK_OFF (1 \u003c\u003c 24)\n#define TGL_DPCLKA_TC6_CLOCK_OFF (1 \u003c\u003c 23)\n#define TGL_DPCLKA_TC5_CLOCK_OFF (1 \u003c\u003c 22)\n#define TGL_DPCLKA_TC4_CLOCK_OFF (1 \u003c\u003c 21)\n#define TGL_DPCLKA_TC3_CLOCK_OFF (1 \u003c\u003c 14)\n#define TGL_DPCLKA_TC2_CLOCK_OFF (1 \u003c\u003c 13)\n#define TGL_DPCLKA_TC1_CLOCK_OFF (1 \u003c\u003c 12)\n#define TGL_DPCLKA_DDIB_CLOCK_OFF (1 \u003c\u003c 11)\n#define TGL_DPCLKA_DDIA_CLOCK_OFF (1 \u003c\u003c 10)\n#define TGL_DPCLKA_DDIC_CLOCK_SELECT (3 \u003c\u003c 4)\n#define TGL_DPCLKA_DDIB_CLOCK_SELECT (3 \u003c\u003c 2)\n#define TGL_DPCLKA_DDIB_CLOCK_SELECT_SHIFT 2\n#define TGL_DPCLKA_DDIA_CLOCK_SELECT (3 \u003c\u003c 0)\n\n#define TGL_DPLL0_CFGCR0 0x164284\n#define TGL_DPLL1_CFGCR0 0x16428C\n#define TGL_TBTPLL_CFGCR0 0x16429C\n#define TGL_DPLL4_CFGCR0 0x164294\n#define TGL_DPLL_DCO_FRACTION (0x7FFF \u003c\u003c 10)\n#define TGL_DPLL_DCO_FRACTION_SHIFT 10\n#define TGL_DPLL_DCO_INTEGER (0x3FF \u003c\u003c 0)\n\n#define TGL_DPLL0_CFGCR1 0x164288\n#define TGL_DPLL1_CFGCR1 0x164290\n#define TGL_TBTPLL_CFGCR1 0x1642A0\n#define TGL_DPLL4_CFGCR1 0x164298\n#define TGL_DPLL_QDIV_RATIO (0xFF \u003c\u003c 10)\n#define TGL_DPLL_QDIV_RATIO_SHIFT 10\n#define TGL_DPLL_QDIV_ENABLE (1 \u003c\u003c 9)\n#define TGL_DPLL_KDIV (7 \u003c\u003c 6)\n#define TGL_DPLL_KDIV_1 (1 \u003c\u003c 6)\n#define TGL_DPLL_KDIV_2 (2 \u003c\u003c 6)\n#define TGL_DPLL_KDIV_3 (4 \u003c\u003c 6)\n#define TGL_DPLL_PDIV (0xF \u003c\u003c 2)\n#define TGL_DPLL_PDIV_2 (1 \u003c\u003c 2)\n#define TGL_DPLL_PDIV_3 (2 \u003c\u003c 2)\n#define TGL_DPLL_PDIV_5 (4 \u003c\u003c 2)\n#define TGL_DPLL_PDIV_7 (8 \u003c\u003c 2)\n#define TGL_DPLL_CFSELOVRD (3 \u003c\u003c 0)\n\n#define TGL_DPLL0_DIV0 0x164B00\n#define TGL_DPLL1_DIV0 0x164C00\n#define TGL_DPLL4_DIV0 0x164E00\n#define TGL_DPLL_I_TRUELOCK_CRITERIA (3 \u003c\u003c 30)\n#define TGL_DPLL_I_EARLYLOCK_CRITERIA (3 \u003c\u003c 28)\n#define TGL_DPLL_I_AFC_STARTUP (7 \u003c\u003c 25)\n#define TGL_DPLL_I_DIV_RETIMER_EN (1 \u003c\u003c 24)\n#define TGL_DPLL_I_GAIN_CTRL (7 \u003c\u003c 21)\n#define TGL_DPLL_I_INTEGRAL_COEFF (0xF \u003c\u003c 16)\n#define TGL_DPLL_I_PROPORTIONAL_COEFF (0xF \u003c\u003c 12)\n#define TGL_DPLL_I_FB_PREDIVIDER (0xF \u003c\u003c 8)\n#define TGL_DPLL_I_FB_DIVIDER_M2 (0xFF \u003c\u003c 0)\n\n#define TGL_DPLL0_ENABLE 0x46010\n#define TGL_DPLL1_ENABLE 0x46014\n#define TGL_DPLL4_ENABLE 0x46018\n#define TGL_DPLL_ENABLE (1 \u003c\u003c 31)\n#define TGL_DPLL_LOCK (1 \u003c\u003c 30)\n#define TGL_DPLL_POWER_ENABLE (1 \u003c\u003c 27)\n#define TGL_DPLL_POWER_STATE (1 \u003c\u003c 26)\n\n#define TGL_DPLL0_SPREAD_SPECTRUM 0x164B10\n#define TGL_DPLL1_SPREAD_SPECTRUM 0x164C10\n#define TGL_DPLL4_SPREAD_SPECTRUM 0x164E10\n#define TGL_DPLL_IREF_NDIVRATIO (3 \u003c\u003c 29)\n#define TGL_DPLL_SSC_STEP_NUMBER_OFFSET (3 \u003c\u003c 26)\n#define TGL_DPLL_SSC_INJECTION_ADAPTIVE_GAIN_CHANGE_ENABLE (1 \u003c\u003c 25)\n#define TGL_DPLL_SSC_INJECTION_ENABLE (1 \u003c\u003c 24)\n#define TGL_DPLL_SSC_STEP_LENGTH (0xFF \u003c\u003c 16)\n#define TGL_DPLL_SSC_FLL_UPDATE (3 \u003c\u003c 14)\n#define TGL_DPLL_SSC_STEP_NUMBER (7 \u003c\u003c 11)\n#define TGL_DPLL_SSC_OPENLOOP (1 \u003c\u003c 10)\n#define TGL_DPLL_SSC_ENABLE (1 \u003c\u003c 9)\n#define TGL_DPLL_SSC_FLL_ENABLE (1 \u003c\u003c 8)\n#define TGL_DPLL_SSC_BIAS_GUARD_BAND (3 \u003c\u003c 6)\n#define TGL_DPLL_SSC_INIT_DCO_AMP (0x3F \u003c\u003c 0)\n```",
      "range": {
        "startLine": 932,
        "startChar": 0,
        "endLine": 1008,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "4c1f96b52ff7368114e61bb31629b7e916c5a1b0",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "82f1c571_ef24b80f",
        "filename": "src/add-ons/accelerants/intel_extreme/Ports.cpp",
        "patchSetId": 6
      },
      "lineNbr": 2476,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-25T11:34:08Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\t  \"assuming default DP-link reference\\n\",\n\t\t\t__func__);\n```",
      "range": {
        "startLine": 2476,
        "startChar": 0,
        "endLine": 2476,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "4c1f96b52ff7368114e61bb31629b7e916c5a1b0",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1e4752ba_384c1ff3",
        "filename": "src/add-ons/accelerants/intel_extreme/TigerLakePLL.cpp",
        "patchSetId": 6
      },
      "lineNbr": 16,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-25T11:34:08Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define TRACE(x...) _sPrintf(\"intel_extreme: \" x)\n```",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 16,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "4c1f96b52ff7368114e61bb31629b7e916c5a1b0",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0ce753c8_591d9859",
        "filename": "src/add-ons/accelerants/intel_extreme/TigerLakePLL.cpp",
        "patchSetId": 6
      },
      "lineNbr": 18,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-25T11:34:08Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define TRACE(x...)\n```",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 18,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "4c1f96b52ff7368114e61bb31629b7e916c5a1b0",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "258257a8_dc61433a",
        "filename": "src/add-ons/accelerants/intel_extreme/TigerLakePLL.cpp",
        "patchSetId": 6
      },
      "lineNbr": 104,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-25T11:34:08Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tconst int dividerlist[] \u003d {2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 24, 28, 30, 32, 36, 40, 42, 44,\n\t\t48, 50, 52, 54, 56, 60, 64, 66, 68, 70, 72, 76, 78, 80, 84, 88, 90, 92, 96, 98, 100, 102, 3,\n\t\t5, 7, 9, 15, 21};\n```",
      "range": {
        "startLine": 102,
        "startChar": 0,
        "endLine": 104,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "4c1f96b52ff7368114e61bb31629b7e916c5a1b0",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "12308dfb_d54a3258",
        "filename": "src/add-ons/accelerants/intel_extreme/TigerLakePLL.cpp",
        "patchSetId": 6
      },
      "lineNbr": 296,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-25T11:34:08Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\t  \", dividers %\" B_PRIx32 \" -\u003e %\" B_PRIx32 \"\\n\",\n```",
      "range": {
        "startLine": 296,
        "startChar": 0,
        "endLine": 296,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "4c1f96b52ff7368114e61bb31629b7e916c5a1b0",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "59e59925_5bd5a95a",
        "filename": "src/add-ons/accelerants/intel_extreme/TigerLakePLL.cpp",
        "patchSetId": 6
      },
      "lineNbr": 307,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-25T11:34:08Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\twhile ((read32(DPLL_ENABLE) \u0026 TGL_DPLL_LOCK) !\u003d 0)\n\t\t;\n```",
      "range": {
        "startLine": 307,
        "startChar": 0,
        "endLine": 307,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "4c1f96b52ff7368114e61bb31629b7e916c5a1b0",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a5e6b27b_78d19cab",
        "filename": "src/add-ons/accelerants/intel_extreme/TigerLakePLL.cpp",
        "patchSetId": 6
      },
      "lineNbr": 314,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-25T11:34:08Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\twhile ((read32(DPLL_ENABLE) \u0026 TGL_DPLL_POWER_STATE) \u003d\u003d 0)\n\t\t;\n```",
      "range": {
        "startLine": 314,
        "startChar": 0,
        "endLine": 314,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "4c1f96b52ff7368114e61bb31629b7e916c5a1b0",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ed2f4c1e_c52d9a0d",
        "filename": "src/add-ons/accelerants/intel_extreme/TigerLakePLL.cpp",
        "patchSetId": 6
      },
      "lineNbr": 327,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-25T11:34:08Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t  \" (int \u003d %\" B_PRId32 \", frac \u003d %\" B_PRId32 \")\\n\",\n\t\tDPLL_CFGCR0, dco_reg, DPLL_CFGCR1, dividers, dco_int, dco_frac);\n```",
      "range": {
        "startLine": 326,
        "startChar": 0,
        "endLine": 327,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "4c1f96b52ff7368114e61bb31629b7e916c5a1b0",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0c88a016_4c82ab92",
        "filename": "src/add-ons/accelerants/intel_extreme/TigerLakePLL.cpp",
        "patchSetId": 6
      },
      "lineNbr": 339,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-25T11:34:08Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\twhile ((read32(DPLL_ENABLE) \u0026 TGL_DPLL_LOCK) \u003d\u003d 0)\n\t\t;\n```",
      "range": {
        "startLine": 339,
        "startChar": 0,
        "endLine": 339,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "4c1f96b52ff7368114e61bb31629b7e916c5a1b0",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Build-Check",
        "description": {
          "value": "Builds OK on all architectures"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "-label:Verified\u003d-1"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-label:Verified=-1"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Verified=-1"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "4c1f96b52ff7368114e61bb31629b7e916c5a1b0",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}