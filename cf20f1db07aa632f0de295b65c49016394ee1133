{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "178931c1_374c15ad",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2024-02-15T14:47:43Z",
      "side": 1,
      "message": "1. Commit message needs to be updated.\n\n2. IsDarkColor/IsLightColor can be defined inline in the header.\n\n3. How useful is IsDarkColor/IsLightColor? I mean, does it really make sense to divide all colors into \"Bright\" and \"Dark\" depending on whether they\u0027re exactly half bright or half dark? Shouldn\u0027t we have a \"gray area\" in the middle where the colors aren\u0027t defined to be exactly either?\n\n4. IsDarkColor/IsLightColor seem like awkward names:\n```\nrgb_color color \u003d ...;\ncolor.IsDarkColor();\n```\nWhy not just \"IsDark\"?",
      "revId": "cf20f1db07aa632f0de295b65c49016394ee1133",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b561b4b_f67bac34",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000390
      },
      "writtenOn": "2024-02-15T15:08:54Z",
      "side": 1,
      "message": "Your \"1.\" and \"2.\" are lost completely, I can see it in the summarized view but not the expanded one, instead your entire message is indented to the right.\n\nThey can be defined inline, but I don\u0027t see the point. putting some stuff in the header inline and some not just makes finding the definitions harder.\n\n\u003e How useful is IsDarkColor/IsLightColor? I mean, does it really make sense to divide all colors into \"Bright\" and \"Dark\" depending on whether they\u0027re exactly half bright or half dark? Shouldn\u0027t we have a \"gray area\" in the middle where the colors aren\u0027t defined to be exactly either?\n\nThey are not defined anything, these are convenience methods for the common cases. This will be documented as doing the \u003e 127; \u003c\u003d 127 dance. If it is not appropriate for your code don\u0027t use it and instead use Brightness() directly.\nIt makes sure the code picks either A or B, if you include a gray area the code becomes more messy\nif light\n   pick color a\nelseif dark\n   pick color b\nelse\n   do some other calculations.\n\nInstead of the simpler\nif light\n   pick color a\nelse\n   pick color b\n\n(In the code above that this changes having a gray area defined would make all those codepaths more complex and not allow the drop-in of this api as it is now too.)\nI don\u0027t see the point in providing support for someone picking a color scheme that chooses unreadable colors in this api, if that is the case and we determine the contrast is too little we can just pick a different color and ignore the user setting.\n(We could even go further and convert the color to HSL and change the L component only to satisfy the contrast requirement)\n\nThis is what this does:\n\u003e if (abs(viewColor.Brightness() - textColor.Brightness()) \u003e 127)\n\nIf you want there to be a convenicne method of\nint32 rgb_color::ApparentContrast(rgb_color)\n\nI can add that too.\n\n\n\u003e Why not just \"IsDark\"?\nWhy not just IsDarkColor?\nIt\u0027s a bit annoying to have to bike shed names several times on the same change. \n\nYour example of someone naming their variable \"color\" is too un-descriptive for real code too. it only says what type the variable is, not what information is holds.\nbackground would be a more common example, and there it does not look bad.\n\nRegardless I will change those to IsDark and IsLight if you feel this is a big issue.",
      "parentUuid": "178931c1_374c15ad",
      "revId": "cf20f1db07aa632f0de295b65c49016394ee1133",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "83d96188_7ddf98c9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000390
      },
      "writtenOn": "2024-02-15T15:10:49Z",
      "side": 1,
      "message": "Somehow my response got into the quoted part, not sure why. sorry about that.",
      "parentUuid": "9b561b4b_f67bac34",
      "revId": "cf20f1db07aa632f0de295b65c49016394ee1133",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd70a740_7d7562d7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2024-02-15T15:40:10Z",
      "side": 1,
      "message": "Well, these are just my thoughts. Let\u0027s see what others think.\n\nThe message appears indented to the right for me, too, but I can see everything in it just fine...\n\nPutting things in the header inline will make the code slightly faster (lets the compiler know more about the function), but also, if we ever decide to change these methods in the future, having them inline means they are not part of the ABI.",
      "parentUuid": "83d96188_7ddf98c9",
      "revId": "cf20f1db07aa632f0de295b65c49016394ee1133",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e9f8e68d_149f366c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000390
      },
      "writtenOn": "2024-02-15T15:50:30Z",
      "side": 1,
      "message": "Does the compiler only inline them if they are completely in the header? In that case I can put them there.\n\nI can see your message too, but i saw you used numbers to mark sections. But i cannot see them at all in the message text.",
      "parentUuid": "fd70a740_7d7562d7",
      "revId": "cf20f1db07aa632f0de295b65c49016394ee1133",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b4aae3b2_994c5999",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2024-02-15T15:54:28Z",
      "side": 1,
      "message": "They show up just fine for me...\n\nYes, only if they are in the header with \"inline\" keyword. Otherwise, if they\u0027re in the .cpp, then the compiler doesn\u0027t have any access to them when compiling other source files.",
      "parentUuid": "e9f8e68d_149f366c",
      "revId": "cf20f1db07aa632f0de295b65c49016394ee1133",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a2a26385_0d853fcb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2024-02-18T11:07:37Z",
      "side": 1,
      "message": "The \"IsDark\"/\"IsLigt\" functions answers a very simple question: \"if I want to draw text on top of this color, should I use black text or white text?\"\n\nThe \"perceptual brightness\" function was introduced first to do this on the desktop (where the user can pick any background color and we have to adjust). It gives much better results there than the old \"brightness\" function.\n\nSince then it found its use in various other places as well, always with the same test. There is no \"grey area\" when asking that question. Indeed, using grey text will always be worse than using either white or black. That being said, the Brightness() function remains available for people who need it for another reason (for example, sorting colors by brightness).\n\nWith the IsDark/IsLight functions being inline, they will have no performance or code size cost, so, I don\u0027t really see a problem with it.",
      "parentUuid": "b4aae3b2_994c5999",
      "revId": "cf20f1db07aa632f0de295b65c49016394ee1133",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}