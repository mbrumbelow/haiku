{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ff2aa159_90c5dead",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2024-04-20T19:44:09Z",
      "side": 1,
      "message": "I don\u0027t know if this really makes sense to have in a translator. After all, it\u0027s just putting binary data into RDEF format. This seems like something that should be part of either Icon-O-Matic\u0027s command line interface, or \"rc\"\u0027s command line interface.",
      "revId": "5f2f798cbeddcc48689fa81ac066d05739b269a3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d70b4e1c_967fde0d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000459
      },
      "writtenOn": "2024-04-20T20:06:27Z",
      "side": 1,
      "message": "Oof... That makes sense. I wish I had thought about that earlier because that undoes practically all of my work :-(. Well, I had come into this project thinking that it would be relatively easy (it wasn\u0027t quite as easy as I thought, as always happens ðŸ˜…).\n\nI believe that putting it into Icon-O-Matic\u0027s cli would be the best option. Unfortunately, IOM doesn\u0027t have a cli atm, so I would have to implement that as well. But it\u0027s too much work for me for now :/",
      "parentUuid": "ff2aa159_90c5dead",
      "revId": "5f2f798cbeddcc48689fa81ac066d05739b269a3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9e44cf28_bdeea72d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2024-04-20T20:07:04Z",
      "side": 1,
      "message": "There\u0027s already an existing patch on Gerrit for an IOM CLI, isn\u0027t there?",
      "parentUuid": "d70b4e1c_967fde0d",
      "revId": "5f2f798cbeddcc48689fa81ac066d05739b269a3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "75dc8d69_a8244e69",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000311
      },
      "writtenOn": "2024-04-20T20:49:51Z",
      "side": 1,
      "message": "https://review.haiku-os.org/c/haiku/+/60 seems to be the one.",
      "parentUuid": "9e44cf28_bdeea72d",
      "revId": "5f2f798cbeddcc48689fa81ac066d05739b269a3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c7d405c1_dc503182",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-04-22T17:28:28Z",
      "side": 1,
      "message": "So... I actually think this makes sense.  The ability to convert hvif\u0027s to rdef\u0027s is pretty useful (especially in app builds).   We really shouldn\u0027t be packing features like this (converting from one format to another) into random desktop applications. (especially when we have the translation kit available)\n\nConverting a hvif to \"text\" should be indeed a rdef since that\u0027s the proper \"textual\" form of the hvif image.",
      "revId": "5f2f798cbeddcc48689fa81ac066d05739b269a3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c6d871ae_79e80ba7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000459
      },
      "writtenOn": "2024-04-22T17:46:28Z",
      "side": 1,
      "message": "Seems like implementing a CLI in Icon-O-Matic properly would be a bit more work than I want to do. The change above implements the CLI with a very basic, but somewhat messy method. If I were to go about it, I would want to do a more proper method that doesn\u0027t introduce technical debt to the nicely written application of Icon-O-Matic :-).\n\nOne simple alternative method I can think of is writing a bash script and posting it to the forums. Then people searching Google will find an answer.",
      "parentUuid": "75dc8d69_a8244e69",
      "revId": "5f2f798cbeddcc48689fa81ac066d05739b269a3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "684d0810_8bbd6b1d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2024-04-22T18:27:53Z",
      "side": 1,
      "message": "But the data in the RDEF is just the HVIF in RDEF format. There\u0027s nothing HVIF-specific about its representation in the RDEF. There\u0027s thus no reason to have the code to convert it to an RDEF in HVIF translator. If anything it would belong in an \"RDEF translator\", but, I don\u0027t think it makes sense to have one of those either. \n\nReally, this should just be in \"rc\": it should have a command to take any binary file and spit out an RDEF for it (or the reverse, for that matter.) Then it\u0027d work with any binary file type.",
      "parentUuid": "c7d405c1_dc503182",
      "revId": "5f2f798cbeddcc48689fa81ac066d05739b269a3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cc94c5e6_17cc7399",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-04-22T18:34:24Z",
      "side": 1,
      "message": "I feel like putting it into rc makes more sense than making Icon-O-Matic do command-line conversions.\n\nHowever, i\u0027d also simultaneously mention that Icon-O-Matic *COULD* be using the translation kit (aka, this change) to export rdef vs using an internal exporter. It couldn\u0027t do that if it was put into rc.\n\nEscalating to +2 to counter your -2 ðŸ˜„",
      "parentUuid": "684d0810_8bbd6b1d",
      "revId": "5f2f798cbeddcc48689fa81ac066d05739b269a3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ffb73d8e_1e12e36a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2024-04-22T18:39:43Z",
      "side": 1,
      "message": "Again: *if* this should be in the translation kit, then it should be as part of an RdefTranslator not the HVIFTranslator. But I don\u0027t think it should. IOM could just invoke \"rc\" to do the work in any case.",
      "parentUuid": "cc94c5e6_17cc7399",
      "revId": "5f2f798cbeddcc48689fa81ac066d05739b269a3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d72c160d_26982575",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000459
      },
      "writtenOn": "2024-04-22T18:47:32Z",
      "side": 1,
      "message": "\u003e However, i\u0027d also simultaneously mention that Icon-O-Matic *COULD* be using the translation kit (aka, this change) to export rdef vs using an internal exporter.\n\nI\u0027ve now had some time to think about how this would go. In this case, there\u0027s little difference in performance. But things become inefficient in other cases, such as turning an IOM save file into an hvif.\n\nIn the current system:\n\n1. Icon-O-Matic has an internal representation of the file to be saved as an hvif\n2. Icon-O-Matic writes the hvif file with this representation.\n\nOTOH, a translator would do:\n\n1. Icon-O-Matic has internal memory representation of file\n2. Icon-O-Matic creates the IOM save file using the memory representation.\n2. Translator reads the save file, to recreate this internal memory representation.\n3. Translator uses memory representation to write the hvif file.\n\n\u003e *if* this should be in the translation kit, then it should be as part of an RdefTranslator not the HVIFTranslator\n\nThat\u0027s a good point. This is more general than just converting hvif files to an rdef file. It might also work on Be bitmap files.",
      "parentUuid": "cc94c5e6_17cc7399",
      "revId": "5f2f798cbeddcc48689fa81ac066d05739b269a3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "239bf739_e63df3e7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2024-04-22T18:57:55Z",
      "side": 1,
      "message": "\u003e OTOH, a translator would do:\n\nData can be sent to translators via a data stream. So that doesn\u0027t matter here.\n\nAgain, I think adding a command line option to `rc` is what makes the most sense overall, not adding a translator.",
      "parentUuid": "d72c160d_26982575",
      "revId": "5f2f798cbeddcc48689fa81ac066d05739b269a3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb19c4c8_749cb830",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000459
      },
      "writtenOn": "2024-04-22T19:03:58Z",
      "side": 1,
      "message": "Hmm... something like `rc -a icon.hvif file.rdef`? Seems a bit strange to add such an option to a compiler, but it\u0027s not a terrible idea and probably something I could implement in a reasonable amount of time.",
      "parentUuid": "239bf739_e63df3e7",
      "revId": "5f2f798cbeddcc48689fa81ac066d05739b269a3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "df3a3a60_81b95438",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-04-22T19:24:58Z",
      "side": 1,
      "message": "Wait.. you\u0027re right.   rc doesn\u0027t deal with hvif directly. It deals in rsrc -\u003e rdef. (nothing icon related besides converting between the binary vs source rsrc/rdef formats)\n\nrc is the \"closest tool\", however it\u0027s a weird add there too.",
      "parentUuid": "fb19c4c8_749cb830",
      "revId": "5f2f798cbeddcc48689fa81ac066d05739b269a3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "729af6e7_0dd8f3d0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2024-04-22T19:28:56Z",
      "side": 1,
      "message": "No, what I am suggesting to add to \"rc\" is just a generic facility for encoding/decoding binary files in rdef format. There\u0027s nothing icon-specific about that.",
      "parentUuid": "df3a3a60_81b95438",
      "revId": "5f2f798cbeddcc48689fa81ac066d05739b269a3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c794d4f7_67129f99",
        "filename": "src/add-ons/translators/hvif/HVIFTranslator.cpp",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-20T19:45:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define HVIF_RDEF_FORMAT_CODE \u0027HRDF\u0027\n```",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 26,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "5f2f798cbeddcc48689fa81ac066d05739b269a3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad42f849_26cbf7bf",
        "filename": "src/add-ons/translators/hvif/HVIFTranslator.cpp",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1000570
      },
      "writtenOn": "2024-04-22T17:40:44Z",
      "side": 1,
      "message": "The description of the other translators is normally quite short. As it\u0027s the HVIF translator, it\u0027s also obvious that it\u0027ll be about HVIF data, and being and array is more detail than needed. I suggest a simple:\n\"Resource definition file\"",
      "revId": "5f2f798cbeddcc48689fa81ac066d05739b269a3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d854ea20_361bc3dd",
        "filename": "src/add-ons/translators/hvif/HVIFTranslator.cpp",
        "patchSetId": 1
      },
      "lineNbr": 63,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-20T19:45:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t{B_TRANSLATOR_BITMAP, B_TRANSLATOR_BITMAP, 0.4, 0.4, \"image/x-be-bitmap\",\n\t\t\"Be Bitmap format (HVIFTranslator)\"},\n\t{HVIF_RDEF_FORMAT_CODE, B_TRANSLATOR_TEXT, 0.6, 0.6, \"text/x-vnd.Be.ResourceDef\",\n\t\t\"Resource definition file with an array containing the hvif data (HVIFTranslator)\"},\n```",
      "range": {
        "startLine": 48,
        "startChar": 0,
        "endLine": 63,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "5f2f798cbeddcc48689fa81ac066d05739b269a3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "326f5da1_8c0a9847",
        "filename": "src/add-ons/translators/hvif/HVIFTranslator.cpp",
        "patchSetId": 1
      },
      "lineNbr": 107,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-20T19:45:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nHVIFTranslator::Identify(BPositionIO* inSource, const translation_format* inFormat,\n\tBMessage* ioExtension, translator_info* outInfo, uint32 outType)\n```",
      "range": {
        "startLine": 105,
        "startChar": 0,
        "endLine": 107,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "5f2f798cbeddcc48689fa81ac066d05739b269a3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cb8fb10d_3a21836a",
        "filename": "src/add-ons/translators/hvif/HVIFTranslator.cpp",
        "patchSetId": 1
      },
      "lineNbr": 112,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-20T19:45:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\u0026\u0026 outType !\u003d HVIF_RDEF_FORMAT_CODE) {\n\t\treturn B_NO_TRANSLATOR;\n\t}\n```",
      "range": {
        "startLine": 111,
        "startChar": 0,
        "endLine": 112,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "5f2f798cbeddcc48689fa81ac066d05739b269a3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "74211293_0b91c23e",
        "filename": "src/add-ons/translators/hvif/HVIFTranslator.cpp",
        "patchSetId": 1
      },
      "lineNbr": 151,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-20T19:45:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nHVIFTranslator::Translate(BPositionIO* inSource, const translator_info* inInfo,\n\tBMessage* ioExtension, uint32 outType, BPositionIO* outDestination)\n```",
      "range": {
        "startLine": 149,
        "startChar": 0,
        "endLine": 151,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "5f2f798cbeddcc48689fa81ac066d05739b269a3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "09e356e0_08aa3498",
        "filename": "src/add-ons/translators/hvif/HVIFTranslator.cpp",
        "patchSetId": 1
      },
      "lineNbr": 155,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-20T19:45:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\u0026\u0026 outType !\u003d HVIF_RDEF_FORMAT_CODE) {\n\t\treturn B_NO_TRANSLATOR;\n\t}\n```",
      "range": {
        "startLine": 154,
        "startChar": 0,
        "endLine": 155,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "5f2f798cbeddcc48689fa81ac066d05739b269a3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b3574b70_83c730eb",
        "filename": "src/add-ons/translators/hvif/HVIFTranslator.cpp",
        "patchSetId": 1
      },
      "lineNbr": 205,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-20T19:45:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\t\t\tb[0], b[1], b[2], b[3], b[4], b[5], b[6], b[7], b[8], b[9], b[10], b[11], b[12],\n\t\t\t\t\tb[13], b[14], b[15], b[16], b[17], b[18], b[19], b[20], b[21], b[22], b[23],\n\t\t\t\t\tb[24], b[25], b[26], b[27], b[28], b[29], b[30], b[31]);\n```",
      "range": {
        "startLine": 198,
        "startChar": 0,
        "endLine": 205,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "5f2f798cbeddcc48689fa81ac066d05739b269a3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "119e3265_ea77120a",
        "filename": "src/add-ons/translators/hvif/HVIFTranslator.cpp",
        "patchSetId": 1
      },
      "lineNbr": 239,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-20T19:45:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\tBBitmap rendered(BRect(0, 0, renderSize - 1, renderSize - 1), B_BITMAP_NO_SERVER_LINK,\n\t\t\t\tB_RGBA32);\n```",
      "range": {
        "startLine": 238,
        "startChar": 0,
        "endLine": 239,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "5f2f798cbeddcc48689fa81ac066d05739b269a3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2e1d41ee_93b1f845",
        "filename": "src/add-ons/translators/hvif/HVIFTranslator.cpp",
        "patchSetId": 1
      },
      "lineNbr": 252,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-20T19:45:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\tBBitmap* dummy \u003d NULL;\n```",
      "range": {
        "startLine": 252,
        "startChar": 0,
        "endLine": 252,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "5f2f798cbeddcc48689fa81ac066d05739b269a3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "042ad8d5_3064d779",
        "filename": "src/add-ons/translators/hvif/HVIFTranslator.h",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-04-20T19:45:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define HVIF_TRANSLATOR_VERSION B_TRANSLATION_MAKE_VERSION(1, 1, 0)\n```",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 13,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "5f2f798cbeddcc48689fa81ac066d05739b269a3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}