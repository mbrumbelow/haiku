{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "321411e2_632fc6d7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000013
      },
      "writtenOn": "2024-09-07T14:40:01Z",
      "side": 1,
      "message": "Add the missing break, use FindColor instead of GetColor. Leave the rest to future updates.",
      "revId": "6a79afaaf672537e461e6c7f2b8ecfe97c265929",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5deeff78_7bf566ba",
        "filename": "src/preferences/appearance/FontSelectionView.cpp",
        "patchSetId": 2
      },
      "lineNbr": 187,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-09-01T14:28:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\t\trgb_color panelColor\n\t\t\t\t\t\u003d msg-\u003eGetColor(ui_color_name(B_PANEL_TEXT_COLOR), make_color(255, 255, 255));\n```",
      "range": {
        "startLine": 186,
        "startChar": 0,
        "endLine": 187,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "6a79afaaf672537e461e6c7f2b8ecfe97c265929",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "88a4413f_7cbfbbea",
        "filename": "src/preferences/appearance/FontSelectionView.cpp",
        "patchSetId": 2
      },
      "lineNbr": 187,
      "author": {
        "id": 1000013
      },
      "writtenOn": "2024-09-07T14:40:01Z",
      "side": 1,
      "message": "```\nrgb_color textColor;\nif (msg-\u003eFindColor(ui_color_name(B_PANEL_TEXT_COLOR), \u0026textColor) \u003d\u003d B_OK)\n    fPreviewTextView-\u003eSetFontAndColor(\u0026fCurrentFont, B_FONT_ALL, \u0026textColor);\n```\n\nDo not make a default color here, instead use Find Color to ensure that the color was found (\u003d\u003d B_OK) or do nothing. I like the variable name \"textColor\" better than \"panelColor\" as panelColor sounds like it refers to the panel background color rather than the panel text color. panelTextColor would be ok too.",
      "parentUuid": "5deeff78_7bf566ba",
      "range": {
        "startLine": 186,
        "startChar": 0,
        "endLine": 187,
        "endChar": 0
      },
      "revId": "6a79afaaf672537e461e6c7f2b8ecfe97c265929",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d282d0f5_b6a988bc",
        "filename": "src/preferences/appearance/FontView.cpp",
        "patchSetId": 2
      },
      "lineNbr": 120,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2024-09-02T15:17:34Z",
      "side": 1,
      "message": "Is this really needed? Shouldn\u0027t these child views get the message automatically?",
      "revId": "6a79afaaf672537e461e6c7f2b8ecfe97c265929",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cdb87d36_d946fc91",
        "filename": "src/preferences/appearance/FontView.cpp",
        "patchSetId": 2
      },
      "lineNbr": 120,
      "author": {
        "id": 1000670
      },
      "writtenOn": "2024-09-02T16:17:27Z",
      "side": 1,
      "message": "They don\u0027t get it automatically, unfortunately. I first tried it without that and it didn\u0027t work. It\u0027s exactly the same situation as with the WebPositive pull request. Maybe it\u0027s a bug, I don\u0027t know, but with this code it works.",
      "parentUuid": "d282d0f5_b6a988bc",
      "revId": "6a79afaaf672537e461e6c7f2b8ecfe97c265929",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "edd8529f_f96a7d53",
        "filename": "src/preferences/appearance/FontView.cpp",
        "patchSetId": 2
      },
      "lineNbr": 120,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2024-09-02T16:20:18Z",
      "side": 1,
      "message": "It sounds like some sort of bug, yes. I\u0027d expect all child views to get COLORS_UPDATED message.",
      "parentUuid": "cdb87d36_d946fc91",
      "revId": "6a79afaaf672537e461e6c7f2b8ecfe97c265929",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "36206b68_babd1647",
        "filename": "src/preferences/appearance/FontView.cpp",
        "patchSetId": 2
      },
      "lineNbr": 120,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2024-09-07T09:21:29Z",
      "side": 1,
      "message": "It is sent to the top view and the window target view only. As far as I know, there isn\u0027t a way to \"broadcast\" a message to all views in a window.\n\nSo it\u0027s up to each view to forward the message to all its children. Maybe this can be done in BView with a loop on all children instead of handleing it specifically here.",
      "parentUuid": "edd8529f_f96a7d53",
      "revId": "6a79afaaf672537e461e6c7f2b8ecfe97c265929",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "57c72788_1b0ce138",
        "filename": "src/preferences/appearance/FontView.cpp",
        "patchSetId": 2
      },
      "lineNbr": 120,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2024-09-07T11:33:15Z",
      "side": 1,
      "message": "https://xref.landonf.org/source/xref/haiku/src/kits/interface/View.cpp#5191\n\nIt appears we don\u0027t propagate these messages to child views automatically, as is done for the message codes immediately following. I think we should?",
      "parentUuid": "36206b68_babd1647",
      "revId": "6a79afaaf672537e461e6c7f2b8ecfe97c265929",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "65766048_926e945c",
        "filename": "src/preferences/appearance/FontView.cpp",
        "patchSetId": 2
      },
      "lineNbr": 120,
      "author": {
        "id": 1000013
      },
      "writtenOn": "2024-09-07T14:40:01Z",
      "side": 1,
      "message": "I did more investigation on this. We are propagating these messages to child views, it\u0027s happening in here instead: https://git.haiku-os.org/haiku/tree/src/kits/interface/View.cpp#n6326 We\u0027re doing this out of band of the standard MessageReceived() system because we want the color changes to go all the way up the stack whether you handle the case in your BView or not. The line that you referenced in MessageReceived() is for the default BView to do nothing in this case, you have to override this case in your BView subclass to update the colors.\n\nHowever, even though we are going up the whole view stack and updating colors this is not working for text views, probably because they aren\u0027t using high and low colors here but font colors from Get/SetFontAndColor() instead. This probably needs to be handled in BTextView, and this section of code should be revisited in the future.\n\nWe already have a way of handling messages that go all the way up the stack and back using the AttachedToWindow() and AllAttached() methods:\n\nhttps://www.haiku-os.org/legacy-docs/bebook/BView.html#BView_AttachedToWindow\n\n\"AttachedToWindow() is called immediately after the BView is formally made a part of the window\u0027s view hierarchy and after it has become known to the Application Server and its graphics parameters are set... The AllAttached() notification follows on the heels of AttachedToWindow(), but works its way up the view hierarchy rather than down. When AllAttached() is called for a BView, all its descendants have received both AttachedToWindow() and AllAttached() notifications.\"\n\nWe should redo live font and color updating to call hook functions on the way up the stack and then back down similar to how AttachedToWindow() and AllAttached() work. You\u0027ll get a ColorsUpdated() and FontsUpdated() hook function on the way up the stack and a AllColorsUpdated() and AllFontsUpdated() hook on the way down.\n\nAnyway that\u0027s all backstory and not related to the task at hand here which is updating the text view when receiving B_COLORS_UPDATED. For now we should add the break; to the end of the case and revisit this later.",
      "parentUuid": "57c72788_1b0ce138",
      "revId": "6a79afaaf672537e461e6c7f2b8ecfe97c265929",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bb2fcf0f_7ca00312",
        "filename": "src/preferences/appearance/FontView.cpp",
        "patchSetId": 2
      },
      "lineNbr": 126,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2024-09-07T09:21:29Z",
      "side": 1,
      "message": "this is missing a \"break;\"",
      "revId": "6a79afaaf672537e461e6c7f2b8ecfe97c265929",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4cc1b593_f3f801c6",
        "filename": "src/preferences/appearance/FontView.cpp",
        "patchSetId": 2
      },
      "lineNbr": 126,
      "author": {
        "id": 1000013
      },
      "writtenOn": "2024-09-07T15:15:08Z",
      "side": 1,
      "message": "Added the missing break. Removed the curly braces as our style is not to have these here.",
      "parentUuid": "bb2fcf0f_7ca00312",
      "revId": "6a79afaaf672537e461e6c7f2b8ecfe97c265929",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}