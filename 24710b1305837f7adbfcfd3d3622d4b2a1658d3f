{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "176dc952_5a3b1817",
        "filename": "headers/os/interface/Menu.h",
        "patchSetId": 10
      },
      "lineNbr": 24,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-02-20T11:29:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nclass MenuTrackState;\nclass BMenuWindow;\nclass ExtraMenuData;\nclass TriggerList;\nclass MenuPrivate;\n```",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 24,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "24710b1305837f7adbfcfd3d3622d4b2a1658d3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "43780ea2_cf4b854f",
        "filename": "headers/private/interface/MenuPrivate.h",
        "patchSetId": 10
      },
      "lineNbr": 12,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-02-20T11:29:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (insert after):\n```c++\n#include \u003cLocker.h\u003e\n```",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 12,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "24710b1305837f7adbfcfd3d3622d4b2a1658d3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b9492df6_a03886da",
        "filename": "headers/private/interface/MenuPrivate.h",
        "patchSetId": 10
      },
      "lineNbr": 15,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-02-20T11:29:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` is to remove this line/these lines.",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 15,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "24710b1305837f7adbfcfd3d3622d4b2a1658d3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e372474a_96e74123",
        "filename": "headers/private/interface/MenuPrivate.h",
        "patchSetId": 10
      },
      "lineNbr": 22,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-02-20T11:29:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nenum menu_track_command { MENU_TRACK_CMD_DONE };\n```",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 22,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "24710b1305837f7adbfcfd3d3622d4b2a1658d3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f173b038_a14168bb",
        "filename": "src/kits/interface/Menu.cpp",
        "patchSetId": 10
      },
      "lineNbr": 24,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-02-20T11:29:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (insert after):\n```c++\n#include \u003cAutoLocker.h\u003e\n```",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 24,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "24710b1305837f7adbfcfd3d3622d4b2a1658d3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e85fa9ff_cf31bc66",
        "filename": "src/kits/interface/Menu.cpp",
        "patchSetId": 10
      },
      "lineNbr": 42,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-02-20T11:29:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` is to remove this line/these lines.",
      "range": {
        "startLine": 42,
        "startChar": 0,
        "endLine": 42,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "24710b1305837f7adbfcfd3d3622d4b2a1658d3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e24bcd70_39c3d36c",
        "filename": "src/kits/interface/Menu.cpp",
        "patchSetId": 10
      },
      "lineNbr": 462,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-02-20T11:29:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#if SHOW_NAVIGATION_AREA\n```",
      "range": {
        "startLine": 462,
        "startChar": 0,
        "endLine": 462,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "24710b1305837f7adbfcfd3d3622d4b2a1658d3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c35b9046_36ff5067",
        "filename": "src/kits/interface/Menu.cpp",
        "patchSetId": 10
      },
      "lineNbr": 483,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-02-20T11:29:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#endif\n```",
      "range": {
        "startLine": 483,
        "startChar": 0,
        "endLine": 483,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "24710b1305837f7adbfcfd3d3622d4b2a1658d3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cf47f36f_3aaac3fa",
        "filename": "src/kits/interface/Menu.cpp",
        "patchSetId": 10
      },
      "lineNbr": 487,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-02-20T11:29:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (insert after):\n```c++\n\n```",
      "range": {
        "startLine": 487,
        "startChar": 0,
        "endLine": 487,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "24710b1305837f7adbfcfd3d3622d4b2a1658d3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "20ffa20d_9580b359",
        "filename": "src/kits/interface/Menu.cpp",
        "patchSetId": 10
      },
      "lineNbr": 531,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-02-20T11:29:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\tcase B_MOUSE_DOWN:\n\t\t{\n```",
      "range": {
        "startLine": 531,
        "startChar": 0,
        "endLine": 531,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "24710b1305837f7adbfcfd3d3622d4b2a1658d3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aa622d1a_2e7c4123",
        "filename": "src/kits/interface/Menu.cpp",
        "patchSetId": 10
      },
      "lineNbr": 552,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-02-20T11:29:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\tcase B_MOUSE_UP:\n\t\t{\n```",
      "range": {
        "startLine": 552,
        "startChar": 0,
        "endLine": 552,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "24710b1305837f7adbfcfd3d3622d4b2a1658d3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f485f717_7a086524",
        "filename": "src/kits/interface/Menu.cpp",
        "patchSetId": 10
      },
      "lineNbr": 564,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-02-20T11:29:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\tif (!_IsStickyMode()\n\t\t\t\t|| (!(fExtraRect !\u003d NULL \u0026\u0026 fExtraRect-\u003eContains(where))\n\t\t\t\t\t\u0026\u0026 dynamic_cast\u003cBMenuWindow*\u003e(Window()) \u003d\u003d NULL\n\t\t\t\t\t\u0026\u0026 (item \u003d\u003d NULL || item-\u003eSubmenu() \u003d\u003d NULL))) {\n\t\t\t\tif (item !\u003d NULL)\n\t\t\t\t\t_InvokeItem(item);\n```",
      "range": {
        "startLine": 557,
        "startChar": 0,
        "endLine": 564,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "24710b1305837f7adbfcfd3d3622d4b2a1658d3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fec2dfc6_727f1e14",
        "filename": "src/kits/interface/Menu.cpp",
        "patchSetId": 10
      },
      "lineNbr": 572,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-02-20T11:29:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\tcase B_MOUSE_MOVED:\n\t\t{\n```",
      "range": {
        "startLine": 572,
        "startChar": 0,
        "endLine": 572,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "24710b1305837f7adbfcfd3d3622d4b2a1658d3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "810852f0_7934c801",
        "filename": "src/kits/interface/Menu.cpp",
        "patchSetId": 10
      },
      "lineNbr": 619,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-02-20T11:29:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\t\tcase B_INSIDE_VIEW:\n\t\t\t\t{\n```",
      "range": {
        "startLine": 619,
        "startChar": 0,
        "endLine": 619,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "24710b1305837f7adbfcfd3d3622d4b2a1658d3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "51f717de_37450f08",
        "filename": "src/kits/interface/Menu.cpp",
        "patchSetId": 10
      },
      "lineNbr": 644,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-02-20T11:29:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\t\t\t\t} else if (fTrackState-\u003enavigationAreaTimer.Get() !\u003d NULL) {\n\t\t\t\t\t\t\tfTrackState-\u003enavigationAreaTimer.SetTo(\n\t\t\t\t\t\t\t\tnew(std::nothrow) BMessageRunner(BMessenger(this),\n\t\t\t\t\t\t\t\t\tBMessage(navigationAreaTimeoutMsg), kNavigationAreaTimeout, 1));\n```",
      "range": {
        "startLine": 642,
        "startChar": 0,
        "endLine": 644,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "24710b1305837f7adbfcfd3d3622d4b2a1658d3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2b1df1cc_d2874e79",
        "filename": "src/kits/interface/Menu.cpp",
        "patchSetId": 10
      },
      "lineNbr": 662,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-02-20T11:29:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\tcase navigationAreaTimeoutMsg:\n\t\t{\n```",
      "range": {
        "startLine": 662,
        "startChar": 0,
        "endLine": 662,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "24710b1305837f7adbfcfd3d3622d4b2a1658d3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "047b6911_0f2c6b5f",
        "filename": "src/kits/interface/Menu.cpp",
        "patchSetId": 10
      },
      "lineNbr": 672,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-02-20T11:29:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\t\t} else {\n```",
      "range": {
        "startLine": 672,
        "startChar": 0,
        "endLine": 672,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "24710b1305837f7adbfcfd3d3622d4b2a1658d3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c428373d_40f05aa2",
        "filename": "src/kits/interface/Menu.cpp",
        "patchSetId": 10
      },
      "lineNbr": 673,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-02-20T11:29:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (insert after):\n```c++\n\t\t\t\t}\n```",
      "range": {
        "startLine": 673,
        "startChar": 0,
        "endLine": 673,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "24710b1305837f7adbfcfd3d3622d4b2a1658d3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4e360250_84d7c83e",
        "filename": "src/kits/interface/Menu.cpp",
        "patchSetId": 10
      },
      "lineNbr": 710,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-02-20T11:29:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\tif (fLayout \u003d\u003d B_ITEMS_IN_COLUMN)\n```",
      "range": {
        "startLine": 710,
        "startChar": 0,
        "endLine": 710,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "24710b1305837f7adbfcfd3d3622d4b2a1658d3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4c665edd_4ef71a18",
        "filename": "src/kits/interface/Menu.cpp",
        "patchSetId": 10
      },
      "lineNbr": 712,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-02-20T11:29:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\telse if (fLayout \u003d\u003d B_ITEMS_IN_ROW || fLayout \u003d\u003d B_ITEMS_IN_MATRIX)\n```",
      "range": {
        "startLine": 712,
        "startChar": 0,
        "endLine": 712,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "24710b1305837f7adbfcfd3d3622d4b2a1658d3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b9f45690_e9997741",
        "filename": "src/kits/interface/Menu.cpp",
        "patchSetId": 10
      },
      "lineNbr": 714,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-02-20T11:29:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` is to remove this line/these lines.",
      "range": {
        "startLine": 714,
        "startChar": 0,
        "endLine": 714,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "24710b1305837f7adbfcfd3d3622d4b2a1658d3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "583fdca9_2d583dab",
        "filename": "src/kits/interface/Menu.cpp",
        "patchSetId": 10
      },
      "lineNbr": 733,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-02-20T11:29:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\tif (fLayout \u003d\u003d B_ITEMS_IN_ROW || fLayout \u003d\u003d B_ITEMS_IN_MATRIX)\n```",
      "range": {
        "startLine": 733,
        "startChar": 0,
        "endLine": 733,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "24710b1305837f7adbfcfd3d3622d4b2a1658d3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "60835777_8a09a678",
        "filename": "src/kits/interface/Menu.cpp",
        "patchSetId": 10
      },
      "lineNbr": 735,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-02-20T11:29:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\telse if (fLayout \u003d\u003d B_ITEMS_IN_COLUMN)\n```",
      "range": {
        "startLine": 735,
        "startChar": 0,
        "endLine": 735,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "24710b1305837f7adbfcfd3d3622d4b2a1658d3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "15379d04_88ae0020",
        "filename": "src/kits/interface/Menu.cpp",
        "patchSetId": 10
      },
      "lineNbr": 737,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-02-20T11:29:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` is to remove this line/these lines.",
      "range": {
        "startLine": 737,
        "startChar": 0,
        "endLine": 737,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "24710b1305837f7adbfcfd3d3622d4b2a1658d3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7e73608c_14f0eb5f",
        "filename": "src/kits/interface/Menu.cpp",
        "patchSetId": 10
      },
      "lineNbr": 798,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-02-20T11:29:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\t\t\tif (item-\u003eSubmenu()) {\n\t\t\t\t\t\t_SelectItem(item, true, false);\n\t\t\t\t\t\tBMenu* subMenu \u003d fSelected-\u003eSubmenu();\n\t\t\t\t\t\tif (subMenu !\u003d NULL \u0026\u0026 subMenu-\u003eLockLooper()) {\n\t\t\t\t\t\t\tsubMenu-\u003e_SelectNextItem(subMenu-\u003efSelected, true);\n\t\t\t\t\t\t\tsubMenu-\u003eUnlockLooper();\n\t\t\t\t\t\t\tfTrackState-\u003ecurMenu \u003d subMenu;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t_InvokeItem(item);\n\t\t\t\t\t\t_QuitTracking(false);\n```",
      "range": {
        "startLine": 792,
        "startChar": 0,
        "endLine": 798,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "24710b1305837f7adbfcfd3d3622d4b2a1658d3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e8d464d4_b1eaa356",
        "filename": "src/kits/interface/Menu.cpp",
        "patchSetId": 10
      },
      "lineNbr": 804,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-02-20T11:29:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\t\t\tbreak;\n```",
      "range": {
        "startLine": 800,
        "startChar": 0,
        "endLine": 804,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "24710b1305837f7adbfcfd3d3622d4b2a1658d3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d5725fbb_4a956dd8",
        "filename": "src/kits/interface/Menu.cpp",
        "patchSetId": 10
      },
      "lineNbr": 1490,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-02-20T11:29:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nBMenu::BMenu(BRect frame, const char* name, uint32 resizingMode, uint32 flags, menu_layout layout,\n\tbool resizeToFit)\n```",
      "range": {
        "startLine": 1489,
        "startChar": 0,
        "endLine": 1490,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "24710b1305837f7adbfcfd3d3622d4b2a1658d3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d2fa0f96_34dcd759",
        "filename": "src/kits/interface/Menu.cpp",
        "patchSetId": 10
      },
      "lineNbr": 1769,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-02-20T11:29:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nbool BMenu::_Show(bool selectFirstItem)\n```",
      "range": {
        "startLine": 1768,
        "startChar": 0,
        "endLine": 1769,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "24710b1305837f7adbfcfd3d3622d4b2a1658d3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "744c0de0_456874ec",
        "filename": "src/kits/interface/Menu.cpp",
        "patchSetId": 10
      },
      "lineNbr": 1848,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-02-20T11:29:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tBMenu* rootMenu \u003d NULL;\n```",
      "range": {
        "startLine": 1848,
        "startChar": 0,
        "endLine": 1848,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "24710b1305837f7adbfcfd3d3622d4b2a1658d3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "35d59a0a_692ea7dd",
        "filename": "src/kits/interface/Menu.cpp",
        "patchSetId": 10
      },
      "lineNbr": 2213,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-02-20T11:29:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nBMenuItem* BMenu::_Track(int32 * action, int32 start)\n```",
      "range": {
        "startLine": 2212,
        "startChar": 0,
        "endLine": 2213,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "24710b1305837f7adbfcfd3d3622d4b2a1658d3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b6539960_fc536657",
        "filename": "src/kits/interface/Menu.cpp",
        "patchSetId": 10
      },
      "lineNbr": 2222,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-02-20T11:29:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\tprintf(\"extraRect: \");\n\t\tfExtraRect-\u003ePrintToStream();\n```",
      "range": {
        "startLine": 2222,
        "startChar": 0,
        "endLine": 2222,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "24710b1305837f7adbfcfd3d3622d4b2a1658d3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "65d500a7_5262064c",
        "filename": "src/kits/interface/Menu.cpp",
        "patchSetId": 10
      },
      "lineNbr": 2244,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-02-20T11:29:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t// fTrackState-\u003enavigationAreaTimer \u003d NULL;\n```",
      "range": {
        "startLine": 2244,
        "startChar": 0,
        "endLine": 2244,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "24710b1305837f7adbfcfd3d3622d4b2a1658d3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "db65b497_eb2f30ae",
        "filename": "src/kits/interface/Menu.cpp",
        "patchSetId": 10
      },
      "lineNbr": 2253,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-02-20T11:29:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\tif (startItem \u003d\u003d NULL)\n```",
      "range": {
        "startLine": 2253,
        "startChar": 0,
        "endLine": 2253,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "24710b1305837f7adbfcfd3d3622d4b2a1658d3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7dd6401c_ad48cca5",
        "filename": "src/kits/interface/Menu.cpp",
        "patchSetId": 10
      },
      "lineNbr": 2255,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-02-20T11:29:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` is to remove this line/these lines.",
      "range": {
        "startLine": 2255,
        "startChar": 0,
        "endLine": 2255,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "24710b1305837f7adbfcfd3d3622d4b2a1658d3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bddcc8b2_9af9bec6",
        "filename": "src/kits/interface/Menu.cpp",
        "patchSetId": 10
      },
      "lineNbr": 2289,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-02-20T11:29:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t/*\n\t\t\t\tif (fTrackState-\u003enavigationAreaTimer !\u003d NULL) {\n\t\t\t\t\tdelete fTrackState-\u003enavigationAreaTimer;\n\t\t\t\t\tfTrackState-\u003enavigationAreaTimer \u003d NULL;\n\t\t\t\t}\n\t\t*/\n```",
      "range": {
        "startLine": 2284,
        "startChar": 0,
        "endLine": 2289,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "24710b1305837f7adbfcfd3d3622d4b2a1658d3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e350921e_c107d3b9",
        "filename": "src/kits/interface/Menu.cpp",
        "patchSetId": 10
      },
      "lineNbr": 2374,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-02-20T11:29:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#if SHOW_NAVIGATION_AREA\n```",
      "range": {
        "startLine": 2374,
        "startChar": 0,
        "endLine": 2374,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "24710b1305837f7adbfcfd3d3622d4b2a1658d3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7bd26eee_ca0c6f2a",
        "filename": "src/kits/interface/Menu.cpp",
        "patchSetId": 10
      },
      "lineNbr": 2381,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-02-20T11:29:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#endif\n}\n\n\nbool BMenu::_HitNavigationArea(BPoint position, BMenuItem * item)\n```",
      "range": {
        "startLine": 2376,
        "startChar": 0,
        "endLine": 2381,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "24710b1305837f7adbfcfd3d3622d4b2a1658d3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "66b0c7a7_b89fefe6",
        "filename": "src/kits/interface/Menu.cpp",
        "patchSetId": 10
      },
      "lineNbr": 2396,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-02-20T11:29:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tprintf(\"position: \");\n\tposition.PrintToStream();\n\n\tif (!navAreaRectAbove.IsValid() \u0026\u0026 !navAreaRectBelow.IsValid() \u0026\u0026 fSelected !\u003d NULL\n\t\t\u0026\u0026 fSelected-\u003eSubmenu() !\u003d NULL) {\n```",
      "range": {
        "startLine": 2394,
        "startChar": 0,
        "endLine": 2396,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "24710b1305837f7adbfcfd3d3622d4b2a1658d3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "21f2bc9d_88d7e06f",
        "filename": "src/kits/interface/Menu.cpp",
        "patchSetId": 10
      },
      "lineNbr": 2403,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-02-20T11:29:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t_UpdateNavigationArea(position, navAreaRectAbove, navAreaRectBelow);\n\t}\n\n\tprintf(\"navAreaRectAbove: \");\n\tnavAreaRectAbove.PrintToStream();\n\tprintf(\"navAreaRectBelow: \");\n\tnavAreaRectBelow.PrintToStream();\n```",
      "range": {
        "startLine": 2398,
        "startChar": 0,
        "endLine": 2403,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "24710b1305837f7adbfcfd3d3622d4b2a1658d3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c31133b2_962afc20",
        "filename": "src/kits/interface/Menu.cpp",
        "patchSetId": 10
      },
      "lineNbr": 2432,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-02-20T11:29:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\tinNavArea \u003d (p1.y - p2.y) * position.x + (p2.x - p1.x) * position.y + (p1.x - p2.x) * p1.y\n\t\t\t\t+ (p2.y - p1.y) * p1.x\n\t\t\t\u003e\u003d 0;\n```",
      "range": {
        "startLine": 2430,
        "startChar": 0,
        "endLine": 2432,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "24710b1305837f7adbfcfd3d3622d4b2a1658d3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5028055f_a14f9026",
        "filename": "src/kits/interface/Menu.cpp",
        "patchSetId": 10
      },
      "lineNbr": 2455,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-02-20T11:29:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nvoid BMenu::_UpdateStateOpenSelect(BMenuItem * item, BPoint position, BRect \u0026 navAreaRectAbove,\n\tBRect \u0026 navAreaRectBelow, bool isTimeout)\n```",
      "range": {
        "startLine": 2453,
        "startChar": 0,
        "endLine": 2455,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "24710b1305837f7adbfcfd3d3622d4b2a1658d3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9c071364_513e53aa",
        "filename": "src/kits/interface/Menu.cpp",
        "patchSetId": 10
      },
      "lineNbr": 2468,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-02-20T11:29:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\tif (fSelected \u003d\u003d NULL || (!inNavAreaRectAbove \u0026\u0026 !inNavAreaRectBelow)) {\n```",
      "range": {
        "startLine": 2467,
        "startChar": 0,
        "endLine": 2468,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "24710b1305837f7adbfcfd3d3622d4b2a1658d3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8d0c85ae_29c4c4bf",
        "filename": "src/kits/interface/Menu.cpp",
        "patchSetId": 10
      },
      "lineNbr": 2489,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-02-20T11:29:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (insert after):\n```c++\n\t\t} else if (!isLeft) {\n\t\t\tp2 \u003d navAreaRectBelow.LeftTop();\n\t\t\tp1 \u003d navAreaRectBelow.RightBottom();\n```",
      "range": {
        "startLine": 2489,
        "startChar": 0,
        "endLine": 2489,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "24710b1305837f7adbfcfd3d3622d4b2a1658d3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "82b4bce4_d75e0069",
        "filename": "src/kits/interface/Menu.cpp",
        "patchSetId": 10
      },
      "lineNbr": 2497,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-02-20T11:29:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\tp1 \u003d navAreaRectBelow.RightTop();\n\t\t\tp2 \u003d navAreaRectBelow.LeftBottom();\n```",
      "range": {
        "startLine": 2491,
        "startChar": 0,
        "endLine": 2497,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "24710b1305837f7adbfcfd3d3622d4b2a1658d3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cbb5bc8c_23f928aa",
        "filename": "src/kits/interface/Menu.cpp",
        "patchSetId": 10
      },
      "lineNbr": 2523,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-02-20T11:29:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\tfTrackState-\u003enavigationAreaTimer.SetTo(new(std::nothrow) BMessageRunner(\n\t\t\t\tBMessenger(this), BMessage(navigationAreaTimeoutMsg), kNavigationAreaTimeout, 1));\n```",
      "range": {
        "startLine": 2523,
        "startChar": 0,
        "endLine": 2523,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "24710b1305837f7adbfcfd3d3622d4b2a1658d3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c80263c7_8b2b2f7b",
        "filename": "src/kits/interface/Menu.cpp",
        "patchSetId": 10
      },
      "lineNbr": 3048,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-02-20T11:29:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#if 0\n```",
      "range": {
        "startLine": 3048,
        "startChar": 0,
        "endLine": 3048,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "24710b1305837f7adbfcfd3d3622d4b2a1658d3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "edbf27f0_0505e6ce",
        "filename": "src/kits/interface/Menu.cpp",
        "patchSetId": 10
      },
      "lineNbr": 3071,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-02-20T11:29:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#endif\n\t}\n\n\n\tbool BMenu::_OverSuper(BPoint location)\n\t{\n\t\tif (!Supermenu())\n\t\t\treturn false;\n\n\t\treturn fSuperbounds.Contains(location);\n\t}\n\n\n\tbool BMenu::_OverSubmenu(BMenuItem * item, BPoint loc)\n\t{\n\t\tif (item \u003d\u003d NULL)\n\t\t\treturn false;\n\n\t\tBMenu* subMenu \u003d item-\u003eSubmenu();\n\t\tif (subMenu \u003d\u003d NULL || subMenu-\u003eWindow() \u003d\u003d NULL)\n\t\t\treturn false;\n\n\t\t// assume that loc is in screen coordinates\n\t\tif (subMenu-\u003eWindow()-\u003eFrame().Contains(loc))\n\t\t\treturn true;\n\n\t\treturn subMenu-\u003e_OverSubmenu(subMenu-\u003efSelected, loc);\n\t}\n\n\n\tBMenuWindow* BMenu::_MenuWindow()\n\t{\n\t\tif (fCachedMenuWindow \u003d\u003d NULL) {\n\t\t\tchar windowName[64];\n\t\t\tsnprintf(windowName, 64, \"%s cached menu\", Name());\n\t\t\tfCachedMenuWindow \u003d new(nothrow) BMenuWindow(windowName);\n\t\t}\n\n\t\treturn fCachedMenuWindow;\n\t}\n\n\n\tvoid BMenu::_DeleteMenuWindow()\n\t{\n\t\tif (fCachedMenuWindow !\u003d NULL) {\n\t\t\tfCachedMenuWindow-\u003eLock();\n\t\t\tfCachedMenuWindow-\u003eQuit();\n\t\t\tfCachedMenuWindow \u003d NULL;\n\t\t}\n\t}\n\n\n\tBMenuItem* BMenu::_HitTestItems(BPoint where, BPoint slop) const\n\t{\n\t\t// TODO: Take \"slop\" into account ?\n\n\t\t// if the point doesn\u0027t lie within the menu\u0027s\n\t\t// bounds, bail out immediately\n\t\tif (!Bounds().Contains(where))\n\t\t\treturn NULL;\n\n\t\tint32 itemCount \u003d CountItems();\n\t\tfor (int32 i \u003d 0; i \u003c itemCount; i++) {\n\t\t\tBMenuItem* item \u003d ItemAt(i);\n\t\t\tif (item-\u003eFrame().Contains(where) \u0026\u0026 dynamic_cast\u003cBSeparatorItem*\u003e(item) \u003d\u003d NULL) {\n\t\t\t\treturn item;\n\t\t\t}\n\t\t}\n\n\t\treturn NULL;\n\t}\n\n\n\tBRect BMenu::_Superbounds() const\n\t{\n\t\treturn fSuperbounds;\n\t}\n\n\n\tvoid BMenu::_CacheFontInfo()\n\t{\n\t\tfont_height fh;\n\t\tGetFontHeight(\u0026fh);\n\t\tfAscent \u003d fh.ascent;\n\t\tfDescent \u003d fh.descent;\n\t\tfFontHeight \u003d ceilf(fh.ascent + fh.descent + fh.leading);\n\t}\n\n\n\tvoid BMenu::_ItemMarked(BMenuItem * item)\n\t{\n\t\tif (IsRadioMode()) {\n\t\t\tfor (int32 i \u003d 0; i \u003c CountItems(); i++) {\n\t\t\t\tif (ItemAt(i) !\u003d item)\n\t\t\t\t\tItemAt(i)-\u003eSetMarked(false);\n\t\t\t}\n\t\t}\n\n\t\tif (IsLabelFromMarked() \u0026\u0026 Superitem() !\u003d NULL)\n\t\t\tSuperitem()-\u003eSetLabel(item-\u003eLabel());\n\t}\n\n\n\tvoid BMenu::_Install(BWindow * target)\n\t{\n\t\tfor (int32 i \u003d 0; i \u003c CountItems(); i++)\n\t\t\tItemAt(i)-\u003eInstall(target);\n\t}\n\n\n\tvoid BMenu::_Uninstall()\n\t{\n\t\tfor (int32 i \u003d 0; i \u003c CountItems(); i++)\n\t\t\tItemAt(i)-\u003eUninstall();\n\t}\n\n\n\tvoid BMenu::_SelectItem(BMenuItem * item, bool showSubmenu, bool selectFirstItem)\n\t{\n\t\t// Avoid deselecting and reselecting the same item which would cause flickering.\n\t\tif (item !\u003d fSelected) {\n\t\t\tif (fSelected !\u003d NULL) {\n\t\t\t\tfSelected-\u003eSelect(false);\n\t\t\t\tBMenu* subMenu \u003d fSelected-\u003eSubmenu();\n\t\t\t\tif (subMenu !\u003d NULL \u0026\u0026 subMenu-\u003eWindow() !\u003d NULL)\n\t\t\t\t\tsubMenu-\u003e_Hide();\n\t\t\t}\n\n\t\t\tfSelected \u003d item;\n\t\t\tif (fSelected !\u003d NULL) {\n\t\t\t\tBMenuWindow* window \u003d dynamic_cast\u003cBMenuWindow*\u003e(Window());\n\t\t\t\tif (window !\u003d NULL \u0026\u0026 window-\u003eLockLooper()) {\n\t\t\t\t\tBRect frame \u003d ConvertToParent(fSelected-\u003eFrame());\n\t\t\t\t\tfloat height \u003d Parent()-\u003eBounds().Height();\n\t\t\t\t\tif (frame.top \u003c 0)\n\t\t\t\t\t\twindow-\u003eTryScrollBy(frame.top);\n\t\t\t\t\telse if (frame.bottom \u003e height)\n\t\t\t\t\t\twindow-\u003eTryScrollBy(frame.bottom - height);\n\t\t\t\t\twindow-\u003eUnlockLooper();\n\t\t\t\t}\n\t\t\t\tfSelected-\u003eSelect(true);\n\t\t\t}\n\t\t}\n\n\t\tif (fSelected !\u003d NULL \u0026\u0026 showSubmenu) {\n\t\t\tBMenu* subMenu \u003d fSelected-\u003eSubmenu();\n\t\t\tif (subMenu !\u003d NULL \u0026\u0026 subMenu-\u003eWindow() \u003d\u003d NULL) {\n\t\t\t\tif (!subMenu-\u003e_Show(selectFirstItem)) {\n\t\t\t\t\t// something went wrong, deselect the item\n\t\t\t\t\tprintf(\"_SelectItem: can\u0027t show submenu\\n\");\n\t\t\t\t\tfSelected-\u003eSelect(false);\n\t\t\t\t\tfSelected \u003d NULL;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\tbool BMenu::_SelectNextItem(BMenuItem * item, bool forward)\n\t{\n\t\tif (CountItems() \u003d\u003d 0) // cannot select next item in an empty menu\n\t\t\treturn false;\n\n\t\tBMenuItem* nextItem \u003d _NextItem(item, forward);\n\t\tif (nextItem \u003d\u003d NULL)\n\t\t\treturn false;\n\n\t\t_SelectItem(nextItem, true, false);\n\n\t\tif (LockLooper()) {\n\t\t\tbe_app-\u003eObscureCursor();\n\t\t\tUnlockLooper();\n\t\t}\n\n\t\treturn true;\n\t}\n\n\n\tBMenuItem* BMenu::_NextItem(BMenuItem * item, bool forward) const\n\t{\n\t\tconst int32 numItems \u003d fItems.CountItems();\n\t\tif (numItems \u003d\u003d 0)\n\t\t\treturn NULL;\n\n\t\tint32 index \u003d fItems.IndexOf(item);\n\t\tint32 loopCount \u003d numItems;\n\t\twhile (loopCount--) {\n\t\t\t// Cycle through menu items in the given direction...\n\t\t\tif (forward)\n\t\t\t\tindex++;\n\t\t\telse\n\t\t\t\tindex--;\n\n\t\t\t// ... wrap around...\n\t\t\tif (index \u003c 0)\n\t\t\t\tindex \u003d numItems - 1;\n\t\t\telse if (index \u003e\u003d numItems)\n\t\t\t\tindex \u003d 0;\n\n\t\t\t// ... and return the first suitable item found.\n\t\t\tBMenuItem* nextItem \u003d ItemAt(index);\n\t\t\tif (nextItem-\u003eIsEnabled())\n\t\t\t\treturn nextItem;\n\t\t}\n\n\t\t// If no other suitable item was found, return NULL.\n\t\treturn NULL;\n\t}\n\n\n\tvoid BMenu::_SetStickyMode(bool sticky)\n\t{\n\t\tif (fTrackState \u003d\u003d NULL) {\n\t\t\tfStickyMode \u003d sticky;\n\t\t\treturn;\n\t\t}\n\t\tAutoLocker\u003cBLocker\u003e locker(fTrackState-\u003elocker);\n\t\tfTrackState-\u003erootMenu-\u003efStickyMode \u003d sticky;\n\t}\n\n\n\tbool BMenu::_IsStickyMode() const\n\t{\n\t\tif (fTrackState \u003d\u003d NULL)\n\t\t\treturn fStickyMode;\n\t\tAutoLocker\u003cBLocker\u003e locker(fTrackState-\u003elocker);\n\t\treturn fTrackState-\u003erootMenu-\u003efStickyMode;\n\t}\n\n\n\tvoid BMenu::_GetShiftKey(uint32 \u0026 value) const\n\t{\n\t\t// TODO: Move into init_interface_kit().\n\t\t// Currently we can\u0027t do that, as get_modifier_key() blocks forever\n\t\t// when called on input_server initialization, since it tries\n\t\t// to send a synchronous message to itself (input_server is\n\t\t// a BApplication)\n\n\t\tif (get_modifier_key(B_LEFT_SHIFT_KEY, \u0026value) !\u003d B_OK)\n\t\t\tvalue \u003d 0x4b;\n\t}\n\n\n\tvoid BMenu::_GetControlKey(uint32 \u0026 value) const\n\t{\n\t\t// TODO: Move into init_interface_kit().\n\t\t// Currently we can\u0027t do that, as get_modifier_key() blocks forever\n\t\t// when called on input_server initialization, since it tries\n\t\t// to send a synchronous message to itself (input_server is\n\t\t// a BApplication)\n\n\t\tif (get_modifier_key(B_LEFT_CONTROL_KEY, \u0026value) !\u003d B_OK)\n\t\t\tvalue \u003d 0x5c;\n\t}\n\n\n\tvoid BMenu::_GetCommandKey(uint32 \u0026 value) const\n\t{\n\t\t// TODO: Move into init_interface_kit().\n\t\t// Currently we can\u0027t do that, as get_modifier_key() blocks forever\n\t\t// when called on input_server initialization, since it tries\n\t\t// to send a synchronous message to itself (input_server is\n\t\t// a BApplication)\n\n\t\tif (get_modifier_key(B_LEFT_COMMAND_KEY, \u0026value) !\u003d B_OK)\n\t\t\tvalue \u003d 0x66;\n\t}\n\n\n\tvoid BMenu::_GetOptionKey(uint32 \u0026 value) const\n\t{\n\t\t// TODO: Move into init_interface_kit().\n\t\t// Currently we can\u0027t do that, as get_modifier_key() blocks forever\n\t\t// when called on input_server initialization, since it tries\n\t\t// to send a synchronous message to itself (input_server is\n\t\t// a BApplication)\n\n\t\tif (get_modifier_key(B_LEFT_OPTION_KEY, \u0026value) !\u003d B_OK)\n\t\t\tvalue \u003d 0x5d;\n\t}\n\n\n\tvoid BMenu::_GetMenuKey(uint32 \u0026 value) const\n\t{\n\t\t// TODO: Move into init_interface_kit().\n\t\t// Currently we can\u0027t do that, as get_modifier_key() blocks forever\n\t\t// when called on input_server initialization, since it tries\n\t\t// to send a synchronous message to itself (input_server is\n\t\t// a BApplication)\n\n\t\tif (get_modifier_key(B_MENU_KEY, \u0026value) !\u003d B_OK)\n\t\t\tvalue \u003d 0x68;\n\t}\n\n\n\tvoid BMenu::_CalcTriggers()\n\t{\n\t\tBPrivate::TriggerList triggerList;\n\n\t\t// Gathers the existing triggers set by the user\n\t\tfor (int32 i \u003d 0; i \u003c CountItems(); i++) {\n\t\t\tchar trigger \u003d ItemAt(i)-\u003eTrigger();\n\t\t\tif (trigger !\u003d 0)\n\t\t\t\ttriggerList.AddTrigger(trigger);\n\t\t}\n\n\t\t// Set triggers for items which don\u0027t have one yet\n\t\tfor (int32 i \u003d 0; i \u003c CountItems(); i++) {\n\t\t\tBMenuItem* item \u003d ItemAt(i);\n\t\t\tif (item-\u003eTrigger() \u003d\u003d 0) {\n\t\t\t\tuint32 trigger;\n\t\t\t\tint32 index;\n\t\t\t\tif (_ChooseTrigger(item-\u003eLabel(), index, trigger, triggerList))\n\t\t\t\t\titem-\u003eSetAutomaticTrigger(index, trigger);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tbool BMenu::_ChooseTrigger(const char* title, int32\u0026 index, uint32\u0026 trigger,\n\t\tBPrivate::TriggerList\u0026 triggers)\n\t{\n\t\tif (title \u003d\u003d NULL)\n\t\t\treturn false;\n\n\t\tindex \u003d 0;\n\t\tuint32 c;\n\t\tconst char *nextCharacter, *character;\n\n\t\t// two runs: first we look out for alphanumeric ASCII characters\n\t\tnextCharacter \u003d title;\n\t\tcharacter \u003d nextCharacter;\n\t\twhile ((c \u003d BUnicodeChar::FromUTF8(\u0026nextCharacter)) !\u003d 0) {\n\t\t\tif (!(c \u003c 128 \u0026\u0026 BUnicodeChar::IsAlNum(c)) || triggers.HasTrigger(c)) {\n\t\t\t\tcharacter \u003d nextCharacter;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\ttrigger \u003d BUnicodeChar::ToLower(c);\n\t\t\tindex \u003d (int32)(character - title);\n\t\t\treturn triggers.AddTrigger(c);\n\t\t}\n\n\t\t// then, if we still haven\u0027t found something, we accept anything\n\t\tnextCharacter \u003d title;\n\t\tcharacter \u003d nextCharacter;\n\t\twhile ((c \u003d BUnicodeChar::FromUTF8(\u0026nextCharacter)) !\u003d 0) {\n\t\t\tif (BUnicodeChar::IsSpace(c) || triggers.HasTrigger(c)) {\n\t\t\t\tcharacter \u003d nextCharacter;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\ttrigger \u003d BUnicodeChar::ToLower(c);\n\t\t\tindex \u003d (int32)(character - title);\n\t\t\treturn triggers.AddTrigger(c);\n\t\t}\n\n```",
      "range": {
        "startLine": 3064,
        "startChar": 0,
        "endLine": 3071,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "24710b1305837f7adbfcfd3d3622d4b2a1658d3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "38a66e00_2ba15c75",
        "filename": "src/kits/interface/Menu.cpp",
        "patchSetId": 10
      },
      "lineNbr": 3491,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-02-20T11:29:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t}\n\n\n\tvoid BMenu::_UpdateWindowViewSize(const bool\u0026 move)\n\t{\n\t\tBMenuWindow* window \u003d dynamic_cast\u003cBMenuWindow*\u003e(Window());\n\t\tif (window \u003d\u003d NULL)\n\t\t\treturn;\n\n\t\tif (!fResizeToFit)\n\t\t\treturn;\n\n\t\tbool scroll \u003d false;\n\t\tconst BPoint screenLocation \u003d move ? ScreenLocation() : window-\u003eFrame().LeftTop();\n\t\tBRect frame \u003d _CalcFrame(screenLocation, \u0026scroll);\n\t\tResizeTo(frame.Width(), frame.Height());\n\n\t\tif (fItems.CountItems() \u003e 0) {\n\t\t\tif (!scroll) {\n\t\t\t\tif (fLayout \u003d\u003d B_ITEMS_IN_COLUMN)\n\t\t\t\t\twindow-\u003eDetachScrollers();\n\n\t\t\t\twindow-\u003eResizeTo(Bounds().Width(), Bounds().Height());\n\t\t\t} else {\n\n\t\t\t\t// Resize the window to fit the screen without overflowing the\n\t\t\t\t// frame, and attach scrollers to our cached BMenuWindow.\n\t\t\t\tBScreen screen(window);\n\t\t\t\tframe \u003d frame \u0026 screen.Frame();\n\t\t\t\twindow-\u003eResizeTo(Bounds().Width(), frame.Height());\n\n\t\t\t\t// we currently only support scrolling for B_ITEMS_IN_COLUMN\n\t\t\t\tif (fLayout \u003d\u003d B_ITEMS_IN_COLUMN) {\n\t\t\t\t\twindow-\u003eAttachScrollers();\n\n\t\t\t\t\tBMenuItem* selectedItem \u003d FindMarked();\n\t\t\t\t\tif (selectedItem !\u003d NULL) {\n\t\t\t\t\t\t// scroll to the selected item\n\t\t\t\t\t\tif (Supermenu() \u003d\u003d NULL) {\n\t\t\t\t\t\t\twindow-\u003eTryScrollTo(selectedItem-\u003eFrame().top);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tBPoint point \u003d selectedItem-\u003eFrame().LeftTop();\n\t\t\t\t\t\t\tBPoint superPoint \u003d Superitem()-\u003eFrame().LeftTop();\n\t\t\t\t\t\t\tSupermenu()-\u003eConvertToScreen(\u0026superPoint);\n\t\t\t\t\t\t\tConvertToScreen(\u0026point);\n\t\t\t\t\t\t\twindow-\u003eTryScrollTo(point.y - superPoint.y);\n\t\t\t\t\t\t}\n```",
      "range": {
        "startLine": 3073,
        "startChar": 0,
        "endLine": 3491,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "24710b1305837f7adbfcfd3d3622d4b2a1658d3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "35cfa757_4d9b4948",
        "filename": "src/kits/interface/Menu.cpp",
        "patchSetId": 10
      },
      "lineNbr": 3589,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-02-20T11:29:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t} else {\n\t\t\t_CacheFontInfo();\n\t\t\twindow-\u003eResizeTo(StringWidth(BPrivate::kEmptyMenuLabel) + fPad.left + fPad.right,\n\t\t\t\tfFontHeight + fPad.top + fPad.bottom);\n\t\t}\n\n\t\tif (move)\n\t\t\twindow-\u003eMoveTo(frame.LeftTop());\n\t}\n\n\n\tbool BMenu::_AddDynamicItems()\n\t{\n\t\t// printf(\"_AddDynamicItems(%p)\\n\", this);\n\t\tbool addAborted \u003d false;\n\t\tif (AddDynamicItem(B_INITIAL_ADD)) {\n\t\t\tBMenuItem* superItem \u003d Superitem();\n\t\t\tBMenu* superMenu \u003d Supermenu();\n\t\t\tdo {\n\t\t\t\t// printf(\"_AddDynamicItems: step\\n\");\n\t\t\t\tif (superMenu !\u003d NULL \u0026\u0026 !superMenu-\u003e_OkToProceed(superItem)) {\n\t\t\t\t\tAddDynamicItem(B_ABORT);\n\t\t\t\t\taddAborted \u003d true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} while (AddDynamicItem(B_PROCESSING));\n\t\t}\n\n\t\treturn addAborted;\n\t}\n\n\n\tbool BMenu::_OkToProceed(BMenuItem * item)\n\t{\n\t\treturn true; /* !!! */\n\t}\n\n\n\tvoid BMenu::_CallTrackingHook()\n\t{\n\t\tif (fExtraMenuData !\u003d NULL \u0026\u0026 fExtraMenuData-\u003etrackingHook !\u003d NULL\n\t\t\t\u0026\u0026 fExtraMenuData-\u003etrackingState !\u003d NULL) {\n\t\t\tif (fExtraMenuData-\u003etrackingHook(this, fExtraMenuData-\u003etrackingState))\n\t\t\t\t_QuitTracking(true);\n\t\t}\n\t}\n\n\n\tvoid BMenu::_QuitTracking(bool onlyThis)\n\t{\n\t\tif (fTrackState \u003d\u003d NULL)\n\t\t\treturn;\n\n\t\tAutoLocker\u003cBLocker\u003e locker(fTrackState-\u003elocker);\n\n\t\tif (onlyThis \u0026\u0026 Supermenu() !\u003d NULL) {\n\t\t\t_SelectItem(NULL);\n\t\t\tfTrackState-\u003ecurMenu \u003d Supermenu();\n\t\t\treturn;\n\t\t}\n\n\t\tif (!fTrackState-\u003equit) {\n\t\t\tfTrackState-\u003equit \u003d true;\n\t\t\tsend_data(fTrackState-\u003etrackThread, MENU_TRACK_CMD_DONE, NULL, 0);\n\t\t}\n\t}\n\n\n\t//\t#pragma mark - menu_info functions\n\n\n\t// TODO: Maybe the following two methods would fit better into\n\t// InterfaceDefs.cpp\n\t// In R5, they do all the work client side, we let the app_server handle the\n\t// details.\n\tstatus_t set_menu_info(menu_info * info)\n\t{\n\t\tif (!info)\n\t\t\treturn B_BAD_VALUE;\n\n\t\tBPrivate::AppServerLink link;\n\t\tlink.StartMessage(AS_SET_MENU_INFO);\n\t\tlink.Attach\u003cmenu_info\u003e(*info);\n\n\t\tstatus_t status \u003d B_ERROR;\n\t\tif (link.FlushWithReply(status) \u003d\u003d B_OK \u0026\u0026 status \u003d\u003d B_OK)\n\t\t\tBMenu::sMenuInfo \u003d *info;\n```",
      "range": {
        "startLine": 3495,
        "startChar": 0,
        "endLine": 3589,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "24710b1305837f7adbfcfd3d3622d4b2a1658d3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cebf5e7f_972d3daf",
        "filename": "src/kits/interface/MenuBar.cpp",
        "patchSetId": 10
      },
      "lineNbr": 173,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-02-20T11:29:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tif (!state)\n```",
      "range": {
        "startLine": 173,
        "startChar": 0,
        "endLine": 173,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "24710b1305837f7adbfcfd3d3622d4b2a1658d3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0ff68752_e1c2485c",
        "filename": "src/kits/interface/MenuBar.cpp",
        "patchSetId": 10
      },
      "lineNbr": 175,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-02-20T11:29:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` is to remove this line/these lines.",
      "range": {
        "startLine": 175,
        "startChar": 0,
        "endLine": 175,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "24710b1305837f7adbfcfd3d3622d4b2a1658d3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9e42972e_e2139c49",
        "filename": "src/kits/interface/MenuField.cpp",
        "patchSetId": 10
      },
      "lineNbr": 499,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-02-20T11:29:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\tfMenuTaskID\n\t\t\t\t\u003d spawn_thread((thread_func)_thread_entry, \"_m_task_\", B_NORMAL_PRIORITY, this);\n```",
      "range": {
        "startLine": 498,
        "startChar": 0,
        "endLine": 499,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "24710b1305837f7adbfcfd3d3622d4b2a1658d3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8437174b_c9ceb4f2",
        "filename": "src/kits/interface/MenuField.cpp",
        "patchSetId": 10
      },
      "lineNbr": 1093,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-02-20T11:29:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t} else {\n```",
      "range": {
        "startLine": 1093,
        "startChar": 0,
        "endLine": 1093,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "24710b1305837f7adbfcfd3d3622d4b2a1658d3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "83b7523d_33eecd3c",
        "filename": "src/kits/interface/MenuField.cpp",
        "patchSetId": 10
      },
      "lineNbr": 1094,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-02-20T11:29:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (insert after):\n```c++\n\t}\n```",
      "range": {
        "startLine": 1094,
        "startChar": 0,
        "endLine": 1094,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "24710b1305837f7adbfcfd3d3622d4b2a1658d3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "42dccd5f_c3ca2220",
        "filename": "src/kits/interface/MenuWindow.cpp",
        "patchSetId": 10
      },
      "lineNbr": 17,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-02-20T11:29:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (insert after):\n```c++\n#include \u003cMessageRunner.h\u003e\n```",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 17,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "24710b1305837f7adbfcfd3d3622d4b2a1658d3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "27e74ef5_2d8c6c2f",
        "filename": "src/kits/interface/MenuWindow.cpp",
        "patchSetId": 10
      },
      "lineNbr": 19,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-02-20T11:29:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` is to remove this line/these lines.",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 19,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "24710b1305837f7adbfcfd3d3622d4b2a1658d3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "19608e65_e3e7c19c",
        "filename": "src/kits/interface/MenuWindow.cpp",
        "patchSetId": 10
      },
      "lineNbr": 99,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-02-20T11:29:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nenum { scrollMsg \u003d \u0027scrl\u0027 };\n```",
      "range": {
        "startLine": 97,
        "startChar": 0,
        "endLine": 99,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "24710b1305837f7adbfcfd3d3622d4b2a1658d3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9ff3c205_0986efd5",
        "filename": "src/kits/interface/MenuWindow.cpp",
        "patchSetId": 10
      },
      "lineNbr": 105,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-02-20T11:29:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tBView(frame, \"menu scroller\", 0, B_WILL_DRAW | B_FRAME_EVENTS | B_FULL_UPDATE_ON_RESIZE),\n```",
      "range": {
        "startLine": 104,
        "startChar": 0,
        "endLine": 105,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "24710b1305837f7adbfcfd3d3622d4b2a1658d3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a37d51df_99ad5d87",
        "filename": "src/kits/interface/MenuWindow.cpp",
        "patchSetId": 10
      },
      "lineNbr": 137,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-02-20T11:29:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nBMenuScroller::MouseMoved(BPoint where, uint32 transit, const BMessage* dragMessage)\n```",
      "range": {
        "startLine": 136,
        "startChar": 0,
        "endLine": 137,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "24710b1305837f7adbfcfd3d3622d4b2a1658d3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "23381bcb_563f8358",
        "filename": "src/kits/interface/MenuWindow.cpp",
        "patchSetId": 10
      },
      "lineNbr": 142,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-02-20T11:29:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\tif (fEnabled)\n\t\t\t\t_StartScrolling(true);\n```",
      "range": {
        "startLine": 142,
        "startChar": 0,
        "endLine": 142,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "24710b1305837f7adbfcfd3d3622d4b2a1658d3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1bce1053_6a8ef2d9",
        "filename": "src/kits/interface/MenuWindow.cpp",
        "patchSetId": 10
      },
      "lineNbr": 146,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-02-20T11:29:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\tif (fEnabled)\n\t\t\t\t_StartScrolling(false);\n```",
      "range": {
        "startLine": 146,
        "startChar": 0,
        "endLine": 146,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "24710b1305837f7adbfcfd3d3622d4b2a1658d3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "93e5c893_7e864a34",
        "filename": "src/kits/interface/MenuWindow.cpp",
        "patchSetId": 10
      },
      "lineNbr": 174,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-02-20T11:29:16Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\tif (fScrollRunner \u003d\u003d NULL) {\n\t\t\tfScrollRunner \u003d new(std::nothrow)\n\t\t\t\tBMessageRunner(BMessenger(this), new BMessage(scrollMsg), 5000, -1);\n\t\t}\n\t} else if (fScrollRunner !\u003d NULL) {\n\t\tdelete fScrollRunner;\n\t\tfScrollRunner \u003d NULL;\n```",
      "range": {
        "startLine": 169,
        "startChar": 0,
        "endLine": 174,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "24710b1305837f7adbfcfd3d3622d4b2a1658d3f",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}