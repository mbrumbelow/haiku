{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "5c56c613_f1f51a24",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000390
      },
      "writtenOn": "2024-01-04T09:04:26Z",
      "side": 1,
      "message": "There is already a key for moving to start of line, pos1.\n\nthis should be cmd-left and cmd-right. not ctrl.",
      "revId": "b83ef2381dbc5a85c2edf5e67b1f6112fff8df3b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3804ed12_df6d4cf7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2024-01-04T10:07:11Z",
      "side": 1,
      "message": "I agree, I don\u0027t understand why control/alt here instead of command.\n\nI think BTextView shortcuts should not use the command key, they can use the control, option and shift keys instead, leaving the command key free for application shortcuts. Or indeed use the dedicated home/end keys for going at the start or end of the line.",
      "parentUuid": "5c56c613_f1f51a24",
      "revId": "b83ef2381dbc5a85c2edf5e67b1f6112fff8df3b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "55ac9743_7dcfb409",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000013
      },
      "writtenOn": "2024-01-04T15:53:55Z",
      "side": 1,
      "message": "I understand that you don\u0027t understand what I\u0027m trying to accomplish here. I\u0027ve tried my best to explain it but I must have done a bad job. This fits in to the overall Shortcut paradigm I\u0027m trying to accomplish. BTextView shortcuts must use Cmd for line-wise operations. This Web+ change however is optional. It is for internal consistency. For example Ctrl+Tab is used for switcher, the opposite of Windows\u0027s Alt+Tab. If we follow this paradigm to its logical conclusion this is where we end up. The alternative paradigm is to do Shortcuts like the Mac and reuse the same Command/Alt key for everything. That\u0027s also a valid way to go, but I\u0027m leaning towards the Windows with Ctrl and Alt swapped paradigm instead.",
      "parentUuid": "3804ed12_df6d4cf7",
      "revId": "b83ef2381dbc5a85c2edf5e67b1f6112fff8df3b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b138bd21_956efb4e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000390
      },
      "writtenOn": "2024-01-04T16:27:34Z",
      "side": 1,
      "message": "\"like windows but ctrl alt swapped\" is a terrible choice, windows is a terribly OS to copy. Ctrl-tab for switcher is a good example, is it a terribly shortcut and causes me hand pain. And the only reason it is used is \"windows doesn\u0027t use this\" It should be cmd-tab , ctrl-tab can stay as an alternative for people who grew acustom to this.\n\nShift-ctrl instead of ctrl would ve great for BTextView to indicate \"on this line\" instead if \"on this word\". I agree we should not habe this conflict in webpositive.",
      "parentUuid": "55ac9743_7dcfb409",
      "revId": "b83ef2381dbc5a85c2edf5e67b1f6112fff8df3b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2d63d5bb_c46c6290",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000013
      },
      "writtenOn": "2024-01-04T17:21:54Z",
      "side": 1,
      "message": "\"\u0027like windows but ctrl alt swapped\u0027 is a terrible choice, Windows is a terribly OS to copy.\"\n\nSays you, but there are reasons that Windows is doing the things it is doing and there are reasons that Haiku should and is mostly consistent with the expectations of Windows users once Ctrl/Alt are swapped despite your prejudice against Windows and Windows users.\n\nPreviously I would have agreed with you and been on your side of this fence in the past because I want Haiku to behave as the Mac does, but in this case, there is discrepancy between the way Mac and Windows works, and Haiku should in my opinion go down the Windows route with Ctrl/Alt swapped over the Mac route of using Cmd everywhere ignoring conflicts way of doing things.\n\nIf we were to go with the Mac route instead, we should change the Switcher shortcut from Ctrl to Alt. But there is some wisdom to the current choice that you are overlooking, and you\u0027re overlooking it in this patch as well. That wisdom has to do with meeting the expectations of Windows users at least half-way while providing a consistent Shortcut paradigm.",
      "parentUuid": "b138bd21_956efb4e",
      "revId": "b83ef2381dbc5a85c2edf5e67b1f6112fff8df3b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e52d3897_3265e43a",
        "filename": "src/apps/webpositive/BrowserWindow.cpp",
        "patchSetId": 7
      },
      "lineNbr": 491,
      "author": {
        "id": 1000012
      },
      "writtenOn": "2024-01-04T07:19:34Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tfHistoryMenu-\u003eAddItem(fBackMenuItem \u003d new BMenuItem(B_TRANSLATE(\"Back\"), new BMessage(GO_BACK),\n\t\t\t\t\t\t\t  B_LEFT_ARROW, B_NO_COMMAND_KEY | B_CONTROL_KEY));\n\tfHistoryMenu-\u003eAddItem(\n\t\tfForwardMenuItem \u003d new BMenuItem(B_TRANSLATE(\"Forward\"), new BMessage(GO_FORWARD),\n\t\t\tB_RIGHT_ARROW, B_NO_COMMAND_KEY | B_CONTROL_KEY));\n```",
      "range": {
        "startLine": 487,
        "startChar": 0,
        "endLine": 491,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "b83ef2381dbc5a85c2edf5e67b1f6112fff8df3b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8b07b227_472181c5",
        "filename": "src/kits/interface/Window.cpp",
        "patchSetId": 7
      },
      "lineNbr": 285,
      "author": {
        "id": 1000012
      },
      "writtenOn": "2024-01-04T07:19:34Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\treturn B_SHIFT_KEY | B_CONTROL_KEY | B_OPTION_KEY | B_COMMAND_KEY | B_NO_COMMAND_KEY\n\t\t| B_MENU_KEY;\n```",
      "range": {
        "startLine": 283,
        "startChar": 0,
        "endLine": 285,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "b83ef2381dbc5a85c2edf5e67b1f6112fff8df3b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}