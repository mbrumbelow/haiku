{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "74e81cc9_fb87229b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2024-12-24T16:31:01Z",
      "side": 1,
      "message": "What\u0027s the purpose of this?",
      "revId": "3fa96e35e7744fb065cb2b9bd82d9251fbf1da10",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "64db2eb8_b90cbc89",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000062
      },
      "writtenOn": "2024-12-24T18:56:41Z",
      "side": 1,
      "message": "When you instantiate the TermView as a replicant, you have little control on it, as now.\nFor example, if you exit the shell (with \"exit\"), you can\u0027t do anything anymore with it.\nYou can try with the test application in /src/tests/app/terminal_replicant.\nWith this change, you could restart the shell by sending a BMesage. I\u0027d also like to be able to execute commands by sending BMessages.\nThe goal is to test if it\u0027s possible to embed the TermView into an app (Genio, actually). Since it\u0027s a replicant, the only way is to use BMessages.\n\nI understand if you don\u0027t want to merge this, but after all, since TermView is replicanteable, it would be nice to take advantage of it.",
      "parentUuid": "74e81cc9_fb87229b",
      "revId": "3fa96e35e7744fb065cb2b9bd82d9251fbf1da10",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "22ff37c3_925d85e4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2024-12-24T19:06:29Z",
      "side": 1,
      "message": "Hmm. Maybe this should be exposed via the scripting API rather than a \"hidden\" message?",
      "parentUuid": "64db2eb8_b90cbc89",
      "revId": "3fa96e35e7744fb065cb2b9bd82d9251fbf1da10",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ae3b1108_63c20842",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000062
      },
      "writtenOn": "2024-12-24T19:36:05Z",
      "side": 1,
      "message": "Yes, that could work",
      "parentUuid": "22ff37c3_925d85e4",
      "revId": "3fa96e35e7744fb065cb2b9bd82d9251fbf1da10",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d4d6f78f_234ad615",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000062
      },
      "writtenOn": "2024-12-24T21:13:31Z",
      "side": 1,
      "message": "Let\u0027s drop this one then",
      "revId": "3fa96e35e7744fb065cb2b9bd82d9251fbf1da10",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2bbe9baf_c05a3de9",
        "filename": "src/apps/terminal/TermConst.h",
        "patchSetId": 1
      },
      "lineNbr": 96,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-12-26T00:06:31Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nstatic const uint32 MSG_RESTART_SHELL \u003d \u0027resh\u0027;\n```",
      "range": {
        "startLine": 96,
        "startChar": 0,
        "endLine": 96,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "3fa96e35e7744fb065cb2b9bd82d9251fbf1da10",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "75fc6c06_e15c3c51",
        "filename": "src/apps/terminal/TermView.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2019,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-12-26T00:06:31Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\tfShell \u003d new(std::nothrow) Shell();\n```",
      "range": {
        "startLine": 2019,
        "startChar": 0,
        "endLine": 2019,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "3fa96e35e7744fb065cb2b9bd82d9251fbf1da10",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Build-Check",
        "description": {
          "value": "Builds OK on all architectures"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "-label:Verified\u003d-1"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-label:Verified=-1"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Verified=-1"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "3fa96e35e7744fb065cb2b9bd82d9251fbf1da10",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}