{
  "comments": [
    {
      "key": {
        "uuid": "83181482_18b1b3bb",
        "filename": "src/add-ons/kernel/file_systems/xfs/Directory.cpp",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2020-06-14T13:16:17Z",
      "side": 1,
      "message": "You should not delete the inode here. You didn\u0027t create it and you don\u0027t own it.",
      "revId": "021128640da1296bed6dce046e869621818bbd69",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "39e8aace_edfa19d1",
        "filename": "src/add-ons/kernel/file_systems/xfs/Directory.cpp",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1000183
      },
      "writtenOn": "2020-06-14T19:43:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "83181482_18b1b3bb",
      "revId": "021128640da1296bed6dce046e869621818bbd69",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f9c15866_64318e20",
        "filename": "src/add-ons/kernel/file_systems/xfs/Directory.cpp",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2020-06-14T13:16:17Z",
      "side": 1,
      "message": "B_NOT_SUPPORTED sounds like a better error?",
      "revId": "021128640da1296bed6dce046e869621818bbd69",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "91f3efe2_a7b850df",
        "filename": "src/add-ons/kernel/file_systems/xfs/Directory.cpp",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1000183
      },
      "writtenOn": "2020-06-14T19:43:06Z",
      "side": 1,
      "message": "Yes, it does. Updated! :D",
      "parentUuid": "f9c15866_64318e20",
      "revId": "021128640da1296bed6dce046e869621818bbd69",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02d74b09_385be9ef",
        "filename": "src/add-ons/kernel/file_systems/xfs/Directory.cpp",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2020-06-16T06:26:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "91f3efe2_a7b850df",
      "revId": "021128640da1296bed6dce046e869621818bbd69",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "950986b6_8790a3c4",
        "filename": "src/add-ons/kernel/file_systems/xfs/Directory.h",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2020-06-14T13:16:17Z",
      "side": 1,
      "message": "80 columns",
      "revId": "021128640da1296bed6dce046e869621818bbd69",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "59be0d0f_4ab5b130",
        "filename": "src/add-ons/kernel/file_systems/xfs/Directory.h",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 1000183
      },
      "writtenOn": "2020-06-14T19:43:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "950986b6_8790a3c4",
      "revId": "021128640da1296bed6dce046e869621818bbd69",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3d8c005f_c7aa14d0",
        "filename": "src/add-ons/kernel/file_systems/xfs/Directory.h",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2020-06-14T13:16:17Z",
      "side": 1,
      "message": "space before {",
      "revId": "021128640da1296bed6dce046e869621818bbd69",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c244807c_3cf8384b",
        "filename": "src/add-ons/kernel/file_systems/xfs/Directory.h",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1000183
      },
      "writtenOn": "2020-06-14T19:43:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3d8c005f_c7aa14d0",
      "revId": "021128640da1296bed6dce046e869621818bbd69",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "094640d4_a2341940",
        "filename": "src/add-ons/kernel/file_systems/xfs/ShortDirectory.cpp",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2020-06-14T13:16:17Z",
      "side": 1,
      "message": "why not store the data as an uint64 in the header?\n\nreturn B_BENDIAN_TO_HOST_INT64(fHeader.parent); would be much simpler to handle?",
      "revId": "021128640da1296bed6dce046e869621818bbd69",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7dc44b92_7e3e01cd",
        "filename": "src/add-ons/kernel/file_systems/xfs/ShortDirectory.cpp",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1000183
      },
      "writtenOn": "2020-06-14T19:43:06Z",
      "side": 1,
      "message": "The header is defined by XFS specs. They store a uint8[8] or a uint8[4] depending on the inode number of parent. So I can\u0027t really do that. But, is there a better way to handle uint8[]?",
      "parentUuid": "094640d4_a2341940",
      "revId": "021128640da1296bed6dce046e869621818bbd69",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "54758ded_747d2964",
        "filename": "src/add-ons/kernel/file_systems/xfs/ShortDirectory.cpp",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2020-06-15T06:46:17Z",
      "side": 1,
      "message": "well you can have an uint64 or uint32 depending on the inode number just in the same way?",
      "parentUuid": "7dc44b92_7e3e01cd",
      "revId": "021128640da1296bed6dce046e869621818bbd69",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "11d4aef0_c4f301b5",
        "filename": "src/add-ons/kernel/file_systems/xfs/ShortDirectory.cpp",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1000183
      },
      "writtenOn": "2020-06-15T19:00:33Z",
      "side": 1,
      "message": "I resonate with what you\u0027re saying...But why wouldn\u0027t they do it the same way? Also, in a nutshell, would you like me to change it to uint64 and all?",
      "parentUuid": "54758ded_747d2964",
      "revId": "021128640da1296bed6dce046e869621818bbd69",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "44bb4ad6_c9480d7b",
        "filename": "src/add-ons/kernel/file_systems/xfs/ShortDirectory.cpp",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2020-06-16T06:26:07Z",
      "side": 1,
      "message": "Yes, functionally it will be the same, but you will not need the memcpy here which I think makes things more complex for no good reason.",
      "parentUuid": "11d4aef0_c4f301b5",
      "revId": "021128640da1296bed6dce046e869621818bbd69",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c8a7d920_88b25678",
        "filename": "src/add-ons/kernel/file_systems/xfs/ShortDirectory.cpp",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1000183
      },
      "writtenOn": "2020-06-24T17:50:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "44bb4ad6_c9480d7b",
      "revId": "021128640da1296bed6dce046e869621818bbd69",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bbd03c54_aabe6cf2",
        "filename": "src/add-ons/kernel/file_systems/xfs/Volume.cpp",
        "patchSetId": 1
      },
      "lineNbr": 96,
      "author": {
        "id": 1000183
      },
      "writtenOn": "2020-06-13T20:40:55Z",
      "side": 1,
      "message": "So the rootInodeNumber is 128.\nHere is how things look when xfs_shell is started and an ls is performed:\n\u0027.\u0027, \u0027..\u0027, \u0027myfs\u0027 (a few xfs_read_stat calls are made during this and myfs which xfs_shell treats as root directory. It shows correct dir size and other stats)\n\nNow when you cd into myfs (the root dir) and ls, it fails\nThe process is such. There is a xfs_lookup performed on \u0027.\u0027 and we successfully return 128 as the inode number. Then some get_vnodes are performed internally and I confirmed that they look for 128 inode# only. But then xfs_read_stat is called internally and, here is the thing, it access the privateNode associated to 128. I printed the inode number and I get garbage value. My best guess it that there is an issue with Inode publishing.\n\nPastebin for some output (it\u0027s not pretty :P): https://pastebin.com/1BUPsZu4",
      "revId": "021128640da1296bed6dce046e869621818bbd69",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c8f15e91_513f822b",
        "filename": "src/add-ons/kernel/file_systems/xfs/Volume.cpp",
        "patchSetId": 1
      },
      "lineNbr": 96,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2020-06-14T13:16:17Z",
      "side": 1,
      "message": "Apparently you are deleting the inone in DirectoryIterator destructor, which probably explains this.",
      "parentUuid": "bbd03c54_aabe6cf2",
      "revId": "021128640da1296bed6dce046e869621818bbd69",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dfb750a8_dce72d8a",
        "filename": "src/add-ons/kernel/file_systems/xfs/Volume.cpp",
        "patchSetId": 1
      },
      "lineNbr": 96,
      "author": {
        "id": 1000183
      },
      "writtenOn": "2020-06-14T19:43:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c8f15e91_513f822b",
      "revId": "021128640da1296bed6dce046e869621818bbd69",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c17961d6_f29911d9",
        "filename": "src/add-ons/kernel/file_systems/xfs/Volume.h",
        "patchSetId": 1
      },
      "lineNbr": 72,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2020-06-14T13:16:17Z",
      "side": 1,
      "message": "this line is larger than 80 columns",
      "revId": "021128640da1296bed6dce046e869621818bbd69",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1e65c7e9_59dbdb8c",
        "filename": "src/add-ons/kernel/file_systems/xfs/Volume.h",
        "patchSetId": 1
      },
      "lineNbr": 72,
      "author": {
        "id": 1000183
      },
      "writtenOn": "2020-06-14T19:43:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c17961d6_f29911d9",
      "revId": "021128640da1296bed6dce046e869621818bbd69",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04540583_142f9854",
        "filename": "src/add-ons/kernel/file_systems/xfs/kernel_interface.cpp",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2020-06-14T13:16:17Z",
      "side": 1,
      "message": "keep includes in alphabetical order",
      "revId": "021128640da1296bed6dce046e869621818bbd69",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c172b40_abb66e4c",
        "filename": "src/add-ons/kernel/file_systems/xfs/kernel_interface.cpp",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1000183
      },
      "writtenOn": "2020-06-14T19:43:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "04540583_142f9854",
      "revId": "021128640da1296bed6dce046e869621818bbd69",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b72de74e_caf15490",
        "filename": "src/add-ons/kernel/file_systems/xfs/kernel_interface.cpp",
        "patchSetId": 1
      },
      "lineNbr": 90,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2020-06-14T13:16:17Z",
      "side": 1,
      "message": "why is that commented out?",
      "revId": "021128640da1296bed6dce046e869621818bbd69",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6d8d6ba7_73acb008",
        "filename": "src/add-ons/kernel/file_systems/xfs/kernel_interface.cpp",
        "patchSetId": 1
      },
      "lineNbr": 90,
      "author": {
        "id": 1000183
      },
      "writtenOn": "2020-06-14T19:43:06Z",
      "side": 1,
      "message": "I\u0027ve moved the code elsewhere. Removed this.",
      "parentUuid": "b72de74e_caf15490",
      "revId": "021128640da1296bed6dce046e869621818bbd69",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c99e852c_ee1525b5",
        "filename": "src/add-ons/kernel/file_systems/xfs/kernel_interface.cpp",
        "patchSetId": 1
      },
      "lineNbr": 90,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2020-06-16T06:26:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6d8d6ba7_73acb008",
      "revId": "021128640da1296bed6dce046e869621818bbd69",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": false
    }
  ]
}