{
  "comments": [
    {
      "key": {
        "uuid": "b04e2fb0_087ca247",
        "filename": "src/apps/installer/WorkerThread.cpp",
        "patchSetId": 2
      },
      "lineNbr": 144,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2020-08-10T13:20:28Z",
      "side": 1,
      "message": "there\u0027s an extra space after the 0 here.\n\nAlso, I would do a startwith(const char* string, const char* prefix) function doing strncmp(prefix, string, strlen(prefix)) to avoid hardcoding the string lengths.\n\nTo be completely right the prefix should be system/settings/, otherwise if there is a system/settings_backup file or directory, it would be preserved as well.",
      "revId": "d5bce98d3bab98813f4aef297a3dd2a2c12c77a1",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7a35ba21_9c1dd215",
        "filename": "src/apps/installer/WorkerThread.cpp",
        "patchSetId": 2
      },
      "lineNbr": 144,
      "author": {
        "id": 1000012
      },
      "writtenOn": "2020-08-10T19:49:09Z",
      "side": 1,
      "message": "I understand the note about the system/settings_backup case, but we cannot rely on that, because the path contains \"system/settings\" for the settings directory itself, and obviously we don\u0027t want to clobber (\u003ddelete) that directory. \n\nSo a more correct fix would be to test:\n   S_ISDIR(statInfo.st_mode) \n   \u0026\u0026 strncmp(\"system/\", path, 7) \u003d\u003d 0\n   \u0026\u0026 strcmp(\"system/settings\", path) \u003d! 0\n   \u0026\u0026 strncmp(\"system/settings/\", path, 16) !\u003d 0\n\nso this would filter out the /system/setttings/ folder and everything underneath it, but it would delete directories like /system/settings_backup\n\nHaving said that, your comment also triggered the fact that the current logic only deletes directories; any files under /system/ will not be touched. I am thinking whether it would make sense that instead of using this clobbering logic during file copying, it is just better to as a separate step clear out the /system/ folder except for the /system/settings/.",
      "parentUuid": "b04e2fb0_087ca247",
      "revId": "d5bce98d3bab98813f4aef297a3dd2a2c12c77a1",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "564538c5_05887cfa",
        "filename": "src/apps/installer/WorkerThread.cpp",
        "patchSetId": 2
      },
      "lineNbr": 144,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2020-08-11T09:59:39Z",
      "side": 1,
      "message": "Maybe it would be better to use BPath to decide if a file/dir is inside system/settings or not.\n\nAs for the wider problem, I\u0027m still unconvinced that Installer should allow this way of update at all. It will cause other problems, for example if settings file change format, this would be normally handled by the package kit, but here we are bypassing it.\n\nAlso, any installed apps and packages will be removed, if we actually delete the directories. But we can\u0027t keep them either unless we can check thut dependencies are still ok.\n\nSo, this is not a system update. It\u0027s a wipe-everything-but-not-quite. Useful maybe as a rescue mode when your install is unbootable, but not something I\u0027d recommend as a normal way to update the system. I\u0027d rather make SoftwareUpdater able to pull updates from a dvd and apply them to the running system?\n\nSo, we need to be clear about what we\u0027re trying to do here, and what should or should not be preserved. What about non-packaged? What about things in home/config, are the settings and packages there preserved too? Why is there no special handling for these?",
      "parentUuid": "7a35ba21_9c1dd215",
      "revId": "d5bce98d3bab98813f4aef297a3dd2a2c12c77a1",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "984730ce_0d6a6ee4",
        "filename": "src/apps/installer/WorkerThread.cpp",
        "patchSetId": 2
      },
      "lineNbr": 144,
      "author": {
        "id": 1000012
      },
      "writtenOn": "2020-08-12T05:23:29Z",
      "side": 1,
      "message": "BPath is not feasible within this context, as the entry that is passed is the source entry and not the destination entry. This method has no context to decide where it is installing to.\n\nI will post a message to haiku-development to discuss the other aspects of installing.",
      "parentUuid": "564538c5_05887cfa",
      "revId": "d5bce98d3bab98813f4aef297a3dd2a2c12c77a1",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    }
  ]
}