{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "50590bcb_882fa3eb",
        "filename": "src/add-ons/kernel/drivers/input/usb_hid/QuirkyDevices.cpp",
        "patchSetId": 1
      },
      "lineNbr": 93,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-03-31T16:07:36Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nelecom_build_descriptor(HIDWriter\u0026 writer)\n```",
      "range": {
        "startLine": 93,
        "startChar": 0,
        "endLine": 93,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "837509955f2504a7cb53a1d008fe8bb2d42a35c9",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f5fb5dcf_82fea72e",
        "filename": "src/add-ons/kernel/drivers/input/usb_hid/QuirkyDevices.cpp",
        "patchSetId": 1
      },
      "lineNbr": 198,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-03-31T16:07:36Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t0x16, 0x00, 0x80, // Logical Minimum (-32768)\n\t\t0x26, 0xFF, 0x7F, // Logical Maximum (32767)\n\t\t0x81, 0x06, // Input (Data,Var,Rel,No Wrap,Linear,Preferred State,No Null Position)\n\t\t0xC0, // End Collection\n\t\t0xA1, 0x00, // Collection (Physical)\n\t\t0x95, 0x01, // Report Count (1)\n\t\t0x75, 0x08, // Report Size (8)\n\t\t0x05, 0x01, // Usage Page (Generic Desktop Ctrls)\n\t\t0x09, 0x38, // Usage (Wheel)\n\t\t0x15, 0x81, // Logical Minimum (-127)\n\t\t0x25, 0x7F, // Logical Maximum (127)\n\t\t0x81, 0x06, // Input (Data,Var,Rel,No Wrap,Linear,Preferred State,No Null Position)\n\t\t0xC0, // End Collection\n\t\t0xA1, 0x00, // Collection (Physical)\n\t\t0x95, 0x01, // Report Count (1)\n\t\t0x75, 0x08, // Report Size (8)\n\t\t0x05, 0x0C, // Usage Page (Consumer)\n\t\t0x0A, 0x38, 0x02, // Usage (AC Pan)\n\t\t0x15, 0x81, // Logical Minimum (-127)\n\t\t0x25, 0x7F, // Logical Maximum (127)\n\t\t0x81, 0x06, // Input (Data,Var,Rel,No Wrap,Linear,Preferred State,No Null Position)\n\t\t0xC0, // End Collection\n\t\t0xC0, // End Collection\n\t\t0x06, 0x01, 0xFF, // Usage Page (Vendor Defined 0xFF01)\n\t\t0x09, 0x00, // Usage (0x00)\n\t\t0xA1, 0x01, // Collection (Application)\n\t\t0x85, 0x02, // Report ID (2)\n\t\t0x09, 0x00, // Usage (0x00)\n\t\t0x15, 0x00, // Logical Minimum (0)\n\t\t0x26, 0xFF, 0x00, // Logical Maximum (255)\n\t\t0x75, 0x08, // Report Size (8)\n\t\t0x95, 0x07, // Report Count (7)\n\t\t0x81, 0x02, // Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)\n\t\t0xC0, // End Collection\n\t\t0x05, 0x0C, // Usage Page (Consumer)\n\t\t0x09, 0x01, // Usage (Consumer Control)\n\t\t0xA1, 0x01, // Collection (Application)\n\t\t0x85, 0x05, // Report ID (5)\n\t\t0x19, 0x00, // Usage Minimum (Unassigned)\n\t\t0x2A, 0x3C, 0x02, // Usage Maximum (AC Format)\n\t\t0x15, 0x00, // Logical Minimum (0)\n\t\t0x26, 0x3C, 0x02, // Logical Maximum (572)\n\t\t0x95, 0x01, // Report Count (1)\n\t\t0x75, 0x10, // Report Size (16)\n\t\t0x81, 0x00, // Input (Data,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)\n\t\t0xC0, // End Collection\n\t\t0x05, 0x01, // Usage Page (Generic Desktop Ctrls)\n\t\t0x09, 0x80, // Usage (Sys Control)\n\t\t0xA1, 0x01, // Collection (Application)\n\t\t0x85, 0x03, // Report ID (3)\n\t\t0x19, 0x81, // Usage Minimum (Sys Power Down)\n\t\t0x29, 0x83, // Usage Maximum (Sys Wake Up)\n\t\t0x15, 0x00, // Logical Minimum (0)\n\t\t0x25, 0x01, // Logical Maximum (1)\n\t\t0x75, 0x01, // Report Size (1)\n\t\t0x95, 0x03, // Report Count (3)\n\t\t0x81, 0x02, // Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)\n\t\t0x95, 0x05, // Report Count (5)\n\t\t0x81, 0x01, // Input (Const,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)\n\t\t0xC0, // End Collection\n\t\t0x06, 0xBC, 0xFF, // Usage Page (Vendor Defined 0xFFBC)\n\t\t0x09, 0x88, // Usage (0x88)\n\t\t0xA1, 0x01, // Collection (Application)\n\t\t0x85, 0x04, // Report ID (4)\n\t\t0x95, 0x01, // Report Count (1)\n\t\t0x75, 0x08, // Report Size (8)\n\t\t0x15, 0x00, // Logical Minimum (0)\n\t\t0x26, 0xFF, 0x00, // Logical Maximum (255)\n\t\t0x19, 0x00, // Usage Minimum (0x00)\n\t\t0x2A, 0xFF, 0x00, // Usage Maximum (0xFF)\n\t\t0x81, 0x00, // Input (Data,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)\n\t\t0xC0, // End Collection\n\t\t0x06, 0x02, 0xFF, // Usage Page (Vendor Defined 0xFF02)\n\t\t0x09, 0x02, // Usage (0x02)\n\t\t0xA1, 0x01, // Collection (Application)\n\t\t0x85, 0x06, // Report ID (6)\n\t\t0x09, 0x02, // Usage (0x02)\n\t\t0x15, 0x00, // Logical Minimum (0)\n\t\t0x26, 0xFF, 0x00, // Logical Maximum (255)\n\t\t0x75, 0x08, // Report Size (8)\n\t\t0x95, 0x07, // Report Count (7)\n```",
      "range": {
        "startLine": 118,
        "startChar": 0,
        "endLine": 198,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "837509955f2504a7cb53a1d008fe8bb2d42a35c9",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ab6101b2_2b5b7424",
        "filename": "src/add-ons/kernel/drivers/input/usb_hid/QuirkyDevices.cpp",
        "patchSetId": 1
      },
      "lineNbr": 201,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-03-31T16:07:36Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t// Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position, Non-volatile)\n\t\t0xC0, // End Collection\n```",
      "range": {
        "startLine": 200,
        "startChar": 0,
        "endLine": 201,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "837509955f2504a7cb53a1d008fe8bb2d42a35c9",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c0ce3184_04db3155",
        "filename": "src/add-ons/kernel/drivers/input/usb_hid/QuirkyDevices.cpp",
        "patchSetId": 1
      },
      "lineNbr": 250,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-03-31T16:07:36Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nusb_hid_quirky_device gQuirkyDevices[]\n\t\u003d {{// The Sony SIXAXIS controller (PS3) needs a GET_REPORT to become\n```",
      "range": {
        "startLine": 248,
        "startChar": 0,
        "endLine": 250,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "837509955f2504a7cb53a1d008fe8bb2d42a35c9",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ca87cb06_678bdf51",
        "filename": "src/add-ons/kernel/drivers/input/usb_hid/QuirkyDevices.cpp",
        "patchSetId": 1
      },
      "lineNbr": 274,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-03-31T16:07:36Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t   0x054c, 0x0268, USB_INTERFACE_CLASS_HID, 0, 0, sixaxis_init, sixaxis_build_descriptor},\n\n\t\t{// Elecom trackball which has 6 buttons, and includes them in the report, but not in the\n\t\t // report descriptor. Construct a report descriptor including all 6 buttons.\n\t\t\t0x056e, 0x00fd, USB_INTERFACE_CLASS_HID, 0, 0, NULL, elecom_build_descriptor},\n\n\t\t{// XBOX 360 controllers aren\u0027t really HID (marked vendor specific).\n\t\t // They therefore don\u0027t provide a HID/report descriptor either. The\n\t\t // input stream is HID-like enough though. We therefore claim support\n\t\t // and build a report descriptor of our own.\n\t\t\t0, 0, 0xff /* vendor specific */, 0x5d /* XBOX controller */, 0x01, NULL,\n\t\t\txbox360_build_descriptor}};\n```",
      "range": {
        "startLine": 255,
        "startChar": 0,
        "endLine": 274,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "837509955f2504a7cb53a1d008fe8bb2d42a35c9",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}