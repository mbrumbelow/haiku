{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "94ef5de2_649ab150",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000391
      },
      "writtenOn": "2025-04-14T10:20:22Z",
      "side": 1,
      "message": "This is the `dladdr` extension discussed earlier.\n\nTested using `dladdr` with `__builtin_return_address(0)` from a signal handler. `dli_sname` correctly indicates `commpage_signal_handler`.\n\nFor the `libunwind` use case, there is one potential scenario where this may not work: If `commpage_signal_handler` is the last registered symbol on the `commpage`, and the program somehow has a function with a return address past this symbol, `dladdr` will incorrectly identify that address as the signal handler. Luckily, `commpage_signal_handler` is currently not the last symbol; there is one more: `commpage_thread_exit`.\n\nThe other implementation of a similar hack, GDB, cannot consume this feature, since the code detecting the signal handler is usually in a different address space, or even a different host.",
      "revId": "a1a2bc281e52a809540dbc6f60d2e34f78eb89c4",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6f4c85d9_b863c74a",
        "filename": "src/system/runtime_loader/commpage.cpp",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2025-04-14T16:31:49Z",
      "side": 1,
      "message": "Unfortunately this can\u0027t be cached because it can change on forks. We could add invalidating it to the fork hook, but that sounds like more work for unnecessary work. So might as well just drop this variable.",
      "revId": "a1a2bc281e52a809540dbc6f60d2e34f78eb89c4",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e32fef03_902b21d3",
        "filename": "src/system/runtime_loader/commpage.cpp",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 1000391
      },
      "writtenOn": "2025-04-14T21:38:56Z",
      "side": 1,
      "message": "\u003e but that sounds like more work for unnecessary work.\n\nThat\u0027d put the burden on `dladdr`, which will have to make O(number of images) syscalls whenever the `commpage` is involved.",
      "parentUuid": "6f4c85d9_b863c74a",
      "revId": "a1a2bc281e52a809540dbc6f60d2e34f78eb89c4",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4c714897_5b1810e3",
        "filename": "src/system/runtime_loader/commpage.cpp",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-04-14T10:15:23Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\tstatus \u003d _kern_read_kernel_image_symbols(systemCommpageID, NULL, \u0026symbolCount, NULL,\n\t\t\t\u0026stringTableSize, NULL);\n```",
      "range": {
        "startLine": 62,
        "startChar": 0,
        "endLine": 63,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "a1a2bc281e52a809540dbc6f60d2e34f78eb89c4",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3729efc8_3567501d",
        "filename": "src/system/runtime_loader/commpage.cpp",
        "patchSetId": 3
      },
      "lineNbr": 90,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2025-04-14T16:31:49Z",
      "side": 1,
      "message": "I think it\u0027d be better to not set this at all, and leave it NULL?",
      "revId": "a1a2bc281e52a809540dbc6f60d2e34f78eb89c4",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "984d286f_ccab6aa6",
        "filename": "src/system/runtime_loader/commpage.cpp",
        "patchSetId": 3
      },
      "lineNbr": 90,
      "author": {
        "id": 1000391
      },
      "writtenOn": "2025-04-14T21:38:56Z",
      "side": 1,
      "message": "This is the pointer to the value that will be passed to `Dl_info_t::dli_fname` by `dladdr`. Neither POSIX (https://pubs.opengroup.org/onlinepubs/9799919799.2024edition/functions/dladdr.html) nor the Linux man pages say this can be `NULL` for a successful call, while POSIX also says that the path pointed to by that member may be an invalid path:\n\u003e This might no longer resolve to the file that was mapped, for example if it was a link that has subsequently been removed or renamed.",
      "parentUuid": "3729efc8_3567501d",
      "revId": "a1a2bc281e52a809540dbc6f60d2e34f78eb89c4",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3268ef6c_7040a42a",
        "filename": "src/system/runtime_loader/commpage.h",
        "patchSetId": 3
      },
      "lineNbr": 14,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-04-14T10:15:23Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nstatus_t get_nearest_commpage_symbol_at_address_locked(void* address, image_id* _imageID,\n\tchar** _imagePath, char** _imageName, char** _symbolName, int32* _type, void** _location,\n\tbool* _exactMatch);\n```",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 14,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "a1a2bc281e52a809540dbc6f60d2e34f78eb89c4",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "17ec691a_04b0ed9c",
        "filename": "src/system/runtime_loader/commpage.h",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2025-04-14T10:15:23Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#endif // COMMPAGE_H\n```",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 17,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "a1a2bc281e52a809540dbc6f60d2e34f78eb89c4",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}