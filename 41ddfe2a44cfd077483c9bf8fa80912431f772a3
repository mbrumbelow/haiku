{
  "comments": [
    {
      "key": {
        "uuid": "eb54da7b_27fa2e94",
        "filename": "src/add-ons/kernel/file_systems/btrfs/Inode.cpp",
        "patchSetId": 1
      },
      "lineNbr": 255,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2019-02-13T10:25:37Z",
      "side": 0,
      "message": "A return should be added here, otherwise one cannot \"continue\" the panic in KDL.",
      "revId": "41ddfe2a44cfd077483c9bf8fa80912431f772a3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cf6555e8_763ca362",
        "filename": "src/add-ons/kernel/file_systems/btrfs/Inode.cpp",
        "patchSetId": 1
      },
      "lineNbr": 255,
      "author": {
        "id": 1000091
      },
      "writtenOn": "2019-02-13T11:51:39Z",
      "side": 0,
      "message": "Done",
      "parentUuid": "eb54da7b_27fa2e94",
      "revId": "41ddfe2a44cfd077483c9bf8fa80912431f772a3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1e7e4ce5_a5a7a9fe",
        "filename": "src/add-ons/kernel/file_systems/btrfs/Inode.cpp",
        "patchSetId": 1
      },
      "lineNbr": 263,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2019-02-13T10:25:37Z",
      "side": 0,
      "message": "A \"return\" should be added inside the if block, see above.",
      "revId": "41ddfe2a44cfd077483c9bf8fa80912431f772a3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f2ab295_12dd8b55",
        "filename": "src/add-ons/kernel/file_systems/btrfs/Inode.cpp",
        "patchSetId": 1
      },
      "lineNbr": 263,
      "author": {
        "id": 1000091
      },
      "writtenOn": "2019-02-13T11:51:39Z",
      "side": 0,
      "message": "Done",
      "parentUuid": "1e7e4ce5_a5a7a9fe",
      "revId": "41ddfe2a44cfd077483c9bf8fa80912431f772a3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "228670bd_e5ff64e3",
        "filename": "src/add-ons/kernel/file_systems/btrfs/Inode.cpp",
        "patchSetId": 1
      },
      "lineNbr": 345,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2019-02-13T10:25:37Z",
      "side": 0,
      "message": "Here it should probably not return B_OK when continuing after the panic() in KDL, no?",
      "revId": "41ddfe2a44cfd077483c9bf8fa80912431f772a3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6483028d_eeb084db",
        "filename": "src/add-ons/kernel/file_systems/btrfs/Inode.cpp",
        "patchSetId": 1
      },
      "lineNbr": 345,
      "author": {
        "id": 1000091
      },
      "writtenOn": "2019-02-13T11:51:39Z",
      "side": 0,
      "message": "Done",
      "parentUuid": "228670bd_e5ff64e3",
      "revId": "41ddfe2a44cfd077483c9bf8fa80912431f772a3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d63fdf26_41c0e98f",
        "filename": "src/add-ons/kernel/file_systems/btrfs/Inode.cpp",
        "patchSetId": 1
      },
      "lineNbr": 346,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2019-02-13T08:09:49Z",
      "side": 0,
      "message": "This function is quite messy, it is not clear if this may also introduce new memory leaks. We need to review the code carefully and probably see if using an AutoDeleter or similar would make more sense.",
      "revId": "41ddfe2a44cfd077483c9bf8fa80912431f772a3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "40dbc644_667c5cca",
        "filename": "src/add-ons/kernel/file_systems/btrfs/Inode.cpp",
        "patchSetId": 1
      },
      "lineNbr": 346,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2019-02-13T10:25:37Z",
      "side": 0,
      "message": "It looks wrong to remove the free(). It seems all other code-paths free the extent_data before returning. So why not here?",
      "revId": "41ddfe2a44cfd077483c9bf8fa80912431f772a3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "df38e3fd_c0aaa2d7",
        "filename": "src/add-ons/kernel/file_systems/btrfs/Inode.cpp",
        "patchSetId": 1
      },
      "lineNbr": 346,
      "author": {
        "id": 1000091
      },
      "writtenOn": "2019-02-13T11:51:39Z",
      "side": 0,
      "message": "I\u0027ve added all from your notes above.\n\nThe additional return() you noted above prevents this one from double-freeing, so I was looking at the wrong end for source of the problem.",
      "parentUuid": "40dbc644_667c5cca",
      "revId": "41ddfe2a44cfd077483c9bf8fa80912431f772a3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c25b7401_27a609bd",
        "filename": "src/add-ons/kernel/file_systems/btrfs/Inode.cpp",
        "patchSetId": 1
      },
      "lineNbr": 346,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2019-02-13T12:33:08Z",
      "side": 0,
      "message": "Ah yes, that explains why the tool showed a double-free. The original programmer probably considered the panics() like calls to \"exit()\" or similar, but of course the code could in theory continue, so there was indeed a double-free without the returns.",
      "parentUuid": "df38e3fd_c0aaa2d7",
      "revId": "41ddfe2a44cfd077483c9bf8fa80912431f772a3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f6e8906e_c55ccded",
        "filename": "src/kits/tracker/NavMenu.cpp",
        "patchSetId": 1
      },
      "lineNbr": 608,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2019-02-13T08:09:49Z",
      "side": 0,
      "message": "I would like an explanation of where this is freed now. newResolvedModel goes out of scope and the pointer isn\u0027t stored anywhere else",
      "revId": "41ddfe2a44cfd077483c9bf8fa80912431f772a3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5169f731_65beff53",
        "filename": "src/kits/tracker/NavMenu.cpp",
        "patchSetId": 1
      },
      "lineNbr": 608,
      "author": {
        "id": 1000024
      },
      "writtenOn": "2019-02-13T10:25:37Z",
      "side": 0,
      "message": "Same here.",
      "parentUuid": "f6e8906e_c55ccded",
      "revId": "41ddfe2a44cfd077483c9bf8fa80912431f772a3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7329adbf_3ea822bb",
        "filename": "src/kits/tracker/NavMenu.cpp",
        "patchSetId": 1
      },
      "lineNbr": 608,
      "author": {
        "id": 1000091
      },
      "writtenOn": "2019-02-13T11:51:39Z",
      "side": 0,
      "message": "I mistakenly thought the next delete was beyond the if(result !\u003d NULL) block immediately following, and would catch both cases.",
      "parentUuid": "5169f731_65beff53",
      "revId": "41ddfe2a44cfd077483c9bf8fa80912431f772a3",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    }
  ]
}