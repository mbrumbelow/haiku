{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b885f85b_18bb4bd2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2024-07-18T04:50:56Z",
      "side": 1,
      "message": "FreeBSD implementation for reference, what I looked at while writing this: https://xref.landonf.org/source/xref/freebsd-current/libexec/rtld-elf/rtld.c#4943",
      "revId": "6bf2b8dc487c33996bea30a9b9a4c03742ec4f95",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d8a49c34_8cc5765c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2024-07-18T04:58:59Z",
      "side": 1,
      "message": "How I know the Bloom filter part is working properly: I added a dprintf() to the return after checking the Bloom filter, and it triggered over 500,000 times at the beginning of userland init alone (tens of thousands more at least after that, even on an @minimum build.)",
      "parentUuid": "b885f85b_18bb4bd2",
      "revId": "6bf2b8dc487c33996bea30a9b9a4c03742ec4f95",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f81082cf_f3e01e34",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2024-07-18T05:13:17Z",
      "side": 1,
      "message": "I tried #if 0\u0027ing out the entire method and the performance regression remains.\n\nI guess the only thing left is the double-hashing of the symbol string?",
      "revId": "6bf2b8dc487c33996bea30a9b9a4c03742ec4f95",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b1c1d61e_83644c83",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2024-07-18T05:15:43Z",
      "side": 1,
      "message": "More information also here: https://blogs.oracle.com/solaris/post/gnu-hash-elf-sections",
      "parentUuid": "d8a49c34_8cc5765c",
      "revId": "6bf2b8dc487c33996bea30a9b9a4c03742ec4f95",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4558f4f5_9059fee8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2024-07-18T05:23:29Z",
      "side": 1,
      "message": "Ah, the problem was on my end, I had configured the build differently for testing.\n\nWell, even without recompiling ICU, it\u0027s still a bit faster.",
      "parentUuid": "f81082cf_f3e01e34",
      "revId": "6bf2b8dc487c33996bea30a9b9a4c03742ec4f95",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7f09f1e9_7793bc9d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000172
      },
      "writtenOn": "2024-07-18T12:45:28Z",
      "side": 1,
      "message": "Still boots fine after building Haiku itself with GNU hash enabled.",
      "revId": "6bf2b8dc487c33996bea30a9b9a4c03742ec4f95",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b746e9a3_4e8fc764",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2024-07-18T16:11:13Z",
      "side": 1,
      "message": "I adjusted the logic here to perform the hashes on-demand and recompiled ICU. The \"./loop 1000\" test is now about 5% faster (goes from around 14.7s user to 14.0s user.) That\u0027s not a very big improvement, and I don\u0027t think that\u0027s enough to justify switching everything to gnuhash.\n\nI suppose it\u0027s possible there\u0027s potential performance improvements I\u0027m missing, though..",
      "parentUuid": "4558f4f5_9059fee8",
      "revId": "6bf2b8dc487c33996bea30a9b9a4c03742ec4f95",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "75d96cf2_5e25addd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2024-07-23T19:37:35Z",
      "side": 1,
      "message": "Even if the performance isn\u0027t great yet, should we consider merging the support for gnu hash before beta 5? Then we can start enabling it progressively at haikuports without breaking support for the latest released version of Haiku, and build some more material to experiment on optimizing it further.",
      "parentUuid": "b746e9a3_4e8fc764",
      "revId": "6bf2b8dc487c33996bea30a9b9a4c03742ec4f95",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6e0e7c1d_634e5377",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2024-07-23T19:45:33Z",
      "side": 1,
      "message": "Yes, I think we should merge this before beta5, but I need to do some refactoring first.\n\nI think what would make the most sense overall is to only enable GNU_HASH for libraries with very large numbers of symbols (e.g. LLVM.)",
      "parentUuid": "75d96cf2_5e25addd",
      "revId": "6bf2b8dc487c33996bea30a9b9a4c03742ec4f95",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae37551e_9fd0200d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2024-07-23T20:40:40Z",
      "side": 1,
      "message": "The size of the section should be smaller for libraries where there are few symbols (because you can make a hash table with a small number of buckets). So we should maybe test that as well.",
      "parentUuid": "6e0e7c1d_634e5377",
      "revId": "6bf2b8dc487c33996bea30a9b9a4c03742ec4f95",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c86fdc31_1762af6d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2024-07-23T22:19:52Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "b1c1d61e_83644c83",
      "revId": "6bf2b8dc487c33996bea30a9b9a4c03742ec4f95",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a7388b37_62d6eb95",
        "filename": "headers/os/kernel/elf.h",
        "patchSetId": 1
      },
      "lineNbr": 547,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-07-18T04:49:15Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define DT_GNU_HASH 0x6ffffef5 /* GNU-style hash table */\n```",
      "range": {
        "startLine": 547,
        "startChar": 0,
        "endLine": 547,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "6bf2b8dc487c33996bea30a9b9a4c03742ec4f95",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d26374f0_def71f12",
        "filename": "headers/private/runtime_loader/runtime_loader.h",
        "patchSetId": 1
      },
      "lineNbr": 112,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-07-18T04:49:15Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tuint32 num_needed;\n\tstruct image_t** needed;\n```",
      "range": {
        "startLine": 111,
        "startChar": 0,
        "endLine": 112,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "6bf2b8dc487c33996bea30a9b9a4c03742ec4f95",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "951a8fae_76d66eae",
        "filename": "headers/private/runtime_loader/runtime_loader.h",
        "patchSetId": 1
      },
      "lineNbr": 118,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-07-18T04:49:15Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tuint32* gnuhash;\n```",
      "range": {
        "startLine": 118,
        "startChar": 0,
        "endLine": 118,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "6bf2b8dc487c33996bea30a9b9a4c03742ec4f95",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0888b8a1_04b986e6",
        "filename": "headers/private/runtime_loader/runtime_loader.h",
        "patchSetId": 1
      },
      "lineNbr": 146,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-07-18T04:49:15Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tunsigned dso_tls_id;\n```",
      "range": {
        "startLine": 146,
        "startChar": 0,
        "endLine": 146,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "6bf2b8dc487c33996bea30a9b9a4c03742ec4f95",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "12ac2e70_823a42ba",
        "filename": "src/system/runtime_loader/elf_load_image.cpp",
        "patchSetId": 1
      },
      "lineNbr": 326,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-07-18T04:49:15Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\t\timage-\u003egnuhash \u003d (uint32*)(d[i].d_un.d_ptr + image-\u003eregions[0].delta);\n```",
      "range": {
        "startLine": 325,
        "startChar": 0,
        "endLine": 326,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "6bf2b8dc487c33996bea30a9b9a4c03742ec4f95",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}