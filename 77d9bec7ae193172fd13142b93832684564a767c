{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b2a6fbfb_b2f46341",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000670
      },
      "writtenOn": "2024-09-03T18:09:54Z",
      "side": 1,
      "message": "The new updated version greatly reduces flickering by redrawing only when either B_DOCUMENT_TEXT_COLOR or B_LINK_TEXT_COLOR changed.\n\nAnother interesting find: Removing the -\u003eDelete() call makes it redraw without flickering and without resetting the scroll position, which is great. Unfortunately it appends the whole text again at the bottom in the style of the green Haiku title text. If that could be avoided, it would be the preferred solution I guess.",
      "revId": "77d9bec7ae193172fd13142b93832684564a767c",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a7ae2b25_5cb203f4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000390
      },
      "writtenOn": "2024-09-06T09:41:51Z",
      "side": 1,
      "message": "Seems good so far. One more comprehensive solution would be remembering indeces of text runs and updating the colors afterwards... but that is probably a premature optimization.",
      "revId": "77d9bec7ae193172fd13142b93832684564a767c",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "850d44e0_81d7ae26",
        "filename": "src/apps/aboutsystem/AboutSystem.cpp",
        "patchSetId": 2
      },
      "lineNbr": 459,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-09-03T18:08:19Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (insert after):\n```c++\n\n\n```",
      "range": {
        "startLine": 459,
        "startChar": 0,
        "endLine": 459,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "77d9bec7ae193172fd13142b93832684564a767c",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "592f924b_79118109",
        "filename": "src/apps/aboutsystem/AboutSystem.cpp",
        "patchSetId": 2
      },
      "lineNbr": 466,
      "author": {
        "id": 1000390
      },
      "writtenOn": "2024-09-06T09:41:51Z",
      "side": 1,
      "message": "Isn\u0027t the logo (on the left) ontop of a panel?",
      "revId": "77d9bec7ae193172fd13142b93832684564a767c",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "932d6921_e27bfba7",
        "filename": "src/apps/aboutsystem/AboutSystem.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1408,
      "author": {
        "id": 1000390
      },
      "writtenOn": "2024-09-06T09:41:51Z",
      "side": 1,
      "message": "To me this is a bit confusing to follow from the control flow, and would be more happy if those 3 lines would be in the previous if conditionals. \n(Also, why does the _FillCreditsView function not ensure it is empty?)\n\nBut maybe this is fine. Gonna see what other devs say.",
      "revId": "77d9bec7ae193172fd13142b93832684564a767c",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e6146a6d_9abcee4b",
        "filename": "src/apps/aboutsystem/AboutSystem.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1633,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-09-03T18:08:19Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (insert after):\n```c++\n\n```",
      "range": {
        "startLine": 1633,
        "startChar": 0,
        "endLine": 1633,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "77d9bec7ae193172fd13142b93832684564a767c",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}