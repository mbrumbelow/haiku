{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "bf83faac_bfe305c0",
        "filename": "src/kits/network/libnetapi/NetworkInterface.cpp",
        "patchSetId": 5
      },
      "lineNbr": 567,
      "author": {
        "id": 1000448
      },
      "writtenOn": "2024-01-04T15:05:11Z",
      "side": 1,
      "message": "I thought that check shouldn\u0027t be done here?\n\nI think NetServer at least shouldn\u0027t fall over (or do something completely stupid) if it gets a request for IPv6 auto-config - I wouldn\u0027t really care if it then ignores that part of the request or returns an error.",
      "revId": "d0e0744701e5b33efbf54d1e00395ef430650c49",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ef40a238_2d9e041d",
        "filename": "src/kits/network/libnetapi/NetworkInterface.cpp",
        "patchSetId": 5
      },
      "lineNbr": 567,
      "author": {
        "id": 1000610
      },
      "writtenOn": "2024-01-07T16:48:02Z",
      "side": 1,
      "message": "Actually,I was thinking of the issue when many a time ipv4 and ipv6 address configuration will be clubbed in a single message and sent to _ConfigureInterface. In that case, it will not be possible to set the return status separately for ipv4 and ipv6 inside _ConfigureInterface.\n\nBut since , we are removing the auto-config button from UI for ipv6 , and so therefore an user by mistake can only auto-config ipv6 through ifconfig command, I think it\u0027s safe to perform check inside NetServer and set status specifically for ipv6 auto-config .\nI will move the check inside NetServer",
      "parentUuid": "bf83faac_bfe305c0",
      "revId": "d0e0744701e5b33efbf54d1e00395ef430650c49",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a4d768fc_763005ca",
        "filename": "src/preferences/network/InterfaceAddressView.cpp",
        "patchSetId": 5
      },
      "lineNbr": 226,
      "author": {
        "id": 1000448
      },
      "writtenOn": "2024-01-04T15:05:11Z",
      "side": 1,
      "message": "can be moved inside the `if (index \u003e\u003d 0)`",
      "revId": "d0e0744701e5b33efbf54d1e00395ef430650c49",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f17c6a56_68a8c48f",
        "filename": "src/preferences/network/InterfaceAddressView.cpp",
        "patchSetId": 5
      },
      "lineNbr": 226,
      "author": {
        "id": 1000610
      },
      "writtenOn": "2024-01-07T16:48:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a4d768fc_763005ca",
      "revId": "d0e0744701e5b33efbf54d1e00395ef430650c49",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cb48e8b9_f415ac2f",
        "filename": "src/preferences/network/InterfaceAddressView.cpp",
        "patchSetId": 5
      },
      "lineNbr": 230,
      "author": {
        "id": 1000448
      },
      "writtenOn": "2024-01-04T15:05:11Z",
      "side": 1,
      "message": "```\nstatus_t status \u003d fInterface.GetAddressAt(index, address);\n```",
      "revId": "d0e0744701e5b33efbf54d1e00395ef430650c49",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a7d2e310_c5de88b4",
        "filename": "src/preferences/network/InterfaceAddressView.cpp",
        "patchSetId": 5
      },
      "lineNbr": 230,
      "author": {
        "id": 1000610
      },
      "writtenOn": "2024-01-07T16:48:02Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "cb48e8b9_f415ac2f",
      "revId": "d0e0744701e5b33efbf54d1e00395ef430650c49",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f5e9ad13_d6471349",
        "filename": "src/preferences/network/NetworkSettingsAddOn.cpp",
        "patchSetId": 5
      },
      "lineNbr": 224,
      "author": {
        "id": 1000448
      },
      "writtenOn": "2024-01-04T15:05:11Z",
      "side": 1,
      "message": "spurious whitespace change?",
      "revId": "d0e0744701e5b33efbf54d1e00395ef430650c49",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1c51f57a_3bd16dec",
        "filename": "src/preferences/network/NetworkSettingsAddOn.cpp",
        "patchSetId": 5
      },
      "lineNbr": 224,
      "author": {
        "id": 1000610
      },
      "writtenOn": "2024-01-07T16:48:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f5e9ad13_d6471349",
      "revId": "d0e0744701e5b33efbf54d1e00395ef430650c49",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cfb65cb9_e7e7d864",
        "filename": "src/servers/net/NetServer.cpp",
        "patchSetId": 5
      },
      "lineNbr": 471,
      "author": {
        "id": 1000448
      },
      "writtenOn": "2024-01-04T15:05:11Z",
      "side": 1,
      "message": "spurious whitespace change?",
      "revId": "d0e0744701e5b33efbf54d1e00395ef430650c49",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ea7d225_f71c4ea0",
        "filename": "src/servers/net/NetServer.cpp",
        "patchSetId": 5
      },
      "lineNbr": 471,
      "author": {
        "id": 1000610
      },
      "writtenOn": "2024-01-07T16:48:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cfb65cb9_e7e7d864",
      "revId": "d0e0744701e5b33efbf54d1e00395ef430650c49",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}