{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "a2003ac1_bc155a16",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2024-08-18T12:48:58Z",
      "side": 1,
      "message": "Does this need to go through the input server? How does it work for ACPI power down? (I can look at it myself, but not right now since I\u0027m not in front of my Haiku machine. Just a note to remember to check it and see if we can keep things consistent between various type of power keys)",
      "revId": "1a8927b52ae30ca2ddb33988086b1401ed0268d1",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3ba2684f_fb62f6c0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000172
      },
      "writtenOn": "2024-08-18T12:56:43Z",
      "side": 1,
      "message": "There are USB and PS/2 keyboards with power key. It is separate thing from power button connected to keyboard and ACPI may be not aware of it. Also it is used in FDT platforms where power button is declared as generic key with specific code on top of GPIO etc..",
      "parentUuid": "a2003ac1_bc155a16",
      "revId": "1a8927b52ae30ca2ddb33988086b1401ed0268d1",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "583f5a31_2f555a73",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000172
      },
      "writtenOn": "2024-08-18T12:59:03Z",
      "side": 1,
      "message": "```\n- connected to keyboard\n+ connected to motherboard\n```",
      "parentUuid": "3ba2684f_fb62f6c0",
      "revId": "1a8927b52ae30ca2ddb33988086b1401ed0268d1",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bea2d28b_ddf22fe7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000172
      },
      "writtenOn": "2024-08-18T13:14:14Z",
      "side": 1,
      "message": "ACPI power button is currently handled by dedicated devfs node with its own protocol and it is processed by power_daemon.",
      "parentUuid": "583f5a31_2f555a73",
      "revId": "1a8927b52ae30ca2ddb33988086b1401ed0268d1",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "80dcf8d0_f23d409d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2024-08-18T18:05:14Z",
      "side": 1,
      "message": "Yes, that\u0027s what I had in mind. The advantage of using power_daemon is that you can still stop the machine cleanly if input_server is not responding.\n\nHowever, it makes no sense to do so for events that really come from a keyboard, as is the case here.\n\nIt seems virtio events are based on evdev, evdev defines a special class of events for power (EV_PWR) but nothing actually uses it: https://www.kernel.org/doc/html/latest/input/event-codes.html#ev-pwr. In my paid job I made some patches to Linux GPIO button driver to generate EV_PWR events, but it is not upstreamed. So, in the current state, FDT declared buttons will use EV_KEY event type and be handled as keyboards through input_server and we inherit Linux unfinished design. Otherwise we have to patch the device tree to generate EV_PWR event codes.\n\nWell, let\u0027s get it working this way already for now.",
      "parentUuid": "bea2d28b_ddf22fe7",
      "revId": "1a8927b52ae30ca2ddb33988086b1401ed0268d1",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b48bd725_65a21027",
        "filename": "src/add-ons/input_server/devices/keyboard/KeyboardInputDevice.cpp",
        "patchSetId": 1
      },
      "lineNbr": 356,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2024-08-18T13:18:36Z",
      "side": 1,
      "message": "IMO we should set confirm\u003dtrue here. This isn\u0027t an ACPI shutdown from the device power button being pressed; and some keyboards the POWER key is not too hard to miss-press. So having the confirmation would be good.",
      "revId": "1a8927b52ae30ca2ddb33988086b1401ed0268d1",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3482eddd_b6b45d56",
        "filename": "src/add-ons/input_server/devices/virtio/VirtioInputDevice.cpp",
        "patchSetId": 1
      },
      "lineNbr": 614,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-08-18T12:36:50Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\t\t\t\u0026\u0026 i \u003d\u003d KEY_Power) {\n```",
      "range": {
        "startLine": 614,
        "startChar": 0,
        "endLine": 614,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "1a8927b52ae30ca2ddb33988086b1401ed0268d1",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}