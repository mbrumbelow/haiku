{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "79d86761_16f4ac67",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000311
      },
      "writtenOn": "2025-02-11T05:07:12Z",
      "side": 1,
      "message": "The fact that StyledEdit didn\u0027t filtered out these has always bothered me.\n(specially since I use swapped ctrl/alt, and keep occasionally hitting the wrong one when going for a shortcut).\n\nI kinda would expect this to be the default behaviour for BTextView, to be honest, with the few apps that might actually want those chars to be allowed be the ones requesting that mode, instead of having to disable these everywhere.\n\nI might just be missing something, as usual though.\n\n---\n\nIntended to make this change after seeing John do the same for Tracker\u0027s name-edits but forgot about it till I\u0027ve read waddlesplash\u0027s January activity report :-D",
      "revId": "50e25dec02a4a2262277f7de88cbfe9b05cfea5a",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1291fcae_71c19ed1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2025-02-11T07:25:34Z",
      "side": 1,
      "message": "Doesn\u0027t this block things like tab and newline? At least these two seem useful in a text editor.",
      "parentUuid": "79d86761_16f4ac67",
      "revId": "50e25dec02a4a2262277f7de88cbfe9b05cfea5a",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "68669a1a_a23793c6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000390
      },
      "writtenOn": "2025-02-11T12:20:59Z",
      "side": 1,
      "message": "Maybe it would be good if styledEdit could show these characters properly like Koder can?",
      "revId": "50e25dec02a4a2262277f7de88cbfe9b05cfea5a",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8b192666_88317406",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000311
      },
      "writtenOn": "2025-02-11T13:58:27Z",
      "side": 1,
      "message": "Duh, it does. Sorry, should have tested it more before pushing.\n\nI don\u0027t know how Pe handles this, but I don\u0027t have \"this problem\" with it, for example. I guess I\u0027ll try to use a more specific set of chars to disable, or wait for someone to implement nephele\u0027s suggestion.",
      "parentUuid": "1291fcae_71c19ed1",
      "revId": "50e25dec02a4a2262277f7de88cbfe9b05cfea5a",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd1c02fe_9d3884bd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000311
      },
      "writtenOn": "2025-02-11T15:26:59Z",
      "side": 1,
      "message": "Seemed to me that adding TAB and ENTER back was cleaner/simpler than having an array of chars to be disallowed.\n\nSeems to work well enough, no more unwanted \"input\" for CTRL+letter combos, while still working for shortcuts like ctrl+{h,j,k,l}, etc.\n\nCTRL+e and CTRL+p did nothing on my system even before this patch.\n\nFWIW, CTRL+Backspace seems to go down one line, while trying to keep the cursor on the same column it was before. Seems like an odd shortcut to me, specially because I couldn\u0027t find its \"up\" counterpart.\n\nAnyway. Let me know if this is better. Thanks.",
      "parentUuid": "8b192666_88317406",
      "revId": "50e25dec02a4a2262277f7de88cbfe9b05cfea5a",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f9bb0fed_bd52141d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000390
      },
      "writtenOn": "2025-02-11T15:35:18Z",
      "side": 1,
      "message": "why not \nif (i !\u003d B_TAB \u0026\u0026 i \u003d! B_ENTER)\n this-\u003eDisallowChar(i);",
      "parentUuid": "fd1c02fe_9d3884bd",
      "revId": "50e25dec02a4a2262277f7de88cbfe9b05cfea5a",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cbd417e5_8c1a76d2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000311
      },
      "writtenOn": "2025-02-12T01:43:38Z",
      "side": 1,
      "message": "Just to avoid 62 comparisons that will be negative. (just kidding, the extra 4 method calls in my version are surely more expensive :-D).\n\nUpdated the commit to use your suggestion. Thanks.\n\nI always doubt if I\u0027m supposed to mark these as resolved myself if I consider them \"done\", or should leave that to the person that raised the original concerns. Leaving it as-is this time, just in case.",
      "parentUuid": "f9bb0fed_bd52141d",
      "revId": "50e25dec02a4a2262277f7de88cbfe9b05cfea5a",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8bcaf342_896cdd94",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000390
      },
      "writtenOn": "2025-02-12T09:13:01Z",
      "side": 1,
      "message": "you were the one who raised this, so you can mark it done.\n\nI think there are no formal rules, I generally leave it open to let the reviewer mark it unless I am sure, on the other hand sometimes patch authors mark my comments as done without adressing them, and thus I vote -1 quicker. really depends.\n\nAs for the comparisons, iirc gcc is supposed to unroll these loops as an optimization so there are not actually that many comparisons. You can check in compiler explorer if that is actually the case if you are worried about that.",
      "parentUuid": "cbd417e5_8c1a76d2",
      "revId": "50e25dec02a4a2262277f7de88cbfe9b05cfea5a",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}