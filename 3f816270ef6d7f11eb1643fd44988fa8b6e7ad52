{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "abafd75d_98d2385e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1000109
      },
      "writtenOn": "2024-01-06T19:06:15Z",
      "side": 1,
      "message": "I think we are super close here. And I am glad you are achieving what I wanted in my original change but in a cleaner way with less code changes.",
      "revId": "3f816270ef6d7f11eb1643fd44988fa8b6e7ad52",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "64e8b2f1_37244952",
        "filename": "src/kits/interface/Window.cpp",
        "patchSetId": 11
      },
      "lineNbr": 297,
      "author": {
        "id": 1000109
      },
      "writtenOn": "2024-01-06T19:06:15Z",
      "side": 1,
      "message": "I think you are changing how this works now with the `return 0`. To make this work like before but take into account `B_NO_COMMAND_KEY` you really just need the `if` for that and then outside the `if` it can still `return (modifiers \u0026 AllowedModifiers()) | B_COMMAND_KEY;` I don\u0027t think Gerrit does suggestions like GitHub as otherwise I would do that here ðŸ˜Š",
      "revId": "3f816270ef6d7f11eb1643fd44988fa8b6e7ad52",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d4c142a3_c9818c1d",
        "filename": "src/kits/interface/Window.cpp",
        "patchSetId": 11
      },
      "lineNbr": 297,
      "author": {
        "id": 1000013
      },
      "writtenOn": "2024-01-06T20:41:16Z",
      "side": 1,
      "message": "Oh no. My intention with this is that if you specify any modifiers like Shift or Control youâ€™ll get Command tacked on above. If not and thereâ€™s no B_NO_COMMAND_KEY it means this Shortcut has no modifiers and so we pass through the 0. Thatâ€™s the intent at least. Uh, it seems to work but maybe there is a case where this doesnâ€™t work, where you specified no modifiers but want Command tacked on?\n\nThereâ€™s definitely a case here where I want to pass 0 back because there are no modifiers on a Shortcut, and it wasnâ€™t working right unless I made this change, it was activating shortcuts with just Caps Lock turned on for bare Shortcuts, and we definitely donâ€™t want that. But maybe I could do this a little differently.",
      "parentUuid": "64e8b2f1_37244952",
      "revId": "3f816270ef6d7f11eb1643fd44988fa8b6e7ad52",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "184e78f9_3d5720ee",
        "filename": "src/kits/interface/Window.cpp",
        "patchSetId": 11
      },
      "lineNbr": 297,
      "author": {
        "id": 1000109
      },
      "writtenOn": "2024-01-06T21:08:03Z",
      "side": 1,
      "message": "Well the default case is Cmd based shortcuts, and you can definitely specify those with just the character and no modifiers, StyledEdit as one of many examples:\n\nhttps://git.haiku-os.org/haiku/tree/src/apps/stylededit/StyledEditWindow.cpp#n1180\n\nThis code will make those have no modifiers (`return 0`) which I think will break every Haiku app, since they would respond to just the plain character.\n\nI don\u0027t know what is going on with Caps Lock but I think you may need to do more testing with this change. I could be wrong though, I am just reviewing the code here and I last worked on this a long time ago.\n\nThis is just pretty important keyboard handling code and it is seemingly unusually tricky to get right.",
      "parentUuid": "d4c142a3_c9818c1d",
      "revId": "3f816270ef6d7f11eb1643fd44988fa8b6e7ad52",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff8bef41_8c6d10b4",
        "filename": "src/kits/interface/Window.cpp",
        "patchSetId": 11
      },
      "lineNbr": 297,
      "author": {
        "id": 1000109
      },
      "writtenOn": "2024-01-06T21:15:53Z",
      "side": 1,
      "message": "I think I see the issue. PrepareModifiers is used both in constructors and in _FindShortcut. For the latter you need the return 0, but for the constructors you need the behavior I talked about that always adds the Cmd modifer. This is why in my change I added an `_InitializeModifiers` for the constructors:\n\nhttps://review.haiku-os.org/c/haiku/+/2603/1/src/kits/interface/Window.cpp#247\n\nYou could either do that too or maybe modify _FindShortcut. Though that is used in several places so you would need to think about ramifications of changing it.",
      "parentUuid": "184e78f9_3d5720ee",
      "revId": "3f816270ef6d7f11eb1643fd44988fa8b6e7ad52",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2a34baf4_f933add1",
        "filename": "src/kits/interface/Window.cpp",
        "patchSetId": 11
      },
      "lineNbr": 297,
      "author": {
        "id": 1000109
      },
      "writtenOn": "2024-01-06T21:30:19Z",
      "side": 1,
      "message": "OK one more thought and I should be done for now, LOL ðŸ˜œ\n\n`B_NO_COMMAND_KEY` is special in that it is really not a modifier but a modifier \"flag\" which changes behavior. It should only change behavior in the constructors though, ensuring that B_COMMAND_KEY does not get tacked on when preparing the modifiers. All other code paths, like those dealing with the actual key presses, should not need to concern themselves with that flag.\n\nTherefore I think the cleanest thing here is to do like I did in my previous change and add an `_InitializeModifiers` which is strictly for handling the case of automatically adding `B_COMMAND_KEY` unless `B_NO_COMMAND_KEY` is present. Also `B_NO_COMMAND_KEY` should be removed from the modifier masks if it is present, not `B_COMMAND_KEY`. Though it may not hurt to also filter out `B_COMMAND_KEY`, but keep in mind that would be fixing \"developer error\" in that someone would have manually specified both `B_COMMAND_KEY` and `B_NO_COMMAND_KEY` in their code (which does not make sense.) But I think if you filter out `B_NO_COMMAND_KEY` from the modifiers when initializing you definitely won\u0027t need the line that does `modifiers | B_NO_COMMAND_KEY` in the BWindow key handling code below.\n\nAnyhow maybe try that out and do a lot of testing ðŸ˜Š",
      "parentUuid": "ff8bef41_8c6d10b4",
      "revId": "3f816270ef6d7f11eb1643fd44988fa8b6e7ad52",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}