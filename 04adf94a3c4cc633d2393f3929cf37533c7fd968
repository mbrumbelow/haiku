{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "8336e09a_d37818bb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2024-02-21T21:52:20Z",
      "side": 1,
      "message": "You confirmed that this does indeed still work?\n\nThe only potential breakage I can see is if some applications pass AT_FDCWD across ABI boundaries and compare it directly... but that seems like a very niche case.",
      "revId": "04adf94a3c4cc633d2393f3929cf37533c7fd968",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "90ab50c4_e8d8a2ac",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000172
      },
      "writtenOn": "2024-02-21T22:40:03Z",
      "side": 1,
      "message": "This is technically API and ABI break.",
      "revId": "04adf94a3c4cc633d2393f3929cf37533c7fd968",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ec7e9b49_3a972a00",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2024-02-21T22:40:52Z",
      "side": 1,
      "message": "Exactly what degree of one is unclear to me. Hence what I posted above.",
      "parentUuid": "90ab50c4_e8d8a2ac",
      "revId": "04adf94a3c4cc633d2393f3929cf37533c7fd968",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4e4a030d_5a1ced3d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000172
      },
      "writtenOn": "2024-02-21T22:42:42Z",
      "side": 1,
      "message": "\u003e The only potential breakage I can see is if some applications pass AT_FDCWD across ABI boundaries and compare it directly...\n\nThis is a valid use case of public API that should be not broken.\n\nIs it defined for BeOS?",
      "parentUuid": "8336e09a_d37818bb",
      "revId": "04adf94a3c4cc633d2393f3929cf37533c7fd968",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "416481c5_4d2a7880",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2024-02-21T22:45:49Z",
      "side": 1,
      "message": "No.",
      "parentUuid": "4e4a030d_5a1ced3d",
      "revId": "04adf94a3c4cc633d2393f3929cf37533c7fd968",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3cd43fb5_1664e05b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000643
      },
      "writtenOn": "2024-02-22T01:41:13Z",
      "side": 1,
      "message": "I don\u0027t believe it\u0027s an API break. Other popular platforms, such as macOS, define `AT_FDCWD` as -2, and it works fine.\n\nIt is technically an ABI break, when passing `AT_FDCWD` across an ABI boundary and comparing it, though the Haiku\u0027s own ABIs don\u0027t appear to be affected.",
      "parentUuid": "ec7e9b49_3a972a00",
      "revId": "04adf94a3c4cc633d2393f3929cf37533c7fd968",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "66dbe94e_81927ce9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000643
      },
      "writtenOn": "2024-02-22T01:41:13Z",
      "side": 1,
      "message": "I have looked the code here:\n\nhttps://cgit.haiku-os.org/haiku/tree/src/system/kernel/fs/vfs.cpp#n2782\nhttps://cgit.haiku-os.org/haiku/tree/src/tools/fs_shell/vfs.cpp#n1635\n\nto confirm that it\u0027s testing for fd \u003c 0, and not comparing with AT_FDCWD.\n\nI\u0027ve also grepped for `AT_FDCWD` in the entire haiku tree. There are some comparisons like this:\n\nhttps://cgit.haiku-os.org/haiku/tree/src/build/libroot/fs.cpp#n1216\n\nhowever they\u0027re all preceded by `fd \u003e\u003d 0 \u0026\u0026` so they won\u0027t be affected by this patch. And, there are also some comparisons here:\n\nhttps://cgit.haiku-os.org/haiku/tree/src/build/libroot/fs_darwin.cpp#n118\n\nhowever this code appears to be only used on Darwin hosts.",
      "parentUuid": "416481c5_4d2a7880",
      "revId": "04adf94a3c4cc633d2393f3929cf37533c7fd968",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ed32e6e6_cf5716bb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2024-02-22T12:08:53Z",
      "side": 1,
      "message": "I think the ABI breakage is small enough that this should be fine?",
      "revId": "04adf94a3c4cc633d2393f3929cf37533c7fd968",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5f625f99_61b3a5ab",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000016
      },
      "writtenOn": "2024-02-24T11:53:35Z",
      "side": 1,
      "message": "I think it makes sense to change it to -2 if just to catch errors like:\nfd \u003d open(\"This will fail!\")\nfstatat(fd, ...);",
      "revId": "04adf94a3c4cc633d2393f3929cf37533c7fd968",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b527a0e7_7e0f1c3f",
        "filename": "headers/posix/fcntl.h",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-02-22T06:42:18Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n#define AT_FDCWD (-2) /* CWD FD for the *at() functions */\n```",
      "range": {
        "startLine": 62,
        "startChar": 0,
        "endLine": 62,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "04adf94a3c4cc633d2393f3929cf37533c7fd968",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}