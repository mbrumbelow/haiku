{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b29fb7cf_93e7defa",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000172
      },
      "writtenOn": "2023-05-09T21:31:59Z",
      "side": 1,
      "message": "Haiku is supposed to be BeOS compatible isn\u0027t it? Also it become more hard to understand this commented out things.",
      "revId": "c8662863aca481c4d00e559e234db548a1479ca0",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e1df53fa_f8997fe8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2023-05-09T21:34:18Z",
      "side": 1,
      "message": "I think even R5 did not implement TCQUERYCONNECTED based on a comment in the old TTYl ayer.\n\nIf Haiku has gotten by this long without implementing these, I don\u0027t think we need to worry about them. We can uncomment them and implement them in the future if we really must.",
      "parentUuid": "b29fb7cf_93e7defa",
      "revId": "c8662863aca481c4d00e559e234db548a1479ca0",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9dcdc252_9fb95887",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000172
      },
      "writtenOn": "2023-05-09T21:37:02Z",
      "side": 1,
      "message": "Let them stay as it, it do not harm? It seems ID space is not very limited and it is possible to add new commands to the end if needed. It will be nice to document what is actually implemented.",
      "revId": "c8662863aca481c4d00e559e234db548a1479ca0",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "97a237a4_47283028",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2023-05-09T21:42:35Z",
      "side": 1,
      "message": "I haven\u0027t reorganized the ID space. But we don\u0027t need to add things to the global namespace that will just return errors if you try to use them, either.",
      "parentUuid": "9dcdc252_9fb95887",
      "revId": "c8662863aca481c4d00e559e234db548a1479ca0",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "938412ac_98ab8a49",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000311
      },
      "writtenOn": "2023-05-10T00:07:16Z",
      "side": 1,
      "message": "If this gets merged, https://cgit.haiku-os.org/haiku/tree/src/bin/debug/strace/ioctl.cpp#n119 should be adjusted to avoid breaking strace build, right?",
      "revId": "c8662863aca481c4d00e559e234db548a1479ca0",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "99960912_740e42b6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2023-05-10T00:11:33Z",
      "side": 1,
      "message": "Ah, yes, right.",
      "parentUuid": "938412ac_98ab8a49",
      "revId": "c8662863aca481c4d00e559e234db548a1479ca0",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c0ca3961_027305c9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000172
      },
      "writtenOn": "2023-05-10T02:54:33Z",
      "side": 1,
      "message": "Yet one reason to keep this definitions. It is useful for running strace to existing binaries that may use obsolete ioctl commands. It would help troubleshooting problems with using this obsolete commands.",
      "parentUuid": "99960912_740e42b6",
      "revId": "c8662863aca481c4d00e559e234db548a1479ca0",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "360b0764_149cc973",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000013
      },
      "writtenOn": "2023-05-10T15:05:54Z",
      "side": 1,
      "message": "Isn\u0027t the point of these definitions to clutter up the global namespace for compatibility with BeOS apps that might possibly be using these?",
      "revId": "c8662863aca481c4d00e559e234db548a1479ca0",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f1b0e687_f7610e2a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2023-05-10T15:38:05Z",
      "side": 1,
      "message": "We\u0027ve broken source compatibility with BeOS long ago, this would just be one more break.\n\nAnd we don\u0027t actually implement these constants anyway. We could well do so, but leave them undefined in headers to force any code still using them to upgrade.",
      "parentUuid": "360b0764_149cc973",
      "revId": "c8662863aca481c4d00e559e234db548a1479ca0",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6459ac1f_8210985f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000013
      },
      "writtenOn": "2023-05-10T15:44:54Z",
      "side": 1,
      "message": "I say leave these defined in the header as before for compat anyway.",
      "parentUuid": "f1b0e687_f7610e2a",
      "revId": "c8662863aca481c4d00e559e234db548a1479ca0",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ff477e3d_80299955",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000013
      },
      "writtenOn": "2023-05-10T15:44:54Z",
      "side": 1,
      "message": "https://github.com/jscipione/r5headers/blob/master/headers/posix/termios.h TCQUERYCONNECTED is defined in BeOS R5.",
      "parentUuid": "e1df53fa_f8997fe8",
      "revId": "c8662863aca481c4d00e559e234db548a1479ca0",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6a65625e_f3bb24c6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000013
      },
      "writtenOn": "2023-05-10T15:47:34Z",
      "side": 1,
      "message": "... implemented is a different story, I don\u0027t care about that part though. just keep the definitions for apps that look for them, but there\u0027s no reason to implement them.",
      "parentUuid": "ff477e3d_80299955",
      "revId": "c8662863aca481c4d00e559e234db548a1479ca0",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7ed02c8c_ce065969",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2023-05-10T16:40:51Z",
      "side": 1,
      "message": "A comment in our old TTY driver indicated at least TCQUERYCONNECTED was not implemented on R5: https://github.com/haiku/haiku/commit/bbb4db92761f60c84fc3675bd9e5dc70afb50b6e#diff-8ee0a165387a6605c4e424225a0da69a7b0b55c45ad9cc955e2e94404fd20728L1830",
      "parentUuid": "6a65625e_f3bb24c6",
      "revId": "c8662863aca481c4d00e559e234db548a1479ca0",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da6f053b_1bb1eef9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2023-05-18T11:50:29Z",
      "side": 1,
      "message": "I think defining them but not implementing them is the worst option.\n\nApplications will compile, but they will not work, leading to a lot of head scratching and confusion for app developers.\n\nIt is better to either implement these things, or remove them from public headers to make it clear that they are not available.\n\nNote that existing (already compiled) BeOS apps will still run as before (well, as badly as before, since we don\u0027t implement the corresponding functions) even if this is removed from the .h file.\n\nAlso:\n\n- TCVTIME: no documentation found on the internet and no current usage (the only places where it was mentionned is basically translations of this header file into Python and Rust)\n- TCQUERYCONNECTED: same as above\n- TCGETBITS: in addition to the above, a mention in \"Porting BeOS applications\" that mentions it is similar to BSD TIOCMGET (which we implement)\n- TCWAITEVENT: the only usage I can find is https://github.com/golded-plus/golded-plus/blob/054ac1fa62909108776f3dbe79f4f2c13098abdc/goldlib/gall/gkbdunix.cpp#L226 which had already deprecated it in favor of waiton() (apparently a select() equivalent from BONE) and can use select() on all other platforms.\n\nSo, we have two cases here:\n\n- Things that are not documented and also not used by any application: we are never going to implement these if we don\u0027t know what they do\n- Things for which there is already a replacement: the only affected app I could find will already compile just fine on BeOS using that replacement. And, we are in fact compatible with BONE, not plain BeOS R5, which means we would be using the version of that app that already didn\u0027t use TCWAITEVENT anyways.",
      "parentUuid": "6459ac1f_8210985f",
      "revId": "c8662863aca481c4d00e559e234db548a1479ca0",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}