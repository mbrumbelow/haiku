{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "df073355_9bcc1c73",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000311
      },
      "writtenOn": "2024-12-22T19:35:50Z",
      "side": 1,
      "message": "Is there a list of cards were bios_patching have been tested? (do we need one?)\n\nJust in case:\n\n- AMD Radeon 3000 IGP (vendor 0x1002, device 0x9616). Patch is not applied.\n- nVidia GT-1030 (vendor 0x10DE, device 0x1D01). Patch is applied, but all the newly introduced resolutions end up in garbled output (needing to reboot to recover).",
      "revId": "eda03724baf232a1110a73429aa58afbe7d681ec",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0e965491_40eff532",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2024-12-23T09:29:18Z",
      "side": 1,
      "message": "In theory, it\u0027s possible to patch any card, but someone has to dig into the BIOS and identify all the places that need patching.\n\nI guess the best way to handle this is to open tickets for all cards where it doesn\u0027t work, and attach BIOS dumps? But I don\u0027t know if someone will be interested in figuring it out for each of them.\n\nMaybe I can add a list of cards where enabling the patching is not allowed at all? But maybe it\u0027s better to let people try it and see for themselves?",
      "parentUuid": "df073355_9bcc1c73",
      "revId": "eda03724baf232a1110a73429aa58afbe7d681ec",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1b98d639_0c90ba0f",
        "filename": "src/add-ons/kernel/drivers/graphics/vesa/vesa.cpp",
        "patchSetId": 2
      },
      "lineNbr": 437,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-12-21T08:40:01Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t{0x8086, 0x0046},\n\t\t{0x8086, 0x0be1},\n```",
      "range": {
        "startLine": 436,
        "startChar": 0,
        "endLine": 437,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "eda03724baf232a1110a73429aa58afbe7d681ec",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Build-Check",
        "description": {
          "value": "Builds OK on all architectures"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "-label:Verified\u003d-1"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-label:Verified=-1"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Verified=-1"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "eda03724baf232a1110a73429aa58afbe7d681ec",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}