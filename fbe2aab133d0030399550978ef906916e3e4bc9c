{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "8d4fd012_eea386ac",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2024-05-24T17:16:45Z",
      "side": 1,
      "message": "the scheduler looks sensitive when assigning some affinity, especially because it tries to follow the topology. So each time a choice is made, the thread affinity should be checked. I didn\u0027t find a better way to make this working.",
      "revId": "fbe2aab133d0030399550978ef906916e3e4bc9c",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "82be014a_21c92328",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2024-05-24T17:24:16Z",
      "side": 1,
      "message": "Hmm. Could we refactor things a bit to consolidate the code and thus only perform the check in one place?",
      "parentUuid": "8d4fd012_eea386ac",
      "revId": "fbe2aab133d0030399550978ef906916e3e4bc9c",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3279d528_ab069513",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2024-05-24T17:24:16Z",
      "side": 1,
      "message": "Comment removed by: waddlesplash; Reason: dupe",
      "revId": "fbe2aab133d0030399550978ef906916e3e4bc9c",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d2b56cad_62da2a4c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2024-05-24T18:53:57Z",
      "side": 1,
      "message": "I had the idea, a function could be passed to MinMaxHeap::PeekMinimum/PeekMaximum, instead of an index. Would need to pass the CPUSet to match.",
      "parentUuid": "82be014a_21c92328",
      "revId": "fbe2aab133d0030399550978ef906916e3e4bc9c",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0ec41057_d21e1fd0",
        "filename": "headers/private/kernel/util/Heap.h",
        "patchSetId": 2
      },
      "lineNbr": 189,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-05-24T15:15:59Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (insert after):\n```c++\n\n\n```",
      "range": {
        "startLine": 189,
        "startChar": 0,
        "endLine": 189,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "fbe2aab133d0030399550978ef906916e3e4bc9c",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ef1defb4_bfc026f5",
        "filename": "headers/private/kernel/util/MinMaxHeap.h",
        "patchSetId": 2
      },
      "lineNbr": 191,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-05-24T15:15:59Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (insert after):\n```c++\n\n\n```",
      "range": {
        "startLine": 191,
        "startChar": 0,
        "endLine": 191,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "fbe2aab133d0030399550978ef906916e3e4bc9c",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1d5ea4e7_6c9c779d",
        "filename": "headers/private/kernel/util/MinMaxHeap.h",
        "patchSetId": 2
      },
      "lineNbr": 197,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-05-24T15:15:59Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\telse if (index - fMinLastElement \u003c fMaxLastElement)\n```",
      "range": {
        "startLine": 197,
        "startChar": 0,
        "endLine": 197,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "fbe2aab133d0030399550978ef906916e3e4bc9c",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8d3cbf00_528aae0d",
        "filename": "headers/private/kernel/util/MinMaxHeap.h",
        "patchSetId": 2
      },
      "lineNbr": 199,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-05-24T15:15:59Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` is to remove this line/these lines.",
      "range": {
        "startLine": 199,
        "startChar": 0,
        "endLine": 199,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "fbe2aab133d0030399550978ef906916e3e4bc9c",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d1988566_8ff5004f",
        "filename": "headers/private/kernel/util/MinMaxHeap.h",
        "patchSetId": 2
      },
      "lineNbr": 205,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-05-24T15:15:59Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (insert after):\n```c++\n\n\n```",
      "range": {
        "startLine": 205,
        "startChar": 0,
        "endLine": 205,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "fbe2aab133d0030399550978ef906916e3e4bc9c",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0db2043d_c343fa3a",
        "filename": "headers/private/kernel/util/MinMaxHeap.h",
        "patchSetId": 2
      },
      "lineNbr": 211,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-05-24T15:15:59Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\telse if (index - fMaxLastElement \u003c fMinLastElement)\n```",
      "range": {
        "startLine": 211,
        "startChar": 0,
        "endLine": 211,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "fbe2aab133d0030399550978ef906916e3e4bc9c",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d1579ed4_6a384e4d",
        "filename": "headers/private/kernel/util/MinMaxHeap.h",
        "patchSetId": 2
      },
      "lineNbr": 213,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-05-24T15:15:59Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` is to remove this line/these lines.",
      "range": {
        "startLine": 213,
        "startChar": 0,
        "endLine": 213,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "fbe2aab133d0030399550978ef906916e3e4bc9c",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2965b67c_f4890ee0",
        "filename": "headers/private/system/syscalls.h",
        "patchSetId": 2
      },
      "lineNbr": 201,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-05-24T15:15:59Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\nextern status_t _kern_get_thread_affinity(thread_id id, void* userMask, size_t size);\nextern status_t _kern_set_thread_affinity(thread_id id, const void* userMask, size_t size);\n```",
      "range": {
        "startLine": 200,
        "startChar": 0,
        "endLine": 201,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "fbe2aab133d0030399550978ef906916e3e4bc9c",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aed06b08_fa619bc2",
        "filename": "src/system/kernel/scheduler/scheduler.cpp",
        "patchSetId": 2
      },
      "lineNbr": 120,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-05-24T15:15:59Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tTRACE(\"enqueueing thread %\" B_PRId32 \" with priority %\" B_PRId32 \" on CPU %\" B_PRId32\n\t\t  \" (core %\" B_PRId32 \")\\n\",\n```",
      "range": {
        "startLine": 120,
        "startChar": 0,
        "endLine": 120,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "fbe2aab133d0030399550978ef906916e3e4bc9c",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0b3e2206_3224acea",
        "filename": "src/system/kernel/scheduler/scheduler.cpp",
        "patchSetId": 2
      },
      "lineNbr": 183,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-05-24T15:15:59Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\tTRACE(\"changing thread %\" B_PRId32 \" priority to %\" B_PRId32 \" (old: %\" B_PRId32\n\t\t  \", effective: %\" B_PRId32 \")\\n\",\n```",
      "range": {
        "startLine": 183,
        "startChar": 0,
        "endLine": 183,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "fbe2aab133d0030399550978ef906916e3e4bc9c",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "defc397c_d08165f4",
        "filename": "src/system/kernel/thread.cpp",
        "patchSetId": 2
      },
      "lineNbr": 3959,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-05-24T15:15:59Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (insert after):\n```c++\n\n```",
      "range": {
        "startLine": 3959,
        "startChar": 0,
        "endLine": 3959,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "fbe2aab133d0030399550978ef906916e3e4bc9c",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}