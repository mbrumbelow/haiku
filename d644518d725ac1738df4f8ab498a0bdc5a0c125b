{
  "comments": [
    {
      "key": {
        "uuid": "d306b644_45811936",
        "filename": "src/system/kernel/fs/fd.cpp",
        "patchSetId": 3
      },
      "lineNbr": 734,
      "author": {
        "id": 1000016
      },
      "writtenOn": "2020-10-03T17:39:59Z",
      "side": 1,
      "message": "Now you get a crash when \"buffer \u003d\u003d NULL\"...\n\nI think this has to be a bit more involved:\nif (length \u003e 0 \u0026\u0026 !IS_USER_ADDRESS(buffer))\n\treturn B_BAD_ADDRESS;\n\nAnd a bit further down, maybe even around line 744:\nif (length \u003d\u003d 0)\n\treturn 0;",
      "revId": "d644518d725ac1738df4f8ab498a0bdc5a0c125b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e349196a_d03cdd42",
        "filename": "src/system/kernel/fs/fd.cpp",
        "patchSetId": 3
      },
      "lineNbr": 734,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-10-04T01:54:00Z",
      "side": 1,
      "message": "I thought about this, but would *not* calling fd_write/fd_read result in unexpected behavior as well?\n\ngolang seems to expect this to \"create an empty file\"",
      "parentUuid": "d306b644_45811936",
      "revId": "d644518d725ac1738df4f8ab498a0bdc5a0c125b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "674b029a_4419b9f4",
        "filename": "src/system/kernel/fs/fd.cpp",
        "patchSetId": 3
      },
      "lineNbr": 734,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2020-10-04T08:24:18Z",
      "side": 1,
      "message": "The file will be created when it calls open(), there is no need to write anything to it.",
      "parentUuid": "e349196a_d03cdd42",
      "revId": "d644518d725ac1738df4f8ab498a0bdc5a0c125b",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5",
      "unresolved": true
    }
  ]
}