{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "7e4b34af_cf10980f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000555
      },
      "writtenOn": "2023-07-03T22:29:59Z",
      "side": 1,
      "message": "I have not been able to test the actual change beyond verify that it builds. I am not experience enough to build the haiku.hpkg file myself.",
      "revId": "8d164ef2bebe7438fb914c894fbc008d9faad8cd",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ac75ce9c_0f8d5030",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2023-07-03T22:32:30Z",
      "side": 1,
      "message": "What problem does this potentially solve?\n\nYou can build haiku.hpkg like this:\n```\njam -q -jN @nightly-raw haiku.hpkg\n```\nthen use ```pkgman install path/to/built/haiku.hpkg``` and reboot.",
      "parentUuid": "7e4b34af_cf10980f",
      "revId": "8d164ef2bebe7438fb914c894fbc008d9faad8cd",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "798708a8_03575209",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000555
      },
      "writtenOn": "2023-07-03T22:34:04Z",
      "side": 1,
      "message": "My ACM serial device do not function as expected under Haiku, but works way better if I write very small chunks of data and sleep between each write.",
      "revId": "8d164ef2bebe7438fb914c894fbc008d9faad8cd",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8357faae_404a4a24",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2023-07-03T22:41:01Z",
      "side": 1,
      "message": "OK. Well, please build the full package and see what happens, I suppose.",
      "parentUuid": "798708a8_03575209",
      "revId": "8d164ef2bebe7438fb914c894fbc008d9faad8cd",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "707bfe4b_84d39813",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000555
      },
      "writtenOn": "2023-07-03T22:46:56Z",
      "side": 1,
      "message": "Device announces maxPacketSize 64, while ACM driver would default to 512 in the class initializer before this change. Same code is already present in the KLSI.cpp\n\nIt appears the current master does not build unrelated to my change, linker error in boot_libroot_bios_ia32.o in function vsnprintf to _umoddi3 and _udivmoddi4",
      "parentUuid": "8357faae_404a4a24",
      "revId": "8d164ef2bebe7438fb914c894fbc008d9faad8cd",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b293f38_b82d563b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2023-07-03T22:48:45Z",
      "side": 1,
      "message": "That would be because you are on x86_64 trying to build a 32-bit bootloader. Either you need the cross-tools for this; or, more easily, you can just comment out line 21 of `build/jam/packages/Haiku` (https://github.com/haiku/haiku/blob/master/build/jam/packages/Haiku#L21)",
      "parentUuid": "707bfe4b_84d39813",
      "revId": "8d164ef2bebe7438fb914c894fbc008d9faad8cd",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c9832f0e_b8bfcf68",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2023-07-04T04:11:13Z",
      "side": 1,
      "message": "You can test using built packages to be found here:\nhttps://haiku.movingborders.es/testbuild/Ic93d420012d757088b20936e6c8d942ccbc0e5bf/1/hrev57130/x86_64/",
      "revId": "8d164ef2bebe7438fb914c894fbc008d9faad8cd",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0172fe0b_be75c5f8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2023-07-04T16:42:51Z",
      "side": 1,
      "message": "It makes sense to not call QueueBulk with a size larger than what the descriptor advertises. Especially for ACM where there are many implementations, all we need is one of them not handling unexpected requests.\n\nThis is what will happen without this patch.",
      "revId": "8d164ef2bebe7438fb914c894fbc008d9faad8cd",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}