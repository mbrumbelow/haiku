{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "0cd98688_003ab905",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000311
      },
      "writtenOn": "2023-03-04T18:03:12Z",
      "side": 1,
      "message": "The exact value for the conversion to deci-Celcius would be 2731.5, but ACPI uses integers here. Some BIOS use 2731, others 2732. Some other OSes also use either one of those on their drivers.\n\nLinux uses the heuristic this patch tries to replicate here.",
      "revId": "dfb61255465cddea8c233acc2447a7ef996f6766",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ef3a089_697c9934",
        "filename": "src/add-ons/kernel/drivers/power/acpi_thermal/acpi_thermal.c",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2023-03-04T18:06:28Z",
      "side": 1,
      "message": "This should be stored in the thermal_device_info struct, just in case there are multiple thermal nodes.",
      "revId": "dfb61255465cddea8c233acc2447a7ef996f6766",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4db86c52_b0620baf",
        "filename": "src/add-ons/kernel/drivers/power/acpi_thermal/acpi_thermal.c",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1000311
      },
      "writtenOn": "2023-03-04T18:15:11Z",
      "side": 1,
      "message": "I\u0027ll give it another go. Tried to do that on a previous attempt, but failed miserably :-)\n\nHaving to reboot to test every small change (new-style drivers do not reload as the old-style ones when replaced) makes things a bit tedious.",
      "parentUuid": "3ef3a089_697c9934",
      "revId": "dfb61255465cddea8c233acc2447a7ef996f6766",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aa603632_18e3a6ea",
        "filename": "src/add-ons/kernel/drivers/power/acpi_thermal/acpi_thermal.c",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1000311
      },
      "writtenOn": "2023-03-04T19:58:55Z",
      "side": 1,
      "message": "Welp, not sure what I did wrong before. Now (patchset 2) seems to work.\n\nPlease let me know if this looks OK to you. Thanks!",
      "parentUuid": "4db86c52_b0620baf",
      "revId": "dfb61255465cddea8c233acc2447a7ef996f6766",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "22692436_185a6771",
        "filename": "src/add-ons/kernel/drivers/power/acpi_thermal/acpi_thermal.c",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 1000011
      },
      "writtenOn": "2023-03-04T18:06:28Z",
      "side": 1,
      "message": "Can you check if FreeBSD does something similar to Linux and can we copy their logic directly?",
      "revId": "dfb61255465cddea8c233acc2447a7ef996f6766",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aa275519_cf4c2ff0",
        "filename": "src/add-ons/kernel/drivers/power/acpi_thermal/acpi_thermal.c",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 1000311
      },
      "writtenOn": "2023-03-04T18:15:11Z",
      "side": 1,
      "message": "FreeBSD just uses 2731:\n\n    #define TZ_ZEROC\t2731\n    #define TZ_KELVTOC(x)\t(((x) - TZ_ZEROC) / 10), abs(((x) - TZ_ZEROC) % 10)\n\n\nOpenBSD uses 2732:\n\n    #define KTOC(k)\t\t\t((k - 2732) / 10)\n\nIllumOS uses 2732:\n\n    #define\tK_TO_C(temp)\t\t(((temp) - 2732) / 10)",
      "parentUuid": "22692436_185a6771",
      "revId": "dfb61255465cddea8c233acc2447a7ef996f6766",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "612eb85d_1c0d76af",
        "filename": "src/add-ons/kernel/drivers/power/acpi_thermal/acpi_thermal.c",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 1000311
      },
      "writtenOn": "2023-03-04T18:18:34Z",
      "side": 1,
      "message": "Just in case: I didn\u0027t copied Linux code, just the \"logic\" behind choosing either value.",
      "parentUuid": "aa275519_cf4c2ff0",
      "revId": "dfb61255465cddea8c233acc2447a7ef996f6766",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0bc3046e_01a2441d",
        "filename": "src/add-ons/kernel/drivers/power/acpi_thermal/acpi_thermal.c",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2023-03-05T09:28:12Z",
      "side": 1,
      "message": "To clarify what Linux is trying to do:\n\n- They start from the \"critical temperature\" and assume the manufacturer chose a multiple of 0.5 celcius there.\n- This is converted to 1/10 of a kelvin: Tc * 10 + 2731.5\n- This is then rounded either up or down\n- So, the value final digit will be 1 or 6 if rounded down, or 2 or 7 if rounded up\n- By computing the modulo 5, we can detect if we are in one of these two cases (the modulo will be 1 or 2)\n- If we have another value, or something that\u0027s apparently not in kelvin, we don\u0027t know what the manufacturer did, sowe can pick at random between the two possibilities.\n\nI think this deserves a comment in the code to explain what is going on (even Linux has one, and a function clearly named \"guess_offset\" to be clear that this is only a guess).\n\nLinux code for reference: https://elixir.bootlin.com/linux/latest/source/drivers/acpi/thermal.c#L986",
      "parentUuid": "612eb85d_1c0d76af",
      "revId": "dfb61255465cddea8c233acc2447a7ef996f6766",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5a698123_30e30ebc",
        "filename": "src/add-ons/kernel/drivers/power/acpi_thermal/acpi_thermal.c",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 1000311
      },
      "writtenOn": "2023-03-05T11:49:16Z",
      "side": 1,
      "message": "Thanks PulkoMandy! Hope I managed to make my limited English more or less intelligible on that function\u0027s comment.\n\nWhile we\u0027re at it... Could any of you (or anyone else reading!) please explain to me why all functions in this file are marked \"static\" except acpi_thermal_control()?\n\nComparing to the rest of the drivers under drivers/power/, for example, only pch_thermal.cpp does the same (every function except the \"ioctrl\" one being \"static\"). Well, acpi_battery.cpp has a bunch of \"utility\" functions also not marked static (besides the ones marked \"inline\", as I assume those do not need it).\n\nAs my grasp of C (and C++) is quite limited, I\u0027m puzzled by the difference :-/\n\nCould the lack of \"static\" on those functions be just an oversight (to be rectified), or is there a motive behind them not being static?\n\nThanks in advance!\n\n(also, I\u0027m leaving these comments unresolved, as I\u0027m not sure if my changes/replies are enough to \"resolve\" them).",
      "parentUuid": "0bc3046e_01a2441d",
      "revId": "dfb61255465cddea8c233acc2447a7ef996f6766",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}