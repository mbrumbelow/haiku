{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "a0af5147_5036b8d5",
        "filename": "src/system/kernel/arch/arm64/VMSAv8TranslationMap.cpp",
        "patchSetId": 2
      },
      "lineNbr": 700,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-09-09T19:46:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\t\t\tif ((oldPte \u0026 kAttrAPReadOnly) \u003d\u003d 0)\n```",
      "range": {
        "startLine": 700,
        "startChar": 0,
        "endLine": 700,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "fa639235898548d01ed41ad86b551c5b25c4e00c",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a96491a6_49f9d680",
        "filename": "src/system/kernel/arch/arm64/VMSAv8TranslationMap.cpp",
        "patchSetId": 2
      },
      "lineNbr": 702,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-09-09T19:46:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` is to remove this line/these lines.",
      "range": {
        "startLine": 702,
        "startChar": 0,
        "endLine": 702,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "fa639235898548d01ed41ad86b551c5b25c4e00c",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4fcd91fb_ecd2651a",
        "filename": "src/system/kernel/arch/arm64/VMSAv8TranslationMap.cpp",
        "patchSetId": 2
      },
      "lineNbr": 717,
      "author": {
        "id": 1000388
      },
      "writtenOn": "2024-09-09T20:12:45Z",
      "side": 1,
      "message": "Could you explain why it\u0027s not required? To me it seems that zeroing should also use atomic_test_and_set64 and retry if needed.",
      "revId": "fa639235898548d01ed41ad86b551c5b25c4e00c",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d5677c82_b4a2fec9",
        "filename": "src/system/kernel/arch/arm64/VMSAv8TranslationMap.cpp",
        "patchSetId": 2
      },
      "lineNbr": 717,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2024-09-09T20:25:41Z",
      "side": 1,
      "message": "Once we zero the PTE, it\u0027s impossible to do a compare-exchange loop because oldPte is gone. This whole operation is done under fLock (AFAICT), so there\u0027s no way for somebody else to install a different PTE between the zeroing and the installation of the final value.",
      "parentUuid": "4fcd91fb_ecd2651a",
      "revId": "fa639235898548d01ed41ad86b551c5b25c4e00c",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a7e598e9_bd12414d",
        "filename": "src/system/kernel/arch/arm64/VMSAv8TranslationMap.cpp",
        "patchSetId": 2
      },
      "lineNbr": 717,
      "author": {
        "id": 1000388
      },
      "writtenOn": "2024-09-09T20:41:43Z",
      "side": 1,
      "message": "Yeah but the issue is before PTE is zeroed.\nif ((uint64_t)atomic_test_and_set64((int64_t\\*)ptePtr, 0, oldPte) \u003d\u003d oldPte) {\nasm(\"dsb ishst\");\nFlushVAFromTLBByASID(effectiveVa);\natomic_set64((int64\\*)ptePtr, newPte);\nasm(\"dsb ishst\");\nbreak;\n}",
      "parentUuid": "d5677c82_b4a2fec9",
      "revId": "fa639235898548d01ed41ad86b551c5b25c4e00c",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "68b043d8_81d4be35",
        "filename": "src/system/kernel/arch/arm64/VMSAv8TranslationMap.cpp",
        "patchSetId": 2
      },
      "lineNbr": 725,
      "author": {
        "id": 1000630
      },
      "writtenOn": "2024-09-09T19:46:27Z",
      "side": 1,
      "message": "Suggestion from `haiku-format` (change):\n```c++\n\t\t\t\t} else if ((uint64_t)atomic_test_and_set64((int64_t*)ptePtr, newPte, oldPte)\n\t\t\t\t\t\u003d\u003d oldPte) {\n\t\t\t\t\tasm(\"dsb ishst\"); // Ensure PTE write completed\n\t\t\t\t\tif ((oldPte \u0026 kAttrAF) !\u003d 0)\n\t\t\t\t\t\tFlushVAFromTLBByASID(effectiveVa);\n\t\t\t\t\tbreak;\n```",
      "range": {
        "startLine": 719,
        "startChar": 0,
        "endLine": 725,
        "endChar": 0
      },
      "tag": "autogenerated:experimental-formatting-bot",
      "revId": "fa639235898548d01ed41ad86b551c5b25c4e00c",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}