{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "fb47a454_1341566e",
        "filename": "src/add-ons/kernel/drivers/input/hid_shared/KeyboardProtocolHandler.cpp",
        "patchSetId": 2
      },
      "lineNbr": 813,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2022-04-28T13:02:23Z",
      "side": 0,
      "message": "Are the consumer keys already forwarded to the input_server?\nCan\u0027t the Shortcuts input filter already handle such keys?\nUse Case: Choose \"Record Key\", the user presses a consumer key, the addon detects the unmapped key, the user can select the relevant action for the pressed key.",
      "revId": "1d2cf139a89f4c93fdd28454c9098931c2846ec8",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8af4c961_7f874c66",
        "filename": "src/add-ons/kernel/drivers/input/hid_shared/KeyboardProtocolHandler.cpp",
        "patchSetId": 2
      },
      "lineNbr": 813,
      "author": {
        "id": 1000214
      },
      "writtenOn": "2022-04-28T14:29:07Z",
      "side": 0,
      "message": "Yes, they are, in the form of PageID:UsageID, so a volume up it is represented as 0x000C 00E9. \n\nSo, end user applications will receive it as unmapped keys using HID codes. This patch cherry-picks some consumer keys (as suggested on another patch) and assign them another code.\n\nI am not a fan of this patch, however, I find that sending every consumer event as a keystroke is not the proper way to go. \n\nSummarizing, yes, without this patch Shortcuts preferences may get consumer events using HID codes.",
      "parentUuid": "fb47a454_1341566e",
      "revId": "1d2cf139a89f4c93fdd28454c9098931c2846ec8",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "027919d7_951a22dc",
        "filename": "src/add-ons/kernel/drivers/input/hid_shared/KeyboardProtocolHandler.cpp",
        "patchSetId": 2
      },
      "lineNbr": 813,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2022-04-28T20:48:36Z",
      "side": 0,
      "message": "Please have a look at how Qt5 maps each platform Media Play key to its own: https://github.com/qt/qtbase/search?q\u003dKey_MediaPlay\n\nso mapping a USB HID event to an OS event looks good.\n\nTheorically we could define B_MEDIA_PLAY_KEY \u003d 0x000c 00b0 and be done with it, avoiding this patch.",
      "parentUuid": "8af4c961_7f874c66",
      "revId": "1d2cf139a89f4c93fdd28454c9098931c2846ec8",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aa6a3804_9672064a",
        "filename": "src/add-ons/kernel/drivers/input/hid_shared/KeyboardProtocolHandler.cpp",
        "patchSetId": 2
      },
      "lineNbr": 813,
      "author": {
        "id": 1000214
      },
      "writtenOn": "2022-04-29T12:20:03Z",
      "side": 0,
      "message": "We can use HID namespace for key constants yes, I find it more convenient. Then we can modify this patch https://review.haiku-os.org/c/haiku/+/1695 using HID convention.\n\nBut without any filter some usages working on -n/n ranges will have a weird behavior. They are rare, however.",
      "parentUuid": "027919d7_951a22dc",
      "revId": "1d2cf139a89f4c93fdd28454c9098931c2846ec8",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a78dfdee_834f2c84",
        "filename": "src/add-ons/kernel/drivers/input/hid_shared/KeyboardProtocolHandler.cpp",
        "patchSetId": 2
      },
      "lineNbr": 813,
      "author": {
        "id": 1000214
      },
      "writtenOn": "2022-04-29T12:24:32Z",
      "side": 0,
      "message": "Also, there are some keys proposed that I couldn\u0027t find on HID Consumer tables: Shutdown,sleep, wake, airplane mode... Where do they come from? ACPI? And what scancode do we assign them? I know it is not fully related to this patch but I feel I had to add it here.",
      "parentUuid": "aa6a3804_9672064a",
      "revId": "1d2cf139a89f4c93fdd28454c9098931c2846ec8",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8fd093eb_21681c29",
        "filename": "src/add-ons/kernel/drivers/input/hid_shared/KeyboardProtocolHandler.cpp",
        "patchSetId": 2
      },
      "lineNbr": 813,
      "author": {
        "id": 1000214
      },
      "writtenOn": "2022-04-30T06:41:32Z",
      "side": 0,
      "message": "We forgot something. We already are mapping some media keys from AT keyboards. In fact it is very likely the patch where I get the codes is based on our AT keymap. Same keys, sames codes... \n\nSo... how we should proceed?",
      "parentUuid": "a78dfdee_834f2c84",
      "revId": "1d2cf139a89f4c93fdd28454c9098931c2846ec8",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c1354d16_52769304",
        "filename": "src/add-ons/kernel/drivers/input/hid_shared/KeyboardProtocolHandler.cpp",
        "patchSetId": 2
      },
      "lineNbr": 813,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2022-04-30T09:52:51Z",
      "side": 0,
      "message": "I don\u0027t follow you. there\u0027s a reason we avoid hardcoding values in drivers. Anyhow if the driver is in Haiku codebase, we can update it.",
      "parentUuid": "8fd093eb_21681c29",
      "revId": "1d2cf139a89f4c93fdd28454c9098931c2846ec8",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "540098a3_0837cbb7",
        "filename": "src/add-ons/kernel/drivers/input/hid_shared/KeyboardProtocolHandler.cpp",
        "patchSetId": 2
      },
      "lineNbr": 813,
      "author": {
        "id": 1000214
      },
      "writtenOn": "2022-04-30T17:23:02Z",
      "side": 0,
      "message": "What I mean, AT keyboard driver is already mapping media keys. So if you press volume up on a AT keyboard you receive a 0x91 and the same key on a HID device a 0x000C00E9 will get instead.\n\nI see we have to choose from:\n\n* fake AT scancodes on HID driver (we are already doing for standard keys)\n* fake HID usages at AT driver\n* create our own code table and use it in AT/PS2 and HID drivers\n\nI am not defending this patch, It feels hacky to me also. But it seems we have a better picture of a problem if we already have some code to argue on top.",
      "parentUuid": "c1354d16_52769304",
      "revId": "1d2cf139a89f4c93fdd28454c9098931c2846ec8",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "908acbe0_aa433011",
        "filename": "src/add-ons/kernel/drivers/input/hid_shared/KeyboardProtocolHandler.cpp",
        "patchSetId": 2
      },
      "lineNbr": 813,
      "author": {
        "id": 1000023
      },
      "writtenOn": "2022-05-01T10:08:46Z",
      "side": 0,
      "message": "One can update src/add-ons/kernel/bus_managers/ps2/ATKeymap.h 0x91 with B_MEDIA_VOLUME_UP_KEY, what\u0027s the problem here?",
      "parentUuid": "540098a3_0837cbb7",
      "revId": "1d2cf139a89f4c93fdd28454c9098931c2846ec8",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9bdf6add_ff504ff5",
        "filename": "src/add-ons/kernel/drivers/input/hid_shared/KeyboardProtocolHandler.cpp",
        "patchSetId": 2
      },
      "lineNbr": 813,
      "author": {
        "id": 1000214
      },
      "writtenOn": "2022-05-02T10:06:47Z",
      "side": 0,
      "message": "Using constants instead of integer literals it a good idea to me. I\u0027ll submit a new patch using constants. \n\nThing is using HID values or AT values for that constants",
      "parentUuid": "908acbe0_aa433011",
      "revId": "1d2cf139a89f4c93fdd28454c9098931c2846ec8",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e20a400d_b9cafff0",
        "filename": "src/add-ons/kernel/drivers/input/hid_shared/KeyboardProtocolHandler.cpp",
        "patchSetId": 2
      },
      "lineNbr": 813,
      "author": {
        "id": 1000001
      },
      "writtenOn": "2022-09-05T19:01:01Z",
      "side": 0,
      "message": "Why would they be \"AT\" or \"HID\" values? They are BeOS keycodes.\n\nThey go with the ones defined in https://www.haiku-os.org/docs/api/keyboard.html (which uses codes from 0x00 to 0x68) and they should be added to that same enum, in any order you want since the previous things were never properly documented.\n\nAnd the good news is, this is already done, it\u0027s exactly what you can find in https://review.haiku-os.org/c/haiku/+/1695",
      "parentUuid": "9bdf6add_ff504ff5",
      "revId": "1d2cf139a89f4c93fdd28454c9098931c2846ec8",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "96c62936_c43ddb07",
        "filename": "src/add-ons/kernel/drivers/input/hid_shared/KeyboardProtocolHandler.cpp",
        "patchSetId": 2
      },
      "lineNbr": 813,
      "author": {
        "id": 1000214
      },
      "writtenOn": "2022-09-09T07:23:27Z",
      "side": 0,
      "message": "Yes I was aware of that patch, in fact I wrote this one because of it.\n\nI am already working a input stack refactor (moving HID to userspace and so on) but is getting bigger and bigger. Perhaps I can complete this patch because the refactor will take a while.",
      "parentUuid": "e20a400d_b9cafff0",
      "revId": "1d2cf139a89f4c93fdd28454c9098931c2846ec8",
      "serverId": "40b9299a-d8a8-485d-9b01-e6d3f45eefb5"
    }
  ]
}